import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema21.example((java.lang.Object) annotatedElementSchema22);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.maximum(bigDecimal26);
        annotatedElementSchema22.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean30 = annotatedElementSchema22.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema4.properties(strMap10);
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info25 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional26 = io.swagger.jaxrs2.OperationParser.getInfo(info25);
        java.lang.Class<?> wildcardClass27 = infoOptional26.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList29 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList29, annotatedElementArray28);
        schema24.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList29);
        schema11.addExtension("no description", (java.lang.Object) schema24);
        java.lang.String str33 = schema24.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        io.swagger.oas.annotations.info.Contact contact38 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional39 = io.swagger.jaxrs2.OperationParser.getContact(contact38);
        annotatedElementSchema35.setExample((java.lang.Object) contactOptional39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.pattern("#/components/schemas/");
        schema24.addExtension("no description", (java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.additionalProperties(schema24);
        schema46.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(infoOptional26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = annotatedElementSchema0.getRequired();
        java.lang.String str15 = annotatedElementSchema0.getDescription();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.String str17 = annotatedElementSchema11.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema11.getExternalDocs();
        annotatedElementSchema11.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema22.additionalProperties(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema10.additionalProperties(schema22);
        java.math.BigDecimal bigDecimal30 = null;
        schema10.setMultipleOf(bigDecimal30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema11.setProperties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema11.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema11.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = annotatedElementSchema36.getMinProperties();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema36.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.$ref("*/*");
        java.lang.String str48 = annotatedElementSchema36.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        annotatedElementSchema36.setExternalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema51.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema51.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema51.required((java.util.List<java.lang.String>) strList62);
        annotatedElementSchema51.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema67.minProperties((java.lang.Integer) 10);
        java.lang.String str75 = annotatedElementSchema67.getName();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema67.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema51.not(schema79);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.maximum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = schema80.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema36.not(schema84);
        java.math.BigDecimal bigDecimal86 = null;
        schema85.setMinimum(bigDecimal86);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList88 = schema85.getEnum();
        java.lang.Boolean boolean89 = schema85.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema90 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema85);
        java.math.BigDecimal bigDecimal91 = null;
        schema85.setMaximum(bigDecimal91);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(annotatedElementList88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.math.BigDecimal bigDecimal5 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal5);
        java.lang.String str7 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser14 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema10.addExtension("no description", (java.lang.Object) operationParser14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema23.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = annotatedElementSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema28.multipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema23.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema42);
        annotatedElementSchema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema46 = schema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema23.minLength((java.lang.Integer) (-1));
        schema9.setExample((java.lang.Object) schema48);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema78 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema78.setPattern("");
        annotatedElementSchema78.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int83 = annotatedElementSchema78.getMinProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema78.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema78.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema78.$ref("*/*");
        java.lang.Boolean boolean90 = annotatedElementSchema78.getExclusiveMinimum();
        schema77.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema78);
        java.util.List<java.lang.String> strList92 = annotatedElementSchema78.getRequired();
        java.lang.Boolean boolean93 = annotatedElementSchema78.getUniqueItems();
        annotatedElementSchema78.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertEquals("'" + boolean93 + "' != '" + false + "'", boolean93, false);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        java.lang.reflect.AnnotatedElement annotatedElement47 = annotatedElementSchema26.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray49 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces50 = null;
        javax.ws.rs.Produces produces51 = null;
        io.swagger.oas.models.Components components52 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional53 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces50, produces51, components52);
        javax.ws.rs.Produces produces54 = null;
        javax.ws.rs.Produces produces55 = null;
        io.swagger.oas.models.Components components56 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional57 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces54, produces55, components56);
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional61 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces58, produces59, components60);
        annotatedElementSchema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces58);
        java.lang.String str63 = annotatedElementSchema26.get$ref();
        annotatedElementSchema26.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema68 = schema4.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(annotatedElement47);
        org.junit.Assert.assertNotNull(apiResponseArray49);
        org.junit.Assert.assertNotNull(apiResponsesOptional53);
        org.junit.Assert.assertNotNull(apiResponsesOptional57);
        org.junit.Assert.assertNotNull(apiResponsesOptional61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator9 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(discriminator9);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        schema19.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList35 = schema30.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList35);
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        io.swagger.oas.models.media.XML xML35 = null;
        schema33.setXml(xML35);
        java.lang.Class<?> wildcardClass37 = schema33.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        java.util.List<java.lang.String> strList28 = null;
        schema27.setRequired(strList28);
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        schema27.setDiscriminator(discriminator30);
        io.swagger.oas.models.media.Schema schema32 = schema27.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema32);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = annotatedElementSchema13.getExtensions();
        schema12.setExtensions(strMap19);
        schema8.setExtensions(strMap19);
        java.lang.String str22 = schema8.toString();
        io.swagger.oas.models.media.Schema schema23 = schema8.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema23.setMaxItems((java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = annotatedElementSchema33.getMinItems();
        annotatedElementSchema33.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema33.externalDocs(externalDocumentation45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema33.minimum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        annotatedElementSchema51.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.Integer int60 = annotatedElementSchema51.getMinItems();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.minimum(bigDecimal61);
        annotatedElementSchema51.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema51.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean67 = annotatedElementSchema51.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema51.getDiscriminator();
        schema48.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Discriminator discriminator70 = annotatedElementSchema51.getDiscriminator();
        annotatedElementSchema51.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        java.lang.Class<?> wildcardClass74 = schema32.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMinimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema18 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal28);
        java.lang.String str30 = annotatedElementSchema23.getName();
        io.swagger.oas.models.media.Schema schema31 = schema20.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema schema33 = schema20.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str34 = schema33.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "*/*" + "'", str34, "*/*");
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema schema14 = schema7.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.Integer int14 = schema13.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.License license24 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional25 = io.swagger.jaxrs2.OperationParser.getLicense(license24);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema21.example((java.lang.Object) licenseOptional25);
        java.lang.String str27 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = annotatedElementSchema21.getExternalDocs();
        annotatedElementSchema21.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = annotatedElementSchema21.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal35 = null;
        annotatedElementSchema34.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema34.minProperties((java.lang.Integer) 0);
        schema38.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema44.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema48.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = annotatedElementSchema48.getMinItems();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.minimum(bigDecimal58);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList60 = schema59.getEnum();
        io.swagger.oas.models.media.Schema schema62 = schema59.maxLength((java.lang.Integer) (-1));
        schema44.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema schema65 = schema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema21.example((java.lang.Object) schema44);
        java.lang.Integer int67 = annotatedElementSchema21.getMaxLength();
        boolean boolean68 = annotatedElementSchema0.equals((java.lang.Object) int67);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = annotatedElementSchema0.getExtensions();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(licenseOptional25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(annotatedElementList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(strMap69);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) false);
        schema19.setNullable((java.lang.Boolean) false);
        schema19.setFormat("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        schema9.setMaximum(bigDecimal12);
        schema9.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        schema10.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema14.getExternalDocs();
        java.lang.String str16 = schema14.get$ref();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        io.swagger.oas.annotations.info.Contact contact19 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional20 = io.swagger.jaxrs2.OperationParser.getContact(contact19);
        annotatedElementSchema16.setExample((java.lang.Object) contactOptional20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema23.maxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal30 = null;
        annotatedElementSchema29.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema29.nullable((java.lang.Boolean) false);
        annotatedElementSchema29.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema29.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str39 = annotatedElementSchema38.getPattern();
        annotatedElementSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = annotatedElementSchema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema38.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema38.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info49 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional50 = io.swagger.jaxrs2.OperationParser.getInfo(info49);
        java.lang.Class<?> wildcardClass51 = infoOptional50.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray52 = new java.lang.reflect.AnnotatedElement[] { wildcardClass51 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList53 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList53, annotatedElementArray52);
        schema48.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList53);
        annotatedElementSchema29.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList53);
        schema23.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList53);
        schema14.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList53);
        annotatedElementSchema0.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList53);
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(contactOptional20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(infoOptional50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(annotatedElementArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.Boolean boolean12 = schema8.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema8.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema8.getExternalDocs();
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.xml(xML15);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj14 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema15.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema15.setNullable((java.lang.Boolean) false);
        annotatedElementSchema15.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema15.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema34.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema34.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema15.required((java.util.List<java.lang.String>) strList45);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList49 = annotatedElementSchema15.getEnum();
        io.swagger.oas.models.media.XML xML50 = annotatedElementSchema15.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema51.pattern("hi!");
        schema60.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema60.getAdditionalProperties();
        boolean boolean64 = annotatedElementSchema15.equals((java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = schema66.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setExample((java.lang.Object) schema66);
        java.lang.Integer int70 = annotatedElementSchema0.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(annotatedElementList49);
        org.junit.Assert.assertNull(xML50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("hi!");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray7 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces8 = null;
        javax.ws.rs.Produces produces9 = null;
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional11 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray7, produces8, produces9, components10);
        javax.ws.rs.Produces produces12 = null;
        javax.ws.rs.Produces produces13 = null;
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional15 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray7, produces12, produces13, components14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.example((java.lang.Object) apiResponseArray7);
        java.lang.String str17 = schema16.toString();
        io.swagger.oas.models.media.Schema schema19 = schema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(apiResponseArray7);
        org.junit.Assert.assertNotNull(apiResponsesOptional11);
        org.junit.Assert.assertNotNull(apiResponsesOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.nullable((java.lang.Boolean) true);
        java.lang.Integer int16 = schema15.getMinLength();
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str20 = annotatedElementSchema19.getPattern();
        annotatedElementSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = annotatedElementSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        schema28.setTitle("#/components/schemas/");
        java.lang.Integer int31 = schema28.getMinLength();
        java.lang.Integer int32 = schema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema33.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema33.setMinProperties((java.lang.Integer) 100);
        schema28.setExample((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema49.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList55);
        java.lang.Integer int58 = annotatedElementSchema49.getMinItems();
        annotatedElementSchema49.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema49.externalDocs(externalDocumentation61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema49.minimum(bigDecimal63);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.multipleOf(bigDecimal65);
        io.swagger.oas.models.media.Schema schema67 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema67.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema69.maxItems((java.lang.Integer) (-1));
        schema15.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema15.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        java.lang.String str7 = annotatedElementSchema0.get$ref();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.getNot();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        java.lang.String str12 = annotatedElementSchema7.getDescription();
        java.lang.Object obj13 = annotatedElementSchema7.getExample();
        annotatedElementSchema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema13.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema13.discriminator(discriminator19);
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = null;
        schema13.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema33.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList45 = annotatedElementSchema33.getRequired();
        io.swagger.oas.models.media.Schema schema46 = schema32.required(strList45);
        schema13.setRequired(strList45);
        io.swagger.oas.models.media.Discriminator discriminator48 = schema13.getDiscriminator();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator48);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema15.getMaxLength();
        schema15.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema15.minimum(bigDecimal21);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.externalDocs(externalDocumentation13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema14.getProperties();
        java.lang.Integer int16 = schema14.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator12 = schema11.getDiscriminator();
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator12);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema19.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = schema19.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        schema6.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str4, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        annotatedElementSchema19.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema19.minItems((java.lang.Integer) 0);
        annotatedElementSchema19.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        java.lang.Boolean boolean46 = annotatedElementSchema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema19.example((java.lang.Object) boolean46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema47.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.Boolean boolean6 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.String str9 = annotatedElementSchema7.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        annotatedElementSchema7.setXml(xML10);
        io.swagger.oas.models.media.XML xML12 = annotatedElementSchema7.getXml();
        java.lang.String str13 = annotatedElementSchema7.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        schema23.setType("#/components/schemas/");
        java.lang.String str29 = schema23.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        annotatedElementSchema31.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema31.minItems((java.lang.Integer) 0);
        java.lang.String str44 = schema43.getType();
        io.swagger.oas.models.media.XML xML45 = null;
        schema43.setXml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema23.getProperties();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema7.properties(strMap48);
        annotatedElementSchema0.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        annotatedElementSchema14.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema14.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        annotatedElementSchema34.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.nullable((java.lang.Boolean) false);
        schema33.setDefault((java.lang.Object) annotatedElementSchema34);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema34.discriminator(discriminator45);
        annotatedElementSchema14.setExample((java.lang.Object) annotatedElementSchema34);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema14.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.nullable((java.lang.Boolean) true);
        schema51.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        io.swagger.oas.annotations.info.License license49 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional50 = io.swagger.jaxrs2.OperationParser.getLicense(license49);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema46.example((java.lang.Object) licenseOptional50);
        java.lang.Boolean boolean52 = schema51.getReadOnly();
        schema45.setDefault((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema54 = schema33.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 10);
        java.lang.String str65 = schema62.toString();
        java.lang.Integer int66 = schema62.getMaxProperties();
        java.lang.String str67 = schema62.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str69 = annotatedElementSchema68.getPattern();
        annotatedElementSchema68.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean72 = annotatedElementSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema68.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str76 = annotatedElementSchema75.getPattern();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema68.not((io.swagger.oas.models.media.Schema) annotatedElementSchema75);
        annotatedElementSchema75.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema75.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema75.pattern("");
        java.lang.Boolean boolean84 = schema83.getWriteOnly();
        io.swagger.oas.models.media.Schema schema85 = schema62.not(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema83.exclusiveMaximum((java.lang.Boolean) true);
        schema54.setExample((java.lang.Object) schema87);
        io.swagger.oas.models.media.Schema schema90 = schema54.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.multipleOf(bigDecimal91);
        io.swagger.oas.models.media.XML xML93 = null;
        schema92.setXml(xML93);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(licenseOptional50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str65, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = annotatedElementSchema36.getMinProperties();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray47 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        io.swagger.oas.models.media.Schema schema50 = schema43.required((java.util.List<java.lang.String>) strList48);
        annotatedElementSchema27.setDefault((java.lang.Object) strList48);
        io.swagger.oas.models.media.Schema schema52 = schema23.required((java.util.List<java.lang.String>) strList48);
        java.lang.Integer int53 = schema23.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema25.getNullable();
        java.lang.Object obj27 = schema25.getExample();
        java.lang.Boolean boolean28 = schema25.getWriteOnly();
        schema25.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        schema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = annotatedElementSchema24.getMinItems();
        annotatedElementSchema24.setType("hi!");
        java.util.List<java.lang.String> strList36 = annotatedElementSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema21.required(strList36);
        java.lang.Boolean boolean38 = schema37.getExclusiveMinimum();
        java.lang.Integer int39 = schema37.getMinLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = schema27.getMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        schema21.setRequired(strList22);
        java.util.List<java.lang.String> strList24 = schema21.getRequired();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.XML xML8 = schema4.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = schema4.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = schema4.getExternalDocs();
        java.lang.String str11 = schema4.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema4.discriminator(discriminator14);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(xML8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(externalDocumentation10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema18.setDiscriminator(discriminator19);
        schema18.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema40.xml(xML49);
        java.math.BigDecimal bigDecimal51 = null;
        schema50.setMultipleOf(bigDecimal51);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 0);
        java.lang.Integer int14 = schema13.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema13.setDiscriminator(discriminator15);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.readOnly((java.lang.Boolean) false);
        schema9.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMultipleOf(bigDecimal9);
        schema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema22.addProperties("hi!", schema26);
        java.lang.String[] strArray34 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional35 = io.swagger.jaxrs2.OperationParser.getTags(strArray34);
        io.swagger.oas.models.media.Schema schema36 = schema22.example((java.lang.Object) strArray34);
        io.swagger.oas.models.media.Schema schema38 = schema36.minLength((java.lang.Integer) 1);
        boolean boolean39 = schema14.equals((java.lang.Object) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(tagSetOptional35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal23 = null;
        annotatedElementSchema0.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Discriminator discriminator25 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator25);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        schema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        schema27.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("");
        java.lang.String str25 = schema22.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema22.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        schema7.setFormat("*/*");
        schema7.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.minimum(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema7.addProperties("", schema49);
        io.swagger.oas.models.media.Schema schema51 = schema49.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        schema49.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int62 = annotatedElementSchema57.getMinProperties();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema57.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str68 = annotatedElementSchema67.getPattern();
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema67.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = annotatedElementSchema71.getExtensions();
        schema70.setExtensions(strMap77);
        annotatedElementSchema57.setExtensions(strMap77);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema57.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema57.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = schema83.exclusiveMinimum((java.lang.Boolean) true);
        schema85.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean88 = schema85.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema89 = schema49.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema85);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema85.minimum(bigDecimal90);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = null;
        schema91.setExternalDocs(externalDocumentation92);
        io.swagger.oas.models.media.XML xML94 = null;
        io.swagger.oas.models.media.Schema schema95 = schema91.xml(xML94);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema9.maxItems((java.lang.Integer) 0);
        java.lang.String str23 = schema9.getPattern();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema9.externalDocs(externalDocumentation24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.externalDocs(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema9.maxItems((java.lang.Integer) 0);
        java.lang.String str23 = schema9.getPattern();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema9.externalDocs(externalDocumentation24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        java.lang.String str27 = schema25.getTitle();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.minimum(bigDecimal28);
        java.lang.Boolean boolean30 = schema25.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        java.lang.Object obj5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema3.example(obj5);
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        schema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser14 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema10.addExtension("no description", (java.lang.Object) operationParser14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema schema38 = schema27.not(schema37);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.properties(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = annotatedElementSchema41.getExtensions();
        schema38.setExtensions(strMap49);
        schema17.setExtensions(strMap49);
        java.lang.Integer int52 = schema17.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = schema6.additionalProperties(schema17);
        schema6.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean13 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.util.RandomAccess> randomAccessSchema18 = new io.swagger.oas.models.media.Schema<java.util.RandomAccess>();
        schema15.setExample((java.lang.Object) randomAccessSchema18);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.nullable((java.lang.Boolean) true);
        java.lang.String str39 = schema38.get$ref();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema13.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = null;
        schema13.setNot(schema16);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str12 = annotatedElementSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = annotatedElementSchema0.getProperties();
        java.lang.Integer int12 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator15 = annotatedElementSchema0.getDiscriminator();
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(discriminator15);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        java.lang.Integer int11 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema13 = schema4.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.lang.Boolean boolean18 = schema17.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema10.description("");
        schema12.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema15.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean19 = schema18.getNullable();
        io.swagger.oas.models.media.Schema schema21 = schema18.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema12.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        annotatedElementSchema21.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setType("default");
        java.lang.String str38 = annotatedElementSchema21.get$ref();
        java.math.BigDecimal bigDecimal39 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal39);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList25 = schema9.getEnum();
        java.lang.Boolean boolean26 = schema9.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator27 = schema9.getDiscriminator();
        java.math.BigDecimal bigDecimal28 = schema9.getMaximum();
        schema9.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(annotatedElementList25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema31.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.multipleOf(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = schema49.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.discriminator(discriminator48);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        java.lang.Integer int29 = schema20.getMinLength();
        schema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema20.discriminator(discriminator32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean35 = annotatedElementSchema34.getReadOnly();
        java.lang.String str36 = annotatedElementSchema34.get$ref();
        io.swagger.oas.models.media.XML xML37 = null;
        annotatedElementSchema34.setXml(xML37);
        io.swagger.oas.models.media.XML xML39 = annotatedElementSchema34.getXml();
        java.lang.Boolean boolean40 = annotatedElementSchema34.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean42 = annotatedElementSchema41.getReadOnly();
        java.lang.String str43 = annotatedElementSchema41.get$ref();
        io.swagger.oas.models.media.XML xML44 = null;
        annotatedElementSchema41.setXml(xML44);
        io.swagger.oas.models.media.XML xML46 = annotatedElementSchema41.getXml();
        java.lang.String str47 = annotatedElementSchema41.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.minLength((java.lang.Integer) 10);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator60 = schema57.getDiscriminator();
        schema57.setType("#/components/schemas/");
        java.lang.String str63 = schema57.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema65.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema65.setNullable((java.lang.Boolean) false);
        annotatedElementSchema65.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema65.minItems((java.lang.Integer) 0);
        java.lang.String str78 = schema77.getType();
        io.swagger.oas.models.media.XML xML79 = null;
        schema77.setXml(xML79);
        io.swagger.oas.models.media.Schema schema81 = schema57.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema41.properties(strMap82);
        annotatedElementSchema34.setProperties(strMap82);
        schema20.setProperties(strMap82);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.type("");
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        schema19.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        annotatedElementSchema0.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        java.lang.reflect.AnnotatedElement annotatedElement36 = annotatedElementSchema15.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema15.setNot(schema43);
        annotatedElementSchema15.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.addProperties("hi!", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean52 = annotatedElementSchema51.getReadOnly();
        java.lang.String str53 = annotatedElementSchema51.get$ref();
        io.swagger.oas.models.media.XML xML54 = null;
        annotatedElementSchema51.setXml(xML54);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema51.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema0.addProperties("hi!", (io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        annotatedElementSchema51.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(annotatedElement36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.multipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema33.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.minLength((java.lang.Integer) 10);
        java.lang.String str48 = schema47.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean51 = annotatedElementSchema50.getReadOnly();
        java.lang.Boolean boolean52 = annotatedElementSchema50.getNullable();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        annotatedElementSchema50.setRequired((java.util.List<java.lang.String>) strList55);
        java.lang.String str58 = annotatedElementSchema50.getDescription();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema50.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema47.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema50);
        annotatedElementSchema50.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema50.maxItems((java.lang.Integer) (-1));
        annotatedElementSchema50.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML68 = null;
        annotatedElementSchema50.setXml(xML68);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema50.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema50);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema50.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema74.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int34 = schema11.getMinProperties();
        schema11.setNullable((java.lang.Boolean) true);
        schema11.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.Contact contact21 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional22 = io.swagger.jaxrs2.OperationParser.getContact(contact21);
        annotatedElementSchema18.setExample((java.lang.Object) contactOptional22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        java.lang.String str26 = annotatedElementSchema18.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema18.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema18.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema18.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema18.addRequiredItem("");
        schema36.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str39 = schema36.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator50 = annotatedElementSchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.properties(strMap57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema42.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.multipleOf(bigDecimal61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.maximum(bigDecimal63);
        schema62.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema62.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal70 = null;
        annotatedElementSchema69.setMultipleOf(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema69.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList74 = annotatedElementSchema69.getEnum();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema69.description("hi!");
        java.lang.Object obj77 = schema76.getExample();
        io.swagger.oas.models.media.Schema schema79 = schema76.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema76.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema83 = schema81.minProperties((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass84 = schema83.getClass();
        schema62.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass84);
        schema36.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass84);
        schema15.setDefault((java.lang.Object) schema36);
        java.lang.Integer int88 = schema36.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(annotatedElementList74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNull(int88);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        java.math.BigDecimal bigDecimal9 = null;
        schema7.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.xml(xML42);
        java.lang.String str44 = schema43.getFormat();
        schema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean49 = annotatedElementSchema48.getReadOnly();
        java.lang.Boolean boolean50 = annotatedElementSchema48.getNullable();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList53);
        java.lang.String str56 = annotatedElementSchema48.getDescription();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema59.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator67 = annotatedElementSchema59.getDiscriminator();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema48.not((io.swagger.oas.models.media.Schema) annotatedElementSchema59);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema59.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema59.setMaxProperties((java.lang.Integer) 0);
        schema43.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema59);
        io.swagger.oas.models.media.Schema schema75 = schema43.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema7.additionalProperties(schema75);
        java.lang.String str77 = schema75.get$ref();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        schema64.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema64.setName("");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        java.lang.String[] strArray30 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList31);
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.getAdditionalProperties();
        java.lang.String str45 = annotatedElementSchema37.getTitle();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str51 = annotatedElementSchema50.getPattern();
        annotatedElementSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = annotatedElementSchema50.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema50.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema50.not((io.swagger.oas.models.media.Schema) annotatedElementSchema57);
        schema59.setTitle("#/components/schemas/");
        java.lang.Integer int62 = schema59.getMinLength();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema59.minimum(bigDecimal63);
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray65 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces66 = null;
        javax.ws.rs.Produces produces67 = null;
        io.swagger.oas.models.Components components68 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional69 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray65, produces66, produces67, components68);
        javax.ws.rs.Produces produces70 = null;
        javax.ws.rs.Produces produces71 = null;
        io.swagger.oas.models.Components components72 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional73 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray65, produces70, produces71, components72);
        javax.ws.rs.Produces produces74 = null;
        javax.ws.rs.Produces produces75 = null;
        io.swagger.oas.models.Components components76 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional77 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray65, produces74, produces75, components76);
        java.lang.Class<?> wildcardClass78 = apiResponseArray65.getClass();
        schema64.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass78);
        schema49.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass78);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(apiResponseArray65);
        org.junit.Assert.assertNotNull(apiResponsesOptional69);
        org.junit.Assert.assertNotNull(apiResponsesOptional73);
        org.junit.Assert.assertNotNull(apiResponsesOptional77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema7.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema7.nullable((java.lang.Boolean) false);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        java.lang.Integer int15 = annotatedElementSchema7.getMaxItems();
        java.lang.Integer int16 = annotatedElementSchema7.getMinLength();
        annotatedElementSchema7.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = annotatedElementSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser28 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema24.addExtension("no description", (java.lang.Object) operationParser28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema42.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int10 = schema7.getMaxLength();
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int23 = annotatedElementSchema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema12.addProperties("hi!", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        java.math.BigDecimal bigDecimal27 = null;
        schema12.setMinimum(bigDecimal27);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema5.exclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema5.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = null;
        annotatedElementSchema5.setMaximum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal20 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        java.lang.String str56 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema21.maximum(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.minimum(bigDecimal60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = schema61.getProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.Boolean boolean27 = annotatedElementSchema25.getNullable();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList30);
        schema22.setRequired((java.util.List<java.lang.String>) strList30);
        schema9.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema36 = schema9.description("#/components/schemas/");
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.Boolean boolean9 = annotatedElementSchema7.getNullable();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema7.setRequired((java.util.List<java.lang.String>) strList12);
        java.lang.String str15 = annotatedElementSchema7.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray27 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema23.required((java.util.List<java.lang.String>) strList28);
        annotatedElementSchema7.setDefault((java.lang.Object) strList28);
        io.swagger.oas.models.media.Schema schema32 = schema6.required((java.util.List<java.lang.String>) strList28);
        schema32.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        java.lang.reflect.AnnotatedElement annotatedElement29 = annotatedElementSchema8.getDefault();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema8.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str51 = annotatedElementSchema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        boolean boolean57 = annotatedElementSchema44.equals((java.lang.Object) annotatedElementSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        annotatedElementSchema44.setExternalDocs(externalDocumentation58);
        java.lang.String[] strArray61 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema31.additionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema67 = schema4.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.String str70 = annotatedElementSchema68.get$ref();
        io.swagger.oas.models.media.XML xML71 = null;
        annotatedElementSchema68.setXml(xML71);
        java.lang.Boolean boolean73 = annotatedElementSchema68.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema31.not(schema75);
        io.swagger.oas.models.media.Discriminator discriminator77 = schema75.getDiscriminator();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElement29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(discriminator77);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = annotatedElementSchema13.getDescription();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator32 = annotatedElementSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        java.lang.String str42 = annotatedElementSchema34.getName();
        annotatedElementSchema13.setDefault((java.lang.Object) annotatedElementSchema34);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.xml(xML44);
        java.lang.String str46 = schema45.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.properties(strMap53);
        schema54.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema54.addProperties("hi!", schema58);
        java.lang.String[] strArray66 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional67 = io.swagger.jaxrs2.OperationParser.getTags(strArray66);
        io.swagger.oas.models.media.Schema schema68 = schema54.example((java.lang.Object) strArray66);
        schema68.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema71.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        annotatedElementSchema71.setRequired((java.util.List<java.lang.String>) strList77);
        java.lang.Integer int80 = annotatedElementSchema71.getMinItems();
        annotatedElementSchema71.setType("hi!");
        java.util.List<java.lang.String> strList83 = annotatedElementSchema71.getRequired();
        io.swagger.oas.models.media.Schema schema84 = schema68.required(strList83);
        boolean boolean85 = schema45.equals((java.lang.Object) schema84);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema12.properties(strMap86);
        schema12.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema91 = schema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema93 = schema12.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(tagSetOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal21 = schema20.getMinimum();
        java.lang.Boolean boolean22 = schema20.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        schema27.setFormat("*/*");
        schema27.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        schema27.setProperties(strMap32);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema27.getExtensions();
        schema20.setExample((java.lang.Object) schema27);
        schema27.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        java.lang.String str11 = annotatedElementSchema0.getFormat();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 100);
        java.lang.reflect.AnnotatedElement annotatedElement18 = annotatedElementSchema0.getDefault();
        java.lang.Boolean boolean19 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(annotatedElement18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema4.properties(strMap10);
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info25 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional26 = io.swagger.jaxrs2.OperationParser.getInfo(info25);
        java.lang.Class<?> wildcardClass27 = infoOptional26.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList29 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList29, annotatedElementArray28);
        schema24.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList29);
        schema11.addExtension("no description", (java.lang.Object) schema24);
        java.lang.String str33 = schema24.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        io.swagger.oas.annotations.info.Contact contact38 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional39 = io.swagger.jaxrs2.OperationParser.getContact(contact38);
        annotatedElementSchema35.setExample((java.lang.Object) contactOptional39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.pattern("#/components/schemas/");
        schema24.addExtension("no description", (java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema46.deprecated((java.lang.Boolean) false);
        java.lang.String str51 = schema50.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(infoOptional26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str9 = schema8.getType();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.maximum(bigDecimal10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema11.getProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        java.lang.Boolean boolean65 = schema32.getNullable();
        io.swagger.oas.models.media.Schema schema67 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema72 = schema32.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = schema29.getExternalDocs();
        java.lang.String str31 = schema29.getType();
        java.math.BigDecimal bigDecimal32 = schema29.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(bigDecimal32);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema27 = schema18.maxProperties((java.lang.Integer) 100);
        schema18.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList7 = schema6.getEnum();
        java.lang.Integer int8 = schema6.getMaxProperties();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.multipleOf(bigDecimal9);
        java.lang.Boolean boolean11 = schema6.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema13.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str33 = schema32.getType();
        io.swagger.oas.models.media.Schema schema34 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema32);
        java.lang.Boolean boolean35 = schema32.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(annotatedElementList7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal6 = null;
        annotatedElementSchema5.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema5.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = annotatedElementSchema5.getEnum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.description("hi!");
        java.lang.Object obj13 = schema12.getExample();
        io.swagger.oas.models.media.Schema schema15 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("");
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema20.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema50 = schema4.pattern("");
        java.math.BigDecimal bigDecimal51 = schema50.getMinimum();
        java.lang.Integer int52 = schema50.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.maxLength((java.lang.Integer) (-1));
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.example(obj15);
        java.lang.Boolean boolean17 = schema11.getExclusiveMaximum();
        schema11.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema11.getFormat();
        java.lang.String str15 = schema11.get$ref();
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMultipleOf(bigDecimal16);
        java.lang.String str18 = schema11.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema11.$ref("*/*");
        schema20.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str23 = schema20.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema5.getNot();
        java.lang.Integer int32 = annotatedElementSchema5.getMaxProperties();
        io.swagger.oas.models.media.XML xML33 = null;
        annotatedElementSchema5.setXml(xML33);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList35 = annotatedElementSchema5.getEnum();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema5.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(annotatedElementList35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema27.minLength((java.lang.Integer) 10);
        schema29.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator32 = schema29.getDiscriminator();
        schema29.setType("#/components/schemas/");
        java.lang.String str35 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema37.setNullable((java.lang.Boolean) false);
        annotatedElementSchema37.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema37.minItems((java.lang.Integer) 0);
        java.lang.String str50 = schema49.getType();
        io.swagger.oas.models.media.XML xML51 = null;
        schema49.setXml(xML51);
        io.swagger.oas.models.media.Schema schema53 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = schema29.getProperties();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema10.properties(strMap54);
        io.swagger.oas.models.media.Schema schema56 = schema4.properties(strMap54);
        io.swagger.oas.models.media.Schema schema58 = schema4.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        schema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxItems((java.lang.Integer) (-1));
        schema13.setExample((java.lang.Object) (-1));
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema13.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        schema4.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        java.lang.Integer int13 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema15 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema15.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema15.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema26.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.maximum(bigDecimal29);
        schema15.setNot(schema30);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema17.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = schema22.getDeprecated();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.XML xML30 = null;
        schema24.setXml(xML30);
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema24.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean36 = schema35.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema8.getDefault();
        annotatedElementSchema8.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.License license25 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional26 = io.swagger.jaxrs2.OperationParser.getLicense(license25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.example((java.lang.Object) licenseOptional26);
        java.lang.String str28 = annotatedElementSchema22.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = annotatedElementSchema22.getExternalDocs();
        annotatedElementSchema22.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMaximum(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList41 = schema40.getRequired();
        java.lang.Boolean boolean42 = schema40.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str44 = annotatedElementSchema43.getPattern();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema43.maxProperties((java.lang.Integer) 0);
        java.lang.String str47 = schema46.getFormat();
        java.lang.String str48 = schema46.getFormat();
        java.math.BigDecimal bigDecimal49 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal52 = null;
        annotatedElementSchema51.setMultipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        schema55.setFormat("*/*");
        java.math.BigDecimal bigDecimal58 = schema55.getMinimum();
        io.swagger.oas.models.media.Schema schema60 = schema55.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema62 = schema60.deprecated((java.lang.Boolean) false);
        schema46.setExample((java.lang.Object) schema62);
        io.swagger.oas.models.media.Schema schema65 = schema46.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = schema40.example((java.lang.Object) schema46);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minLength((java.lang.Integer) 10);
        schema16.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator19 = schema16.getDiscriminator();
        schema16.setType("#/components/schemas/");
        java.lang.String str22 = schema16.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema24.setNullable((java.lang.Boolean) false);
        annotatedElementSchema24.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema24.minItems((java.lang.Integer) 0);
        java.lang.String str37 = schema36.getType();
        io.swagger.oas.models.media.XML xML38 = null;
        schema36.setXml(xML38);
        io.swagger.oas.models.media.Schema schema40 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema16.getProperties();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema0.properties(strMap41);
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        schema7.setType("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = schema7.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema23.getType();
        schema23.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema23.setDeprecated((java.lang.Boolean) true);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema7.additionalProperties(schema23);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema39 = schema35.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Schema schema26 = schema9.maxProperties((java.lang.Integer) 0);
        schema9.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = annotatedElementSchema29.getFormat();
        java.lang.Object obj37 = annotatedElementSchema29.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema38.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        annotatedElementSchema38.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = annotatedElementSchema38.getMinItems();
        annotatedElementSchema38.setType("hi!");
        java.lang.Boolean boolean50 = annotatedElementSchema38.getNullable();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema52.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean55 = schema52.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.properties(strMap63);
        java.lang.Object obj65 = annotatedElementSchema57.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = annotatedElementSchema57.getExtensions();
        schema52.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap66);
        annotatedElementSchema29.setExtensions(strMap66);
        schema9.setExtensions(strMap66);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema9.properties(strMap70);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + true + "'", boolean55, true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int14 = schema11.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.$ref("*/*");
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema38.minimum(bigDecimal50);
        java.lang.String str52 = schema51.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str54 = annotatedElementSchema53.getPattern();
        annotatedElementSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean57 = annotatedElementSchema53.getWriteOnly();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema53.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str60 = annotatedElementSchema53.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str62 = annotatedElementSchema61.getPattern();
        annotatedElementSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean65 = annotatedElementSchema61.getWriteOnly();
        boolean boolean66 = annotatedElementSchema53.equals((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        annotatedElementSchema53.setExternalDocs(externalDocumentation67);
        java.lang.String[] strArray70 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema74 = schema51.required((java.util.List<java.lang.String>) strList71);
        annotatedElementSchema26.setExample((java.lang.Object) strList71);
        boolean boolean76 = schema11.equals((java.lang.Object) annotatedElementSchema26);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        java.lang.String str9 = schema6.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        schema10.set$ref("hi!");
        java.lang.Boolean boolean13 = schema10.getDeprecated();
        schema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema10.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 0);
        java.lang.String str15 = schema12.getType();
        io.swagger.oas.models.media.Schema schema17 = schema12.minItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal18 = null;
        schema12.setMinimum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        schema20.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema20.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema20.getNot();
        java.lang.Integer int30 = schema20.getMinLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 10);
        schema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = schema7.getMaximum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema11.getUniqueItems();
        java.math.BigDecimal bigDecimal15 = null;
        schema11.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        java.lang.Boolean boolean17 = schema14.getNullable();
        schema14.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema14 = schema12.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        annotatedElementSchema15.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema15.type("");
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minProperties((java.lang.Integer) 100);
        annotatedElementSchema15.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = annotatedElementSchema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray40 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        io.swagger.oas.models.media.Schema schema43 = schema36.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema15.required((java.util.List<java.lang.String>) strList41);
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema45 = schema14.required((java.util.List<java.lang.String>) strList41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int34 = schema11.getMinProperties();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema11.multipleOf(bigDecimal35);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        java.lang.Boolean boolean19 = schema17.getExclusiveMinimum();
        schema17.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema9.example((java.lang.Object) 0);
        java.lang.Object obj23 = schema22.getExample();
        java.lang.String str24 = schema22.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + obj23 + "' != '" + 0 + "'", obj23, 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        java.lang.Class<?> wildcardClass19 = contentOptional18.getClass();
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema13.multipleOf(bigDecimal18);
        java.lang.Boolean boolean20 = schema13.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getExclusiveMaximum();
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema10.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema41 = schema35.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema41.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        schema4.set$ref("#/components/schemas/");
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema schema11 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.xml(xML24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema26.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = annotatedElementSchema26.getMinItems();
        annotatedElementSchema26.setType("hi!");
        java.util.List<java.lang.String> strList38 = annotatedElementSchema26.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema25.required(strList38);
        annotatedElementSchema0.setRequired(strList38);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema38.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema30 = schema13.minLength((java.lang.Integer) 1);
        java.lang.Object obj31 = null;
        schema13.setDefault(obj31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser37 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema33.addExtension("no description", (java.lang.Object) operationParser37);
        annotatedElementSchema33.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        annotatedElementSchema33.setDiscriminator(discriminator41);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.multipleOf(bigDecimal43);
        schema44.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = annotatedElementSchema47.getMinProperties();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.xml(xML55);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema57.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        annotatedElementSchema57.setRequired((java.util.List<java.lang.String>) strList63);
        java.lang.Integer int66 = annotatedElementSchema57.getMinItems();
        annotatedElementSchema57.setType("hi!");
        java.util.List<java.lang.String> strList69 = annotatedElementSchema57.getRequired();
        io.swagger.oas.models.media.Schema schema70 = schema56.required(strList69);
        schema44.setRequired(strList69);
        schema13.setRequired(strList69);
        schema13.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        schema8.setFormat("");
        schema8.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        schema34.set$ref("no description");
        io.swagger.oas.models.media.Schema schema38 = schema34.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean42 = annotatedElementSchema41.getReadOnly();
        java.lang.String str43 = annotatedElementSchema41.get$ref();
        io.swagger.oas.models.media.XML xML44 = null;
        annotatedElementSchema41.setXml(xML44);
        io.swagger.oas.models.media.XML xML46 = annotatedElementSchema41.getXml();
        java.lang.String str47 = annotatedElementSchema41.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.minLength((java.lang.Integer) 10);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator60 = schema57.getDiscriminator();
        schema57.setType("#/components/schemas/");
        java.lang.String str63 = schema57.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema65.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema65.setNullable((java.lang.Boolean) false);
        annotatedElementSchema65.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema65.minItems((java.lang.Integer) 0);
        java.lang.String str78 = schema77.getType();
        io.swagger.oas.models.media.XML xML79 = null;
        schema77.setXml(xML79);
        io.swagger.oas.models.media.Schema schema81 = schema57.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema41.properties(strMap82);
        schema40.setProperties(strMap82);
        schema8.setProperties(strMap82);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator13 = schema11.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.xml(xML17);
        java.util.List<java.lang.String> strList19 = schema11.getRequired();
        io.swagger.oas.models.media.Schema schema21 = schema11.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not(schema34);
        schema8.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema38 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML39 = schema38.getXml();
        java.lang.Boolean boolean40 = schema38.getUniqueItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        schema35.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema35.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema20.setAdditionalProperties(schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.properties(strMap53);
        io.swagger.oas.models.media.Schema schema56 = schema54.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        annotatedElementSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean61 = annotatedElementSchema57.getWriteOnly();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema57.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str65 = annotatedElementSchema64.getPattern();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema57.not((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema schema67 = schema56.not(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int73 = annotatedElementSchema68.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = annotatedElementSchema68.getExternalDocs();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema68.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str78 = annotatedElementSchema77.getPattern();
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema77.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema81.setPattern("");
        annotatedElementSchema81.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = annotatedElementSchema81.getExtensions();
        schema80.setExtensions(strMap87);
        schema76.setExtensions(strMap87);
        schema66.setExtensions(strMap87);
        schema35.setExtensions(strMap87);
        schema35.setMaxProperties((java.lang.Integer) 10);
        schema35.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema97 = schema35.readOnly((java.lang.Boolean) false);
        java.lang.String str98 = schema97.getDescription();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(externalDocumentation74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema4.minimum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int34 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema36 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema78 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema78.setPattern("");
        annotatedElementSchema78.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int83 = annotatedElementSchema78.getMinProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema78.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema78.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema78.$ref("*/*");
        java.lang.Boolean boolean90 = annotatedElementSchema78.getExclusiveMinimum();
        schema77.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema78);
        java.util.List<java.lang.String> strList92 = annotatedElementSchema78.getRequired();
        java.lang.Integer int93 = annotatedElementSchema78.getMaxLength();
        java.lang.Boolean boolean94 = annotatedElementSchema78.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNull(strList92);
        org.junit.Assert.assertNull(int93);
        org.junit.Assert.assertNull(boolean94);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getDescription();
        java.lang.reflect.AnnotatedElement annotatedElement12 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema16.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema16.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(annotatedElement12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str23 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean25 = annotatedElementSchema24.getReadOnly();
        java.lang.Boolean boolean26 = annotatedElementSchema24.getNullable();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList29);
        java.lang.String str32 = annotatedElementSchema24.getDescription();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator43 = annotatedElementSchema35.getDiscriminator();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema24.not((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.minProperties((java.lang.Integer) 10);
        java.lang.String str53 = annotatedElementSchema45.getName();
        annotatedElementSchema24.setDefault((java.lang.Object) annotatedElementSchema45);
        io.swagger.oas.models.media.Schema schema55 = null;
        annotatedElementSchema24.setNot(schema55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema24.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList59 = annotatedElementSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema24.writeOnly((java.lang.Boolean) false);
        java.lang.String str62 = annotatedElementSchema24.getType();
        java.lang.String[] strArray68 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList69);
        java.lang.Boolean boolean73 = annotatedElementSchema11.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + true + "'", boolean73, true);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator3 = null;
        annotatedElementSchema0.setDiscriminator(discriminator3);
        java.lang.String str5 = annotatedElementSchema0.get$ref();
        java.lang.Boolean boolean6 = annotatedElementSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema0.setMaximum(bigDecimal7);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int15 = schema12.getMaxItems();
        schema12.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = annotatedElementSchema18.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema18.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.$ref("*/*");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema18.minimum(bigDecimal30);
        java.lang.String str32 = schema31.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        annotatedElementSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = annotatedElementSchema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema33.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str40 = annotatedElementSchema33.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        annotatedElementSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = annotatedElementSchema41.getWriteOnly();
        boolean boolean46 = annotatedElementSchema33.equals((java.lang.Object) annotatedElementSchema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        annotatedElementSchema33.setExternalDocs(externalDocumentation47);
        java.lang.String[] strArray50 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema54 = schema31.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int60 = annotatedElementSchema55.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema55.getExternalDocs();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema55.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema54.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema54.name("*/*");
        schema12.setAdditionalProperties(schema66);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList68 = schema66.getEnum();
        io.swagger.oas.models.media.Schema schema70 = schema66.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(annotatedElementList68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 1);
        java.lang.String str18 = schema17.getDescription();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema17.getTitle();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema64.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        annotatedElementSchema64.setRequired((java.util.List<java.lang.String>) strList70);
        java.lang.Integer int73 = annotatedElementSchema64.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement74 = annotatedElementSchema64.getDefault();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema76.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema16.not(schema76);
        io.swagger.oas.models.media.Schema schema81 = schema79.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema81.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(annotatedElement74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema4.multipleOf(bigDecimal11);
        schema12.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema13.setMaxItems((java.lang.Integer) (-1));
        schema13.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMultipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = annotatedElementSchema12.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema12.minimum(bigDecimal27);
        schema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        schema9.setType("*/*");
        java.lang.Object obj32 = schema9.getExample();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "Optional.empty");
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        java.lang.Boolean boolean12 = schema8.getReadOnly();
        java.lang.Integer int13 = schema8.getMinLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema11.setDiscriminator(discriminator14);
        java.util.List<java.lang.String> strList16 = schema11.getRequired();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.xml(xML15);
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema9.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML23 = schema22.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(xML23);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema19.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        schema19.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        annotatedElementSchema0.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema13.setReadOnly((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        schema12.setType("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        schema12.setNot(schema24);
        schema12.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema12.minimum(bigDecimal29);
        schema12.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema14.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = schema21.getMaxProperties();
        schema21.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema26.getExternalDocs();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.maximum(bigDecimal23);
        schema24.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList29 = annotatedElementSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.description("hi!");
        java.lang.Object obj32 = schema31.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.License license36 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional37 = io.swagger.jaxrs2.OperationParser.getLicense(license36);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema33.example((java.lang.Object) licenseOptional37);
        java.lang.String str39 = annotatedElementSchema33.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema33.getExternalDocs();
        annotatedElementSchema33.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema44);
        java.lang.String[] strArray58 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = schema31.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema31.discriminator(discriminator62);
        schema22.setNot(schema63);
        schema63.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int67 = schema63.getMaxProperties();
        schema63.set$ref("*/*");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElementList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(licenseOptional37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int67);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray16 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces25, produces26, components27);
        java.lang.Class<?> wildcardClass29 = apiResponseArray16.getClass();
        schema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = annotatedElementSchema32.getEnum();
        annotatedElementSchema32.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = annotatedElementSchema40.getMinItems();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        java.lang.Boolean boolean54 = schema52.getNullable();
        io.swagger.oas.models.media.Schema schema55 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema52);
        java.lang.Boolean boolean56 = schema52.getDeprecated();
        java.lang.Integer int57 = schema52.getMaxProperties();
        schema52.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(apiResponseArray16);
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElementList37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        schema10.setNullable((java.lang.Boolean) false);
        java.lang.Integer int13 = schema10.getMinLength();
        java.lang.String str14 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema10.exclusiveMaximum((java.lang.Boolean) true);
        schema10.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("default");
        java.lang.Integer int30 = schema27.getMaxItems();
        io.swagger.oas.models.media.Schema schema32 = schema27.readOnly((java.lang.Boolean) true);
        schema32.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.maxLength((java.lang.Integer) 1);
        schema16.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML19 = null;
        schema16.setXml(xML19);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        schema11.setDefault((java.lang.Object) annotatedElementSchema14);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getReadOnly();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal19);
        java.lang.Boolean boolean21 = annotatedElementSchema14.getWriteOnly();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema19 = schema17.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.xml(xML16);
        java.lang.Integer int18 = schema9.getMaxLength();
        java.math.BigDecimal bigDecimal19 = schema9.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        annotatedElementSchema0.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema7.minProperties((java.lang.Integer) 0);
        java.lang.Integer int10 = annotatedElementSchema7.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        boolean boolean15 = annotatedElementSchema0.equals((java.lang.Object) schema12);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema14.setWriteOnly((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema14.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = annotatedElementSchema38.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema38.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.title("#/components/schemas/");
        schema37.setNot(schema48);
        schema37.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal54 = schema37.getMinimum();
        java.lang.Boolean boolean55 = schema37.getUniqueItems();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = annotatedElementSchema0.getNullable();
        java.lang.String str37 = annotatedElementSchema0.getDescription();
        java.math.BigDecimal bigDecimal38 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        java.lang.reflect.AnnotatedElement annotatedElement47 = annotatedElementSchema26.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray49 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces50 = null;
        javax.ws.rs.Produces produces51 = null;
        io.swagger.oas.models.Components components52 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional53 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces50, produces51, components52);
        javax.ws.rs.Produces produces54 = null;
        javax.ws.rs.Produces produces55 = null;
        io.swagger.oas.models.Components components56 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional57 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces54, produces55, components56);
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional61 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces58, produces59, components60);
        annotatedElementSchema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces58);
        java.lang.String str63 = annotatedElementSchema26.get$ref();
        annotatedElementSchema26.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = schema68.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(annotatedElement47);
        org.junit.Assert.assertNotNull(apiResponseArray49);
        org.junit.Assert.assertNotNull(apiResponsesOptional53);
        org.junit.Assert.assertNotNull(apiResponsesOptional57);
        org.junit.Assert.assertNotNull(apiResponsesOptional61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.discriminator(discriminator39);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        schema7.setFormat("*/*");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema7.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema35.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema35.addRequiredItem("#/components/schemas/");
        java.lang.Class<?> wildcardClass42 = schema41.getClass();
        schema32.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass42);
        io.swagger.oas.models.media.Schema schema45 = schema32.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        schema7.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema7.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema7.getProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.Integer int5 = schema4.getMinLength();
        schema4.setMaxLength((java.lang.Integer) (-1));
        schema4.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        java.math.BigDecimal bigDecimal14 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.lang.Integer int23 = schema22.getMaxItems();
        io.swagger.oas.models.media.XML xML24 = null;
        schema22.setXml(xML24);
        java.math.BigDecimal bigDecimal26 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.discriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.maximum(bigDecimal29);
        schema22.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema22);
        java.math.BigDecimal bigDecimal34 = null;
        annotatedElementSchema0.setMaximum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.minProperties((java.lang.Integer) 0);
        schema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String str13 = schema12.toString();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        schema12.setUniqueItems((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass17 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        java.lang.String str16 = schema15.getFormat();
        java.lang.reflect.AnnotatedElement annotatedElement17 = null;
        schema15.addEnumItemObject(annotatedElement17);
        java.lang.Boolean boolean19 = schema15.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.License license36 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional37 = io.swagger.jaxrs2.OperationParser.getLicense(license36);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema33.example((java.lang.Object) licenseOptional37);
        java.lang.Boolean boolean39 = schema38.getReadOnly();
        schema32.setDefault((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(licenseOptional37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList15 = schema14.getRequired();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.type("default");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema schema20 = schema13.not(schema18);
        java.lang.String str21 = schema18.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.not(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema27.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        schema7.setMaxLength((java.lang.Integer) 1);
        java.lang.String str14 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema7.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        annotatedElementSchema18.setProperties(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        java.lang.String str35 = annotatedElementSchema27.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.properties(strMap36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema27.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema27.minimum(bigDecimal42);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema43.setDiscriminator(discriminator44);
        java.lang.Boolean boolean46 = schema43.getExclusiveMaximum();
        annotatedElementSchema18.setNot(schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = annotatedElementSchema18.getProperties();
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema18.xml(xML49);
        io.swagger.oas.models.media.Schema schema51 = schema50.getNot();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema51.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema55 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema51);
        java.math.BigDecimal bigDecimal56 = schema7.getMaximum();
        java.lang.Integer int57 = schema7.getMinProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.XML xML10 = null;
        schema7.setXml(xML10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema7.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = annotatedElementSchema28.getExtensions();
        schema27.setExtensions(strMap34);
        annotatedElementSchema14.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema14.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema7.setXml(xML40);
        java.util.List<java.lang.String> strList42 = schema7.getRequired();
        java.lang.Boolean boolean43 = schema7.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("");
        schema9.setFormat("default");
        java.lang.Integer int16 = schema9.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        io.swagger.oas.annotations.info.Contact contact20 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional21 = io.swagger.jaxrs2.OperationParser.getContact(contact20);
        annotatedElementSchema17.setExample((java.lang.Object) contactOptional21);
        annotatedElementSchema17.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.type("");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.nullable((java.lang.Boolean) false);
        schema28.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.Boolean boolean33 = annotatedElementSchema31.getNullable();
        schema28.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema31.deprecated((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass37 = schema36.getClass();
        schema9.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass37);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(contactOptional21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMinimum(bigDecimal18);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        annotatedElementSchema15.setProperties(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        io.swagger.oas.annotations.info.Contact contact27 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional28 = io.swagger.jaxrs2.OperationParser.getContact(contact27);
        annotatedElementSchema24.setExample((java.lang.Object) contactOptional28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        java.lang.String str32 = annotatedElementSchema24.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema24.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema24.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema24.minimum(bigDecimal39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        schema40.setDiscriminator(discriminator41);
        java.lang.Boolean boolean43 = schema40.getExclusiveMaximum();
        annotatedElementSchema15.setNot(schema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = annotatedElementSchema15.getProperties();
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema15.xml(xML46);
        io.swagger.oas.models.media.Schema schema48 = schema47.getNot();
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema48);
        java.lang.Boolean boolean50 = schema48.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(contactOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.math.BigDecimal bigDecimal5 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal5);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList9 = annotatedElementSchema0.getRequired();
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMaximum();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema0.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema10.format("#/components/schemas/");
        schema10.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML12 = null;
        schema11.setXml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        java.lang.Object obj22 = annotatedElementSchema14.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema14.getExtensions();
        boolean boolean24 = schema11.equals((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema11.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.pattern("hi!");
        io.swagger.oas.models.media.Schema schema44 = schema32.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        schema44.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        java.lang.String str22 = schema21.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator23 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema24.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.xml(xML35);
        java.lang.Boolean boolean37 = schema36.getDeprecated();
        java.lang.Boolean boolean38 = schema36.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        io.swagger.oas.annotations.info.Contact contact42 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional43 = io.swagger.jaxrs2.OperationParser.getContact(contact42);
        annotatedElementSchema39.setExample((java.lang.Object) contactOptional43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal54 = null;
        annotatedElementSchema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema53.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList58 = annotatedElementSchema53.getEnum();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.description("hi!");
        java.lang.Object obj61 = schema60.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        io.swagger.oas.annotations.info.License license65 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional66 = io.swagger.jaxrs2.OperationParser.getLicense(license65);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema62.example((java.lang.Object) licenseOptional66);
        java.lang.String str68 = annotatedElementSchema62.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = annotatedElementSchema62.getExternalDocs();
        annotatedElementSchema62.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema60.additionalProperties(schema73);
        java.lang.String[] strArray87 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        io.swagger.oas.models.media.Schema schema90 = schema60.required((java.util.List<java.lang.String>) strList88);
        schema52.setRequired((java.util.List<java.lang.String>) strList88);
        schema36.setRequired((java.util.List<java.lang.String>) strList88);
        schema21.setRequired((java.util.List<java.lang.String>) strList88);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(contactOptional43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(annotatedElementList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(licenseOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = annotatedElementSchema20.getDescription();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator39 = annotatedElementSchema31.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema31.setMaxProperties((java.lang.Integer) 0);
        annotatedElementSchema31.setPattern("hi!");
        schema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema31.getAdditionalProperties();
        annotatedElementSchema31.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema48);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema10.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.Integer int23 = annotatedElementSchema14.getMinItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.minimum(bigDecimal24);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList26 = schema25.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema25.maxLength((java.lang.Integer) (-1));
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema schema31 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema28.discriminator(discriminator32);
        schema28.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElementList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema31.addProperties("no description", schema41);
        schema4.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema4.example((java.lang.Object) annotatedElementSchema47);
        schema64.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMultipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = annotatedElementSchema12.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema12.minimum(bigDecimal27);
        schema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        schema9.setType("*/*");
        java.lang.Class<?> wildcardClass32 = schema9.getClass();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema15.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        java.lang.String str27 = annotatedElementSchema19.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema19.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema19.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema19.addRequiredItem("");
        java.lang.Boolean boolean38 = annotatedElementSchema19.getWriteOnly();
        java.math.BigDecimal bigDecimal39 = annotatedElementSchema19.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema19.getExtensions();
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) strMap40);
        java.math.BigDecimal bigDecimal42 = schema41.getMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema20.setDiscriminator(discriminator23);
        java.math.BigDecimal bigDecimal25 = null;
        schema20.setMinimum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray23 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces24 = null;
        javax.ws.rs.Produces produces25 = null;
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional27 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces24, produces25, components26);
        javax.ws.rs.Produces produces28 = null;
        javax.ws.rs.Produces produces29 = null;
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional31 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces28, produces29, components30);
        javax.ws.rs.Produces produces32 = null;
        javax.ws.rs.Produces produces33 = null;
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional35 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces32, produces33, components34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces32);
        java.lang.Integer int37 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        schema41.setDescription("");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(apiResponseArray23);
        org.junit.Assert.assertNotNull(apiResponsesOptional27);
        org.junit.Assert.assertNotNull(apiResponsesOptional31);
        org.junit.Assert.assertNotNull(apiResponsesOptional35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 1);
        java.lang.String str24 = schema23.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("hi!");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Discriminator discriminator8 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema15.getExtensions();
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema15.maximum(bigDecimal30);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema31);
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str30 = annotatedElementSchema23.getFormat();
        annotatedElementSchema23.setDescription("no description");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.type("default");
        java.math.BigDecimal bigDecimal35 = annotatedElementSchema23.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str47 = annotatedElementSchema46.getPattern();
        annotatedElementSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = annotatedElementSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema46.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str54 = annotatedElementSchema53.getPattern();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema46.not((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        io.swagger.oas.models.media.Schema schema56 = schema45.not(schema55);
        schema45.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema45.$ref("default");
        io.swagger.oas.models.media.Schema schema62 = schema45.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        schema64.setType("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal68 = null;
        annotatedElementSchema67.setMultipleOf(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema67.minProperties((java.lang.Integer) 0);
        schema71.setFormat("*/*");
        schema71.setUniqueItems((java.lang.Boolean) true);
        java.lang.Object obj76 = schema71.getExample();
        schema64.setNot(schema71);
        java.lang.Class<?> wildcardClass78 = schema71.getClass();
        annotatedElementSchema23.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass78);
        schema20.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass78);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema11.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema9.discriminator(discriminator17);
        java.lang.Boolean boolean19 = schema18.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        annotatedElementSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = annotatedElementSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema28);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema33.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        java.lang.String str40 = annotatedElementSchema32.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema32.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema32.minimum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema32.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = annotatedElementSchema51.getMinProperties();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema51.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str62 = annotatedElementSchema61.getPattern();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema61.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = annotatedElementSchema65.getExtensions();
        schema64.setExtensions(strMap71);
        annotatedElementSchema51.setExtensions(strMap71);
        schema50.setExtensions(strMap71);
        io.swagger.oas.models.media.Schema schema75 = schema31.additionalProperties(schema50);
        java.lang.Integer int76 = schema50.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema50.getProperties();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("default");
        java.lang.Integer int30 = schema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.properties(strMap34);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = annotatedElementSchema28.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = annotatedElementSchema39.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema39.$ref("*/*");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema39.minimum(bigDecimal51);
        schema52.setMaxItems((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass55 = schema52.getClass();
        annotatedElementSchema28.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass55);
        schema25.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass55);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int7 = schema6.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int12 = annotatedElementSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema38.xml(xML48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.externalDocs(externalDocumentation50);
        schema49.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.xml(xML21);
        java.lang.Object obj23 = schema22.getExample();
        java.lang.Integer int24 = schema22.getMinItems();
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.not(schema25);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean37 = annotatedElementSchema36.getReadOnly();
        java.lang.Boolean boolean38 = annotatedElementSchema36.getNullable();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList41);
        java.math.BigDecimal bigDecimal44 = annotatedElementSchema36.getMultipleOf();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema36.maxProperties((java.lang.Integer) 0);
        java.lang.String str47 = annotatedElementSchema36.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.minLength((java.lang.Integer) 10);
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator60 = schema57.getDiscriminator();
        schema57.setType("#/components/schemas/");
        java.lang.String str63 = schema57.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema65.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema65.setNullable((java.lang.Boolean) false);
        annotatedElementSchema65.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema65.minItems((java.lang.Integer) 0);
        java.lang.String str78 = schema77.getType();
        io.swagger.oas.models.media.XML xML79 = null;
        schema77.setXml(xML79);
        io.swagger.oas.models.media.Schema schema81 = schema57.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema36.properties(strMap82);
        io.swagger.oas.models.media.Schema schema84 = schema35.properties(strMap82);
        io.swagger.oas.models.media.Schema schema86 = schema84.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema4.properties(strMap10);
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info25 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional26 = io.swagger.jaxrs2.OperationParser.getInfo(info25);
        java.lang.Class<?> wildcardClass27 = infoOptional26.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList29 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList29, annotatedElementArray28);
        schema24.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList29);
        schema11.addExtension("no description", (java.lang.Object) schema24);
        java.lang.String str33 = schema24.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        io.swagger.oas.annotations.info.Contact contact38 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional39 = io.swagger.jaxrs2.OperationParser.getContact(contact38);
        annotatedElementSchema35.setExample((java.lang.Object) contactOptional39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.pattern("#/components/schemas/");
        schema24.addExtension("no description", (java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema schema48 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Object obj49 = schema24.getExample();
        schema24.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(infoOptional26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema23 = schema22.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.Boolean boolean27 = annotatedElementSchema25.getNullable();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList30);
        java.math.BigDecimal bigDecimal33 = annotatedElementSchema25.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema35.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        schema39.setFormat("*/*");
        schema39.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal46 = null;
        annotatedElementSchema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema45.minProperties((java.lang.Integer) 0);
        schema49.setFormat("*/*");
        java.math.BigDecimal bigDecimal52 = schema49.getMinimum();
        io.swagger.oas.models.media.Schema schema53 = schema39.addProperties("no description", schema49);
        io.swagger.oas.models.media.Schema schema55 = schema39.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str57 = annotatedElementSchema56.getPattern();
        annotatedElementSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean60 = annotatedElementSchema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = annotatedElementSchema56.getProperties();
        schema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema56);
        schema39.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema25.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema25.getNot();
        java.lang.Class<?> wildcardClass69 = annotatedElementSchema25.getClass();
        // The following exception was thrown during execution in test generation
        try {
            schema23.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) wildcardClass69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(schema68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema48 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema4.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema4.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema0.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList42 = annotatedElementSchema37.getEnum();
        annotatedElementSchema37.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema45.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        annotatedElementSchema45.setRequired((java.util.List<java.lang.String>) strList51);
        java.lang.Integer int54 = annotatedElementSchema45.getMinItems();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema45.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema45);
        java.math.BigDecimal bigDecimal58 = schema57.getMinimum();
        io.swagger.oas.models.media.Schema schema59 = schema36.not(schema57);
        schema59.setUniqueItems((java.lang.Boolean) true);
        schema59.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(annotatedElementList42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal32 = annotatedElementSchema27.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.format("default");
        io.swagger.oas.models.media.Schema schema35 = schema24.additionalProperties(schema34);
        schema35.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal39 = null;
        annotatedElementSchema38.setMultipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema38.minProperties((java.lang.Integer) 0);
        schema42.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = schema42.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema48.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = annotatedElementSchema48.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement58 = annotatedElementSchema48.getDefault();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema42.not(schema60);
        io.swagger.oas.models.media.Schema schema63 = schema60.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema60.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = schema35.not(schema65);
        java.lang.Integer int67 = schema35.getMaxProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(annotatedElement58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        io.swagger.oas.annotations.info.License license49 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional50 = io.swagger.jaxrs2.OperationParser.getLicense(license49);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema46.example((java.lang.Object) licenseOptional50);
        java.lang.Boolean boolean52 = schema51.getReadOnly();
        schema45.setDefault((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema54 = schema33.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 10);
        java.lang.String str65 = schema62.toString();
        java.lang.Integer int66 = schema62.getMaxProperties();
        java.lang.String str67 = schema62.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str69 = annotatedElementSchema68.getPattern();
        annotatedElementSchema68.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean72 = annotatedElementSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema68.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str76 = annotatedElementSchema75.getPattern();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema68.not((io.swagger.oas.models.media.Schema) annotatedElementSchema75);
        annotatedElementSchema75.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema75.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema75.pattern("");
        java.lang.Boolean boolean84 = schema83.getWriteOnly();
        io.swagger.oas.models.media.Schema schema85 = schema62.not(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema83.exclusiveMaximum((java.lang.Boolean) true);
        schema54.setExample((java.lang.Object) schema87);
        io.swagger.oas.models.media.Schema schema90 = schema54.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.multipleOf(bigDecimal91);
        schema92.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(licenseOptional50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str65, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser14 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema10.addExtension("no description", (java.lang.Object) operationParser14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema10.required((java.util.List<java.lang.String>) strList22);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.maximum(bigDecimal26);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMinimum(bigDecimal28);
        java.util.List<java.lang.String> strList30 = schema27.getRequired();
        schema9.setRequired(strList30);
        java.util.List<java.lang.String> strList32 = schema9.getRequired();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = schema13.getRequired();
        java.math.BigDecimal bigDecimal15 = null;
        schema13.setMultipleOf(bigDecimal15);
        java.lang.String str17 = schema13.getTitle();
        schema13.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.Contact contact24 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional25 = io.swagger.jaxrs2.OperationParser.getContact(contact24);
        annotatedElementSchema21.setExample((java.lang.Object) contactOptional25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        java.lang.String str29 = annotatedElementSchema21.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.minimum(bigDecimal36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(contactOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema4.minLength((java.lang.Integer) 100);
        java.lang.Object obj11 = schema10.getExample();
        schema10.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.title("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema15.toString();
        io.swagger.oas.models.media.Schema schema18 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str19 = schema15.toString();
        schema15.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema15.setMaximum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str19, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema21.example((java.lang.Object) annotatedElementSchema22);
        schema21.setMinItems((java.lang.Integer) 10);
        schema21.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema21.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        schema7.setType("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        java.lang.String[] strArray39 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "no description", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "default" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema7.required((java.util.List<java.lang.String>) strList40);
        java.math.BigDecimal bigDecimal43 = null;
        schema42.setMaximum(bigDecimal43);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema34.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = schema34.getUniqueItems();
        schema34.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema10.deprecated((java.lang.Boolean) false);
        schema28.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema9.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema31.addProperties("no description", schema41);
        schema4.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema4.example((java.lang.Object) annotatedElementSchema47);
        annotatedElementSchema47.setMaxProperties((java.lang.Integer) 100);
        annotatedElementSchema47.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema47.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean71 = schema70.getUniqueItems();
        java.lang.String str72 = schema70.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema schema43 = null;
        annotatedElementSchema12.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema12.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList47 = annotatedElementSchema12.getRequired();
        annotatedElementSchema0.setRequired(strList47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.XML xML52 = null;
        annotatedElementSchema49.setXml(xML52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        java.lang.String str57 = annotatedElementSchema49.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema11.xml(xML46);
        java.lang.String str48 = annotatedElementSchema11.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema11.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema50.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.properties(strMap59);
        io.swagger.oas.models.media.Schema schema62 = schema60.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str64 = annotatedElementSchema63.getPattern();
        annotatedElementSchema63.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean67 = annotatedElementSchema63.getWriteOnly();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema63.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str71 = annotatedElementSchema70.getPattern();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema63.not((io.swagger.oas.models.media.Schema) annotatedElementSchema70);
        io.swagger.oas.models.media.Schema schema73 = schema62.not(schema72);
        io.swagger.oas.models.media.Schema schema75 = schema72.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema72.maxProperties((java.lang.Integer) 100);
        schema52.setNot(schema72);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "no description" + "'", str48, "no description");
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 0);
        schema19.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean29 = schema28.getNullable();
        io.swagger.oas.models.media.Schema schema31 = schema28.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.readOnly((java.lang.Boolean) false);
        schema19.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        schema19.setDiscriminator(discriminator35);
        io.swagger.oas.models.media.Schema schema38 = schema19.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        annotatedElementSchema49.setProperties(strMap61);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap61);
        io.swagger.oas.models.media.Schema schema65 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = schema38.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal68 = null;
        schema38.setMinimum(bigDecimal68);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema11.name("");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        io.swagger.oas.annotations.info.Contact contact33 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional34 = io.swagger.jaxrs2.OperationParser.getContact(contact33);
        annotatedElementSchema30.setExample((java.lang.Object) contactOptional34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = schema37.getExclusiveMinimum();
        java.lang.Boolean boolean39 = schema37.getExclusiveMinimum();
        schema37.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = schema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema27.additionalProperties(schema43);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(contactOptional34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.format("");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getExclusiveMaximum();
        annotatedElementSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList17 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(annotatedElementList17);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        annotatedElementSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str39 = annotatedElementSchema38.getPattern();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        schema40.setTitle("#/components/schemas/");
        java.lang.Integer int43 = schema40.getMinLength();
        java.lang.Integer int44 = schema40.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        io.swagger.oas.annotations.info.Contact contact48 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional49 = io.swagger.jaxrs2.OperationParser.getContact(contact48);
        annotatedElementSchema45.setExample((java.lang.Object) contactOptional49);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema45.setMinProperties((java.lang.Integer) 100);
        schema40.setExample((java.lang.Object) annotatedElementSchema45);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema45.deprecated((java.lang.Boolean) false);
        schema59.setDescription("");
        java.lang.Boolean boolean62 = schema59.getDeprecated();
        annotatedElementSchema27.setDefault((java.lang.Object) boolean62);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        annotatedElementSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean69 = annotatedElementSchema27.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(contactOptional49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = annotatedElementSchema12.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        java.lang.String str41 = annotatedElementSchema33.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not(schema47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema49.title("hi!");
        schema48.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        annotatedElementSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj60 = annotatedElementSchema49.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema49.externalDocs(externalDocumentation61);
        annotatedElementSchema49.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema49.minItems((java.lang.Integer) 1);
        annotatedElementSchema49.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema8.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMinimum(bigDecimal11);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) (-1));
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = null;
        schema19.setXml(xML20);
        io.swagger.oas.models.media.Schema schema23 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal29 = annotatedElementSchema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.format("default");
        schema31.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema43.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str49 = annotatedElementSchema48.getPattern();
        annotatedElementSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean52 = annotatedElementSchema48.getWriteOnly();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str55 = annotatedElementSchema48.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str57 = annotatedElementSchema56.getPattern();
        annotatedElementSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean60 = annotatedElementSchema56.getWriteOnly();
        boolean boolean61 = annotatedElementSchema48.equals((java.lang.Object) annotatedElementSchema56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        annotatedElementSchema48.setExternalDocs(externalDocumentation62);
        java.lang.String[] strArray65 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = schema47.required((java.util.List<java.lang.String>) strList66);
        java.lang.Integer int70 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema schema72 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema31.not(schema47);
        io.swagger.oas.models.media.Schema schema74 = schema19.additionalProperties(schema47);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        java.lang.String str11 = annotatedElementSchema0.getPattern();
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        annotatedElementSchema0.setDiscriminator(discriminator13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        annotatedElementSchema0.setType("no description");
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.multipleOf(bigDecimal26);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = annotatedElementSchema0.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.Integer int10 = annotatedElementSchema0.getMaxProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.xml(xML16);
        java.util.List<java.lang.String> strList18 = null;
        schema17.setRequired(strList18);
        java.lang.String str20 = schema17.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.xml(xML17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser23 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema19.addExtension("no description", (java.lang.Object) operationParser23);
        annotatedElementSchema19.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        annotatedElementSchema19.setDiscriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.multipleOf(bigDecimal29);
        annotatedElementSchema19.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.externalDocs(externalDocumentation33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        schema34.setProperties(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.Contact contact41 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional42 = io.swagger.jaxrs2.OperationParser.getContact(contact41);
        annotatedElementSchema38.setExample((java.lang.Object) contactOptional42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema49.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        io.swagger.oas.models.media.Schema schema52 = schema16.example((java.lang.Object) schema34);
        java.lang.Integer int53 = schema34.getMaxItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(contactOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser12 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema8.addExtension("no description", (java.lang.Object) operationParser12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.properties(strMap14);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        java.lang.String str19 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean24 = annotatedElementSchema23.getReadOnly();
        java.lang.Boolean boolean25 = annotatedElementSchema23.getNullable();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema23.setRequired((java.util.List<java.lang.String>) strList28);
        java.math.BigDecimal bigDecimal31 = annotatedElementSchema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal34 = null;
        annotatedElementSchema33.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        schema37.setFormat("*/*");
        schema37.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal44 = null;
        annotatedElementSchema43.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        schema47.setFormat("*/*");
        java.math.BigDecimal bigDecimal50 = schema47.getMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema37.addProperties("no description", schema47);
        io.swagger.oas.models.media.Schema schema53 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str55 = annotatedElementSchema54.getPattern();
        annotatedElementSchema54.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = annotatedElementSchema54.getWriteOnly();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema54.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = annotatedElementSchema54.getProperties();
        schema37.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        schema37.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema23.setAdditionalProperties(schema37);
        io.swagger.oas.models.media.Schema schema67 = schema37.pattern("");
        io.swagger.oas.models.media.Schema schema69 = schema37.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema0.addProperties("#/components/schemas/", schema37);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String str12 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = annotatedElementSchema20.getDescription();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator39 = annotatedElementSchema31.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema31.setMaxProperties((java.lang.Integer) 0);
        annotatedElementSchema31.setPattern("hi!");
        schema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        annotatedElementSchema31.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Discriminator discriminator5 = null;
        annotatedElementSchema0.setDiscriminator(discriminator5);
        java.lang.String str7 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema8.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema8.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        schema19.setProperties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        annotatedElementSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = annotatedElementSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema22.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.properties(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema34.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.properties(strMap44);
        java.lang.String str46 = schema45.getName();
        io.swagger.oas.annotations.info.Info info47 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional48 = io.swagger.jaxrs2.OperationParser.getInfo(info47);
        java.lang.Class<?> wildcardClass49 = infoOptional48.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema50.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        annotatedElementSchema50.setRequired((java.util.List<java.lang.String>) strList56);
        java.lang.Integer int59 = annotatedElementSchema50.getMinItems();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema50.minimum(bigDecimal60);
        annotatedElementSchema50.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass64 = annotatedElementSchema50.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema65.properties(strMap71);
        io.swagger.oas.models.media.Schema schema74 = schema72.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass75 = schema72.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray76 = new java.lang.reflect.AnnotatedElement[] { wildcardClass49, wildcardClass64, wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList77 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList77, annotatedElementArray76);
        schema45.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList77);
        schema33.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList77);
        schema19.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList77);
        annotatedElementSchema0.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList77);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(infoOptional48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(annotatedElementArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray23 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces24 = null;
        javax.ws.rs.Produces produces25 = null;
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional27 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces24, produces25, components26);
        javax.ws.rs.Produces produces28 = null;
        javax.ws.rs.Produces produces29 = null;
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional31 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces28, produces29, components30);
        javax.ws.rs.Produces produces32 = null;
        javax.ws.rs.Produces produces33 = null;
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional35 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces32, produces33, components34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces32);
        java.lang.Boolean boolean37 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema39.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(apiResponseArray23);
        org.junit.Assert.assertNotNull(apiResponsesOptional27);
        org.junit.Assert.assertNotNull(apiResponsesOptional31);
        org.junit.Assert.assertNotNull(apiResponsesOptional35);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) true);
        schema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        java.lang.reflect.AnnotatedElement annotatedElement33 = annotatedElementSchema12.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema12.setNot(schema40);
        java.lang.String str42 = schema40.getDescription();
        java.lang.String str43 = schema40.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        io.swagger.oas.annotations.info.Contact contact47 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional48 = io.swagger.jaxrs2.OperationParser.getContact(contact47);
        annotatedElementSchema44.setExample((java.lang.Object) contactOptional48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema44.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList56 = annotatedElementSchema44.getRequired();
        boolean boolean57 = schema40.equals((java.lang.Object) strList56);
        schema7.setRequired(strList56);
        java.lang.String str59 = schema7.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(annotatedElement33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(contactOptional48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        java.math.BigDecimal bigDecimal31 = null;
        annotatedElementSchema5.setMaximum(bigDecimal31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 1);
        schema17.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema25.getNullable();
        java.lang.Object obj27 = schema25.getExample();
        java.lang.Boolean boolean28 = schema25.getWriteOnly();
        schema25.setMinProperties((java.lang.Integer) 1);
        schema25.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema25.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema34.setMinProperties((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList37 = schema34.getRequired();
        java.lang.Integer int38 = schema34.getMinLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.minimum(bigDecimal13);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.String[] strArray17 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema26.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema4.maxLength((java.lang.Integer) 1);
        schema4.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        schema15.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        schema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema15.getProperties();
        java.lang.String str22 = schema15.getType();
        java.math.BigDecimal bigDecimal23 = schema15.getMultipleOf();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement20 = annotatedElementSchema10.getDefault();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema4.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema22.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema33.required((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        java.lang.String str43 = schema40.getDescription();
        schema25.setDefault((java.lang.Object) str43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema46.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema46.setNullable((java.lang.Boolean) false);
        annotatedElementSchema46.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema46.minItems((java.lang.Integer) 0);
        java.lang.String str59 = schema58.getType();
        io.swagger.oas.models.media.Schema schema61 = schema58.maxItems((java.lang.Integer) 1);
        schema25.setAdditionalProperties(schema61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema25.maximum(bigDecimal63);
        schema64.setMinProperties((java.lang.Integer) 100);
        java.lang.String str67 = schema64.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(annotatedElement20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema25 = schema15.required((java.util.List<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema27 = schema25.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema27.setDescription("#/components/schemas/");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema schema65 = schema16.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema65.getNot();
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str71 = annotatedElementSchema70.getPattern();
        annotatedElementSchema70.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean74 = annotatedElementSchema70.getWriteOnly();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema70.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema70.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema70.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema70.properties(strMap80);
        io.swagger.oas.models.media.Schema schema83 = schema81.name("");
        io.swagger.oas.models.media.Schema schema85 = schema81.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema85.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema89 = schema85.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema90 = schema66.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema85);
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.maximum(bigDecimal91);
        java.lang.Object obj93 = schema92.getExample();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema4.getUniqueItems();
        java.math.BigDecimal bigDecimal29 = null;
        schema4.setMinimum(bigDecimal29);
        java.lang.Class<?> wildcardClass31 = schema4.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.name("");
        io.swagger.oas.models.media.Discriminator discriminator23 = schema22.getDiscriminator();
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.xml(xML24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal27 = null;
        annotatedElementSchema26.setMultipleOf(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema26.readOnly((java.lang.Boolean) false);
        annotatedElementSchema26.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str35 = annotatedElementSchema26.getType();
        io.swagger.oas.models.media.Schema schema36 = schema22.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal39 = null;
        annotatedElementSchema38.setMultipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema38.minProperties((java.lang.Integer) 0);
        schema42.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema46 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = schema42.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema48.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = annotatedElementSchema48.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement58 = annotatedElementSchema48.getDefault();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema42.not(schema60);
        io.swagger.oas.models.media.Schema schema63 = schema60.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = schema22.addProperties("default", schema63);
        schema11.setExample((java.lang.Object) schema63);
        java.math.BigDecimal bigDecimal68 = schema11.getMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(annotatedElement58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal68);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.discriminator(discriminator39);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = annotatedElementSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema32.required((java.util.List<java.lang.String>) strList37);
        annotatedElementSchema16.setDefault((java.lang.Object) strList37);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema10.required((java.util.List<java.lang.String>) strList37);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        java.lang.Integer int43 = schema41.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.addProperties("default", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema17.setNullable((java.lang.Boolean) false);
        annotatedElementSchema17.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema36.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema17.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema51 = schema14.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema14.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser58 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema54.addExtension("no description", (java.lang.Object) operationParser58);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        annotatedElementSchema60.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema54.required((java.util.List<java.lang.String>) strList66);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.maximum(bigDecimal70);
        java.util.List<java.lang.String> strList72 = schema71.getRequired();
        schema14.setRequired(strList72);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strList72);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema15.getExtensions();
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema schema34 = schema32.minLength((java.lang.Integer) (-1));
        java.lang.String str35 = schema34.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList8 = annotatedElementSchema0.getEnum();
        java.lang.Boolean boolean9 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(annotatedElementList8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        java.lang.String str10 = schema9.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal6 = null;
        annotatedElementSchema5.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema5.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = annotatedElementSchema5.getEnum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.description("hi!");
        java.lang.Object obj13 = schema12.getExample();
        io.swagger.oas.models.media.Schema schema15 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("");
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema20.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema50 = schema4.pattern("");
        java.math.BigDecimal bigDecimal51 = schema50.getMinimum();
        io.swagger.oas.models.media.Schema schema53 = schema50.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal41 = null;
        annotatedElementSchema40.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        schema44.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema48 = schema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema35.not(schema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema35.getExtensions();
        schema35.setMinLength((java.lang.Integer) 10);
        schema35.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema35.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.additionalProperties(schema63);
        java.lang.Boolean boolean65 = schema60.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + true + "'", boolean65, true);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.discriminator(discriminator27);
        schema28.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema28.$ref("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema14.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.xml(xML18);
        io.swagger.oas.models.media.Schema schema20 = schema12.example((java.lang.Object) schema19);
        schema12.setMaxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList23 = schema12.getRequired();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema12.maximum(bigDecimal24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.minProperties((java.lang.Integer) 10);
        java.lang.String str66 = annotatedElementSchema58.getName();
        annotatedElementSchema37.setDefault((java.lang.Object) annotatedElementSchema58);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema58.xml(xML68);
        annotatedElementSchema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema58);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema27.multipleOf(bigDecimal71);
        java.lang.String str73 = annotatedElementSchema27.getType();
        schema25.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        annotatedElementSchema27.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxItems((java.lang.Integer) 0);
        schema4.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.nullable((java.lang.Boolean) false);
        annotatedElementSchema18.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema4.not((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema29.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = schema9.getEnum();
        schema9.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = annotatedElementSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema34.getExtensions();
        schema33.setExtensions(strMap40);
        annotatedElementSchema20.setExtensions(strMap40);
        schema17.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema45 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema45.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int48 = schema45.getMaxLength();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minLength((java.lang.Integer) 10);
        boolean boolean16 = annotatedElementSchema0.equals((java.lang.Object) 10);
        java.lang.Boolean boolean17 = annotatedElementSchema0.getDeprecated();
        java.util.List<java.lang.String> strList18 = annotatedElementSchema0.getRequired();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema5.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.Boolean boolean11 = schema4.getUniqueItems();
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema4.setMinItems((java.lang.Integer) (-1));
        schema4.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema4.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + true + "'", boolean18, true);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.maximum(bigDecimal10);
        java.lang.Boolean boolean12 = schema7.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        schema22.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema22.getDiscriminator();
        java.math.BigDecimal bigDecimal26 = null;
        schema22.setMultipleOf(bigDecimal26);
        java.lang.String str28 = schema22.getName();
        io.swagger.oas.models.media.Schema schema30 = schema22.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema22.setProperties(strMap31);
        java.lang.Integer int33 = schema22.getMinItems();
        io.swagger.oas.models.media.Schema schema35 = schema22.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.String str42 = annotatedElementSchema36.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema36.getExternalDocs();
        annotatedElementSchema36.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema35.not((io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        io.swagger.oas.models.media.Schema schema47 = schema15.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        java.lang.Boolean boolean48 = annotatedElementSchema36.getDeprecated();
        java.lang.Integer int49 = annotatedElementSchema36.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.Boolean boolean11 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema4.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema4.maximum(bigDecimal16);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int14 = schema11.getMaxProperties();
        java.lang.Object obj16 = null;
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = annotatedElementSchema38.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema38.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.title("#/components/schemas/");
        schema37.setNot(schema48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean54 = annotatedElementSchema53.getReadOnly();
        java.lang.Boolean boolean55 = annotatedElementSchema53.getNullable();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.String str61 = annotatedElementSchema53.getDescription();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema53.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema64.setPattern("");
        annotatedElementSchema64.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema64.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator72 = annotatedElementSchema64.getDiscriminator();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema53.not((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema74.setPattern("");
        annotatedElementSchema74.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema74.minProperties((java.lang.Integer) 10);
        java.lang.String str82 = annotatedElementSchema74.getName();
        annotatedElementSchema53.setDefault((java.lang.Object) annotatedElementSchema74);
        java.lang.Integer int84 = annotatedElementSchema74.getMinItems();
        java.lang.Boolean boolean85 = annotatedElementSchema74.getDeprecated();
        annotatedElementSchema74.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema74.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema91 = schema89.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema92 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema89);
        schema89.setMinLength((java.lang.Integer) 10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList95 = schema89.getEnum();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(annotatedElementList95);
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        io.swagger.oas.annotations.info.Contact contact5 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional6 = io.swagger.jaxrs2.OperationParser.getContact(contact5);
        annotatedElementSchema2.setExample((java.lang.Object) contactOptional6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.readOnly((java.lang.Boolean) false);
        java.lang.String str10 = annotatedElementSchema2.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema2.properties(strMap11);
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema2);
        annotatedElementSchema2.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(contactOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        schema15.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema15.getTitle();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.multipleOf(bigDecimal19);
        java.lang.Boolean boolean21 = schema20.getWriteOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema34.not(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str50 = schema49.getType();
        io.swagger.oas.models.media.Schema schema52 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema49.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.xml(xML55);
        io.swagger.oas.models.media.Schema schema58 = schema54.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setType("hi!");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.not(schema27);
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal31 = annotatedElementSchema0.getMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema9 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str10 = schema9.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minProperties((java.lang.Integer) 0);
        schema15.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        java.math.BigDecimal bigDecimal19 = null;
        schema15.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema21 = schema15.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema22.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = annotatedElementSchema26.getExtensions();
        schema25.setExtensions(strMap32);
        schema15.setExtensions(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema15.getDiscriminator();
        java.math.BigDecimal bigDecimal36 = schema15.getMultipleOf();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema15.maximum(bigDecimal37);
        java.util.List<java.lang.String> strList39 = null;
        schema38.setRequired(strList39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        schema38.setDiscriminator(discriminator41);
        io.swagger.oas.models.media.XML xML43 = schema38.getXml();
        schema38.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema38.getExtensions();
        schema9.setExtensions(strMap46);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML43);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        schema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema21.deprecated((java.lang.Boolean) true);
        java.lang.String str28 = schema21.getTitle();
        io.swagger.oas.models.media.Schema schema30 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema21.discriminator(discriminator31);
        schema32.setType("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.multipleOf(bigDecimal11);
        schema12.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.String str15 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.media.XML xML16 = null;
        annotatedElementSchema13.setXml(xML16);
        java.lang.Boolean boolean18 = annotatedElementSchema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema12.additionalProperties(schema20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema23.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setPattern("#/components/schemas/");
        schema33.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean39 = annotatedElementSchema38.getReadOnly();
        java.lang.Boolean boolean40 = annotatedElementSchema38.getNullable();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        annotatedElementSchema38.setRequired((java.util.List<java.lang.String>) strList43);
        java.math.BigDecimal bigDecimal46 = annotatedElementSchema38.getMultipleOf();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema38.maxProperties((java.lang.Integer) 0);
        schema48.setMinLength((java.lang.Integer) 0);
        schema33.setNot(schema48);
        io.swagger.oas.models.media.Schema schema52 = schema20.additionalProperties(schema33);
        java.lang.Boolean boolean53 = schema52.getNullable();
        io.swagger.oas.models.media.Schema schema55 = schema52.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        java.lang.String str8 = schema4.getType();
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String[] strArray42 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema45.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.XML xML62 = null;
        annotatedElementSchema17.setXml(xML62);
        annotatedElementSchema17.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getFormat();
        java.lang.String str13 = schema11.getType();
        java.util.List<java.lang.String> strList14 = schema11.getRequired();
        schema11.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        schema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxItems((java.lang.Integer) (-1));
        schema13.setExample((java.lang.Object) (-1));
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema13.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML30 = null;
        schema27.setXml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = schema33.getMultipleOf();
        java.lang.String str35 = schema33.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int23 = schema20.getMaxProperties();
        schema20.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = schema3.getFormat();
        java.lang.String str5 = schema3.getFormat();
        java.math.BigDecimal bigDecimal6 = schema3.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = annotatedElementSchema8.getEnum();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.description("hi!");
        schema3.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.getAdditionalProperties();
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.maximum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema10.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String str43 = schema42.getType();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        java.lang.Boolean boolean24 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.Boolean boolean27 = annotatedElementSchema25.getNullable();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.String str33 = annotatedElementSchema25.getDescription();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator44 = annotatedElementSchema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema36.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema36.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema52.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema59.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema52.not(schema66);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = schema66.getExtensions();
        schema51.setExtensions(strMap70);
        annotatedElementSchema0.setExtensions(strMap70);
        io.swagger.oas.models.media.XML xML73 = null;
        annotatedElementSchema0.setXml(xML73);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Integer int12 = schema7.getMaxProperties();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema14.setXml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema14.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = schema14.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str11 = schema10.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.String str14 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        annotatedElementSchema12.setXml(xML15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = annotatedElementSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.pattern("");
        java.lang.String str20 = annotatedElementSchema12.getType();
        annotatedElementSchema12.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema10.example((java.lang.Object) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        schema35.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema35.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema20.setAdditionalProperties(schema35);
        java.lang.Boolean boolean47 = schema35.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML11 = null;
        annotatedElementSchema0.setXml(xML11);
        java.lang.Boolean boolean13 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema6.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema6.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Schema schema15 = schema7.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema7.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.Boolean boolean46 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema11.getAdditionalProperties();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(schema47);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        java.lang.String str49 = schema45.get$ref();
        java.lang.String str50 = schema45.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        schema22.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema22.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser43 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema39.addExtension("no description", (java.lang.Object) operationParser43);
        annotatedElementSchema39.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        annotatedElementSchema39.setDiscriminator(discriminator47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema39.multipleOf(bigDecimal49);
        schema50.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean54 = annotatedElementSchema53.getReadOnly();
        java.lang.Boolean boolean55 = annotatedElementSchema53.getNullable();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.String str61 = annotatedElementSchema53.getDescription();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema53.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema64.setPattern("");
        annotatedElementSchema64.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema64.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator72 = annotatedElementSchema64.getDiscriminator();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema53.not((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema74.setPattern("");
        annotatedElementSchema74.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema74.minProperties((java.lang.Integer) 10);
        java.lang.String str82 = annotatedElementSchema74.getName();
        annotatedElementSchema53.setDefault((java.lang.Object) annotatedElementSchema74);
        io.swagger.oas.models.media.Schema schema84 = null;
        annotatedElementSchema53.setNot(schema84);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema53.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList88 = annotatedElementSchema53.getRequired();
        schema50.setRequired(strList88);
        io.swagger.oas.models.media.Schema schema90 = schema37.required(strList88);
        schema10.setRequired(strList88);
        io.swagger.oas.models.media.Schema schema93 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean94 = schema93.getDeprecated();
        java.math.BigDecimal bigDecimal95 = schema93.getMaximum();
        java.lang.String str96 = schema93.toString();
        java.math.BigDecimal bigDecimal97 = schema93.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNull(bigDecimal95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str96, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal97);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        java.lang.Boolean boolean5 = annotatedElementSchema0.getExclusiveMinimum();
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.discriminator(discriminator8);
        java.lang.String str10 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMinimum(bigDecimal11);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass34 = annotatedElementSchema0.getClass();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        annotatedElementSchema21.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 100);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        java.lang.Integer int9 = annotatedElementSchema0.getMaxProperties();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        io.swagger.oas.models.media.Schema schema12 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = annotatedElementSchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        java.lang.Class<?> wildcardClass38 = annotatedElementSchema17.getClass();
        schema11.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema11.getDiscriminator();
        java.math.BigDecimal bigDecimal41 = schema11.getMultipleOf();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.properties(strMap22);
        java.util.List<java.lang.String> strList24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.required(strList24);
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.pattern("hi!");
        schema37.setMinProperties((java.lang.Integer) 10);
        schema25.addExtension("*/*", (java.lang.Object) schema37);
        schema11.setDefault((java.lang.Object) schema37);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList42 = schema37.getEnum();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList43 = schema37.getEnum();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(annotatedElementList42);
        org.junit.Assert.assertNull(annotatedElementList43);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 1);
        annotatedElementSchema0.addExtension("#/components/schemas/", (java.lang.Object) annotatedElementSchema6);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList16 = schema15.getRequired();
        schema15.setNullable((java.lang.Boolean) true);
        java.lang.Integer int19 = schema15.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema6.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.externalDocs(externalDocumentation9);
        java.lang.Integer int11 = schema6.getMaxLength();
        java.math.BigDecimal bigDecimal12 = null;
        schema6.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setNot(schema20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal26 = null;
        annotatedElementSchema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        schema29.setFormat("*/*");
        schema29.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema35.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        schema39.setFormat("*/*");
        java.math.BigDecimal bigDecimal42 = schema39.getMinimum();
        io.swagger.oas.models.media.Schema schema43 = schema29.addProperties("no description", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema29.deprecated((java.lang.Boolean) true);
        schema29.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema29.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = schema9.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        java.lang.Boolean boolean51 = schema29.getNullable();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.XML xML30 = null;
        schema24.setXml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema24.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMultipleOf(bigDecimal10);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema9.readOnly((java.lang.Boolean) false);
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema17.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList22 = annotatedElementSchema17.getEnum();
        annotatedElementSchema17.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = annotatedElementSchema25.getMinItems();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema25.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        annotatedElementSchema17.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema17.properties(strMap40);
        java.math.BigDecimal bigDecimal42 = annotatedElementSchema17.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) 10);
        schema52.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator55 = schema52.getDiscriminator();
        schema52.setType("#/components/schemas/");
        java.lang.String str58 = schema52.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema60.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema60.setNullable((java.lang.Boolean) false);
        annotatedElementSchema60.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema60.minItems((java.lang.Integer) 0);
        java.lang.String str73 = schema72.getType();
        io.swagger.oas.models.media.XML xML74 = null;
        schema72.setXml(xML74);
        io.swagger.oas.models.media.Schema schema76 = schema52.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = schema52.getProperties();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema17.properties(strMap77);
        schema9.setProperties(strMap77);
        io.swagger.oas.models.media.Schema schema81 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str82 = schema9.getDescription();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(annotatedElementList22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        schema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxItems((java.lang.Integer) (-1));
        schema13.setExample((java.lang.Object) (-1));
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema13.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema13.type("#/components/schemas/");
        schema13.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        schema20.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema20.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema20.getNot();
        java.lang.Boolean boolean30 = schema20.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        io.swagger.oas.annotations.info.Contact contact34 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional35 = io.swagger.jaxrs2.OperationParser.getContact(contact34);
        annotatedElementSchema31.setExample((java.lang.Object) contactOptional35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = schema38.getProperties();
        schema38.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal43 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema42.nullable((java.lang.Boolean) false);
        annotatedElementSchema42.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema42.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str52 = annotatedElementSchema51.getPattern();
        annotatedElementSchema51.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean55 = annotatedElementSchema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema51.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema51.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema51.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info62 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional63 = io.swagger.jaxrs2.OperationParser.getInfo(info62);
        java.lang.Class<?> wildcardClass64 = infoOptional63.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray65 = new java.lang.reflect.AnnotatedElement[] { wildcardClass64 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList66 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList66, annotatedElementArray65);
        schema61.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList66);
        annotatedElementSchema42.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList66);
        schema38.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList66);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList66);
        io.swagger.oas.models.media.Schema schema73 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(contactOptional35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(infoOptional63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(annotatedElementArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.xml(xML26);
        io.swagger.oas.models.media.Schema schema28 = schema24.getAdditionalProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema16.getDiscriminator();
        java.lang.Boolean boolean22 = schema16.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 100);
        schema9.setExample((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        annotatedElementSchema30.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema30.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int51 = schema28.getMaxItems();
        io.swagger.oas.models.media.Schema schema53 = schema28.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = schema53.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList56 = schema55.getEnum();
        io.swagger.oas.models.media.Schema schema58 = schema55.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(annotatedElementList56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.XML xML62 = null;
        annotatedElementSchema17.setXml(xML62);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema17.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal66 = null;
        annotatedElementSchema17.setMultipleOf(bigDecimal66);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        schema24.setMaxProperties((java.lang.Integer) 0);
        schema24.setMaxProperties((java.lang.Integer) (-1));
        schema24.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = schema6.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.minimum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema15.setDiscriminator(discriminator19);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = schema40.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema40.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int22 = annotatedElementSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema27.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = annotatedElementSchema31.getExtensions();
        schema30.setExtensions(strMap37);
        annotatedElementSchema17.setExtensions(strMap37);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema17.minimum(bigDecimal40);
        boolean boolean42 = schema7.equals((java.lang.Object) bigDecimal40);
        java.lang.String str43 = schema7.getPattern();
        io.swagger.oas.models.media.Schema schema45 = schema7.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean46 = schema45.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.License license15 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional16 = io.swagger.jaxrs2.OperationParser.getLicense(license15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema12.example((java.lang.Object) licenseOptional16);
        java.lang.String str18 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = annotatedElementSchema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.deprecated((java.lang.Boolean) false);
        schema21.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("");
        java.lang.Integer int26 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = annotatedElementSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.description("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.String str42 = annotatedElementSchema36.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema36.getExternalDocs();
        annotatedElementSchema36.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema34.additionalProperties(schema47);
        schema25.setNot(schema47);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = null;
        schema25.setEnum(annotatedElementList50);
        schema25.setUniqueItems((java.lang.Boolean) false);
        boolean boolean54 = schema6.equals((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema56 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema56.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(licenseOptional16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema5.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema5.format("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        java.lang.Integer int13 = schema11.getMaxProperties();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.multipleOf(bigDecimal14);
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = annotatedElementSchema18.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator28 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser33 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema29.addExtension("no description", (java.lang.Object) operationParser33);
        annotatedElementSchema29.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        annotatedElementSchema29.setDiscriminator(discriminator37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema29.multipleOf(bigDecimal39);
        java.lang.Class<?> wildcardClass41 = schema40.getClass();
        annotatedElementSchema18.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass41);
        schema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean45 = annotatedElementSchema44.getReadOnly();
        java.lang.Boolean boolean46 = annotatedElementSchema44.getNullable();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema44.setRequired((java.util.List<java.lang.String>) strList49);
        java.math.BigDecimal bigDecimal52 = annotatedElementSchema44.getMultipleOf();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.maxProperties((java.lang.Integer) 0);
        java.lang.String str55 = annotatedElementSchema44.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        annotatedElementSchema56.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema56.properties(strMap62);
        io.swagger.oas.models.media.Schema schema65 = schema63.minLength((java.lang.Integer) 10);
        schema65.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator68 = schema65.getDiscriminator();
        schema65.setType("#/components/schemas/");
        java.lang.String str71 = schema65.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema73.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema73.setNullable((java.lang.Boolean) false);
        annotatedElementSchema73.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema73.minItems((java.lang.Integer) 0);
        java.lang.String str86 = schema85.getType();
        io.swagger.oas.models.media.XML xML87 = null;
        schema85.setXml(xML87);
        io.swagger.oas.models.media.Schema schema89 = schema65.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema91 = annotatedElementSchema44.properties(strMap90);
        schema15.setProperties(strMap90);
        annotatedElementSchema0.setProperties(strMap90);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 10);
        java.lang.String str42 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema21.addProperties("", schema41);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.maximum(bigDecimal44);
        schema45.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = annotatedElementSchema12.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(externalDocumentation28);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxLength((java.lang.Integer) 0);
        schema25.setMinLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema25.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean35 = annotatedElementSchema34.getReadOnly();
        java.lang.Boolean boolean36 = annotatedElementSchema34.getNullable();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema34.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.String str42 = annotatedElementSchema34.getDescription();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema34.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator53 = annotatedElementSchema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema34.not((io.swagger.oas.models.media.Schema) annotatedElementSchema45);
        java.lang.reflect.AnnotatedElement annotatedElement55 = annotatedElementSchema34.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray57 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional61 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray57, produces58, produces59, components60);
        javax.ws.rs.Produces produces62 = null;
        javax.ws.rs.Produces produces63 = null;
        io.swagger.oas.models.Components components64 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional65 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray57, produces62, produces63, components64);
        javax.ws.rs.Produces produces66 = null;
        javax.ws.rs.Produces produces67 = null;
        io.swagger.oas.models.Components components68 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional69 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray57, produces66, produces67, components68);
        annotatedElementSchema34.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces66);
        java.lang.Boolean boolean71 = annotatedElementSchema34.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(annotatedElement55);
        org.junit.Assert.assertNotNull(apiResponseArray57);
        org.junit.Assert.assertNotNull(apiResponsesOptional61);
        org.junit.Assert.assertNotNull(apiResponsesOptional65);
        org.junit.Assert.assertNotNull(apiResponsesOptional69);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.math.BigDecimal bigDecimal18 = null;
        schema15.setMultipleOf(bigDecimal18);
        schema15.setName("hi!");
        java.lang.Object obj22 = schema15.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.License license8 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional9 = io.swagger.jaxrs2.OperationParser.getLicense(license8);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema5.example((java.lang.Object) licenseOptional9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        annotatedElementSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema11.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.properties(strMap21);
        java.lang.String str23 = schema22.getName();
        io.swagger.oas.annotations.info.Info info24 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional25 = io.swagger.jaxrs2.OperationParser.getInfo(info24);
        java.lang.Class<?> wildcardClass26 = infoOptional25.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = annotatedElementSchema27.getMinItems();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.minimum(bigDecimal37);
        annotatedElementSchema27.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass41 = annotatedElementSchema27.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema49.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass52 = schema49.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray53 = new java.lang.reflect.AnnotatedElement[] { wildcardClass26, wildcardClass41, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList54 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList54, annotatedElementArray53);
        schema22.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList54);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList54);
        annotatedElementSchema0.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList54);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML61 = annotatedElementSchema0.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(licenseOptional9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(infoOptional25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotatedElementArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML61);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        schema24.setMinLength((java.lang.Integer) 0);
        schema24.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        java.math.BigDecimal bigDecimal8 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = schema4.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema4.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema13.setNullable((java.lang.Boolean) false);
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema13.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema26.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMultipleOf(bigDecimal35);
        java.lang.String[] strArray38 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional39 = io.swagger.jaxrs2.OperationParser.getTags(strArray38);
        schema34.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional39);
        java.math.BigDecimal bigDecimal41 = schema34.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str44 = annotatedElementSchema43.getPattern();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema43.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema43.xml(xML47);
        io.swagger.oas.models.media.Schema schema49 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        java.math.BigDecimal bigDecimal50 = annotatedElementSchema43.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = annotatedElementSchema51.getMinProperties();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema51.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.$ref("*/*");
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema51.format("default");
        java.lang.Boolean boolean65 = schema64.getNullable();
        java.lang.Boolean boolean66 = schema64.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser71 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema67.addExtension("no description", (java.lang.Object) operationParser71);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema73.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        annotatedElementSchema73.setRequired((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema67.required((java.util.List<java.lang.String>) strList79);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.maximum(bigDecimal83);
        java.util.List<java.lang.String> strList85 = schema84.getRequired();
        io.swagger.oas.models.media.Schema schema86 = schema64.required(strList85);
        annotatedElementSchema43.setRequired(strList85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema13.required(strList85);
        io.swagger.oas.models.media.Schema schema89 = schema4.required(strList85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema4.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(tagSetOptional39);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        schema15.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        schema20.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.lang.Boolean boolean27 = annotatedElementSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.example((java.lang.Object) boolean27);
        java.lang.Integer int29 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 10);
        java.lang.String str42 = schema41.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean45 = annotatedElementSchema44.getReadOnly();
        java.lang.Boolean boolean46 = annotatedElementSchema44.getNullable();
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema44.setRequired((java.util.List<java.lang.String>) strList49);
        java.lang.String str52 = annotatedElementSchema44.getDescription();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema41.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema44);
        java.lang.String str56 = annotatedElementSchema44.get$ref();
        java.lang.Integer int57 = annotatedElementSchema44.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = annotatedElementSchema44.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str61 = annotatedElementSchema60.getPattern();
        annotatedElementSchema60.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean64 = annotatedElementSchema60.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        io.swagger.oas.annotations.info.Contact contact68 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional69 = io.swagger.jaxrs2.OperationParser.getContact(contact68);
        annotatedElementSchema65.setExample((java.lang.Object) contactOptional69);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema65.readOnly((java.lang.Boolean) false);
        java.lang.String str73 = annotatedElementSchema65.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema65.properties(strMap74);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema65.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema65.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema60.not(schema79);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean82 = annotatedElementSchema81.getReadOnly();
        java.lang.String str83 = annotatedElementSchema81.get$ref();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema81.title("hi!");
        schema80.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema81);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema81.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema44.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema81);
        schema31.setDefault((java.lang.Object) annotatedElementSchema81);
        java.util.List<java.lang.String> strList91 = schema31.getRequired();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(contactOptional69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        java.lang.Boolean boolean65 = schema32.getNullable();
        io.swagger.oas.models.media.Schema schema67 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setDeprecated((java.lang.Boolean) true);
        schema32.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.discriminator(discriminator15);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        schema18.setDescription("#/components/schemas/");
        schema18.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.example((java.lang.Object) schema18);
        schema23.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        schema23.setMaximum(bigDecimal28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str14 = annotatedElementSchema13.getPattern();
        annotatedElementSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = annotatedElementSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema20.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema20.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.pattern("");
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema7.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getExclusiveMaximum();
        schema28.setExample((java.lang.Object) boolean43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema28.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.xml(xML49);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.addRequiredItem("");
        java.lang.String str17 = schema14.getFormat();
        java.math.BigDecimal bigDecimal18 = schema14.getMaximum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = annotatedElementSchema6.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray26 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema22.required((java.util.List<java.lang.String>) strList27);
        annotatedElementSchema6.setDefault((java.lang.Object) strList27);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList27);
        java.util.List<java.lang.String> strList32 = annotatedElementSchema0.getRequired();
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMultipleOf(bigDecimal10);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema9.type("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema15.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema15.externalDocs(externalDocumentation29);
        java.lang.String str31 = schema30.getName();
        boolean boolean32 = schema14.equals((java.lang.Object) schema30);
        schema14.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getTitle();
        java.lang.String str47 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.Boolean boolean11 = schema4.getUniqueItems();
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = schema4.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema7.maxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema7.getEnum();
        schema7.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = schema7.getMinItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = annotatedElementSchema0.getExtensions();
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = annotatedElementSchema0.getDeprecated();
        java.lang.Boolean boolean19 = annotatedElementSchema0.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = annotatedElementSchema20.getDescription();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator39 = annotatedElementSchema31.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema31.setMaxProperties((java.lang.Integer) 0);
        annotatedElementSchema31.setPattern("hi!");
        schema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        io.swagger.oas.annotations.info.Contact contact51 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional52 = io.swagger.jaxrs2.OperationParser.getContact(contact51);
        annotatedElementSchema48.setExample((java.lang.Object) contactOptional52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.readOnly((java.lang.Boolean) false);
        java.lang.String str56 = annotatedElementSchema48.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema48.properties(strMap57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema48.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema48.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema48.maxLength((java.lang.Integer) 1);
        annotatedElementSchema31.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema48.maxProperties((java.lang.Integer) (-1));
        java.lang.String str68 = schema67.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(contactOptional52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMultipleOf(bigDecimal9);
        schema6.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema6.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.externalDocs(externalDocumentation17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.xml(xML15);
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema9.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser36 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema32.addExtension("no description", (java.lang.Object) operationParser36);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema38.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        annotatedElementSchema38.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema32.required((java.util.List<java.lang.String>) strList44);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema23.not(schema47);
        io.swagger.oas.models.media.Schema schema52 = schema47.type("default");
        io.swagger.oas.models.media.Schema schema54 = schema52.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = schema20.not(schema54);
        java.lang.Boolean boolean56 = schema55.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = annotatedElementSchema10.getMinProperties();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.example((java.lang.Object) schema19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        schema20.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema48 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str60 = annotatedElementSchema59.getPattern();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema59.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = annotatedElementSchema63.getExtensions();
        schema62.setExtensions(strMap69);
        annotatedElementSchema49.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema49.minProperties((java.lang.Integer) (-1));
        schema73.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema76.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema76.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal81 = annotatedElementSchema76.getMultipleOf();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.format("default");
        io.swagger.oas.models.media.Schema schema84 = schema73.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema85 = schema48.not(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema85.addRequiredItem("");
        java.lang.Boolean boolean88 = schema85.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + true + "'", boolean88, true);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxItems((java.lang.Integer) 0);
        java.lang.String str14 = schema13.getFormat();
        java.lang.String str15 = schema13.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        schema12.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema7.example((java.lang.Object) discriminator15);
        schema7.setReadOnly((java.lang.Boolean) true);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema7.multipleOf(bigDecimal21);
        java.lang.Boolean boolean23 = schema7.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: -1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema15.getType();
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        annotatedElementSchema21.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        annotatedElementSchema21.setDiscriminator(discriminator29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.multipleOf(bigDecimal31);
        schema32.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.String str43 = annotatedElementSchema35.getDescription();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema35.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator54 = annotatedElementSchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema35.not((io.swagger.oas.models.media.Schema) annotatedElementSchema46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        annotatedElementSchema56.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema56.minProperties((java.lang.Integer) 10);
        java.lang.String str64 = annotatedElementSchema56.getName();
        annotatedElementSchema35.setDefault((java.lang.Object) annotatedElementSchema56);
        io.swagger.oas.models.media.Schema schema66 = null;
        annotatedElementSchema35.setNot(schema66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema35.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema35.getRequired();
        schema32.setRequired(strList70);
        schema32.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean74 = schema32.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema76 = schema32.maxProperties((java.lang.Integer) 1);
        schema15.setAdditionalProperties(schema76);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema15.multipleOf(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = schema15.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        java.lang.String str8 = schema6.getFormat();
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minLength((java.lang.Integer) 0);
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema15.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema15.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = schema6.example((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal26 = annotatedElementSchema21.getMultipleOf();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.multipleOf(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema6.additionalProperties(schema30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.multipleOf(bigDecimal32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        java.lang.Object obj5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema3.example(obj5);
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        schema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser14 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema10.addExtension("no description", (java.lang.Object) operationParser14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema schema38 = schema27.not(schema37);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.properties(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = annotatedElementSchema41.getExtensions();
        schema38.setExtensions(strMap49);
        schema17.setExtensions(strMap49);
        java.lang.Integer int52 = schema17.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = schema6.additionalProperties(schema17);
        io.swagger.oas.models.media.Schema schema55 = schema17.description("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema17.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.XML xML58 = schema17.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str60 = annotatedElementSchema59.getPattern();
        annotatedElementSchema59.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean63 = annotatedElementSchema59.getWriteOnly();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema59.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema59.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema59.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info70 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional71 = io.swagger.jaxrs2.OperationParser.getInfo(info70);
        java.lang.Class<?> wildcardClass72 = infoOptional71.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray73 = new java.lang.reflect.AnnotatedElement[] { wildcardClass72 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList74 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList74, annotatedElementArray73);
        schema69.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList74);
        io.swagger.oas.models.media.Schema schema78 = schema69.title("hi!");
        io.swagger.oas.models.media.XML xML79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.xml(xML79);
        java.lang.Boolean boolean81 = schema80.getDeprecated();
        io.swagger.oas.models.media.Schema schema83 = schema80.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema80.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema17.not(schema80);
        java.lang.Integer int87 = schema80.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(infoOptional71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotatedElementArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = null;
        schema24.setMaximum(bigDecimal25);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema6.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        java.lang.Boolean boolean14 = schema13.getNullable();
        java.lang.Boolean boolean15 = schema13.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser20 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema16.addExtension("no description", (java.lang.Object) operationParser20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema16.required((java.util.List<java.lang.String>) strList28);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.maximum(bigDecimal32);
        java.util.List<java.lang.String> strList34 = schema33.getRequired();
        io.swagger.oas.models.media.Schema schema35 = schema13.required(strList34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema39.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        java.lang.Boolean boolean33 = annotatedElementSchema0.getDeprecated();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser48 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema44.addExtension("no description", (java.lang.Object) operationParser48);
        annotatedElementSchema44.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        annotatedElementSchema44.setDiscriminator(discriminator52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema44.multipleOf(bigDecimal54);
        schema55.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean59 = annotatedElementSchema58.getReadOnly();
        java.lang.Boolean boolean60 = annotatedElementSchema58.getNullable();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList63);
        java.lang.String str66 = annotatedElementSchema58.getDescription();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema58.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema69.setPattern("");
        annotatedElementSchema69.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema69.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator77 = annotatedElementSchema69.getDiscriminator();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema58.not((io.swagger.oas.models.media.Schema) annotatedElementSchema69);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema79 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema79.setPattern("");
        annotatedElementSchema79.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema79.minProperties((java.lang.Integer) 10);
        java.lang.String str87 = annotatedElementSchema79.getName();
        annotatedElementSchema58.setDefault((java.lang.Object) annotatedElementSchema79);
        io.swagger.oas.models.media.Schema schema89 = null;
        annotatedElementSchema58.setNot(schema89);
        io.swagger.oas.models.media.Schema schema92 = annotatedElementSchema58.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList93 = annotatedElementSchema58.getRequired();
        schema55.setRequired(strList93);
        io.swagger.oas.models.media.Schema schema95 = schema42.required(strList93);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(discriminator77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        annotatedElementSchema10.setType("hi!");
        java.util.List<java.lang.String> strList22 = annotatedElementSchema10.getRequired();
        io.swagger.oas.models.media.Schema schema23 = schema9.required(strList22);
        schema23.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal26 = null;
        annotatedElementSchema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        schema29.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema33 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema35.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema39.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema39.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int48 = annotatedElementSchema39.getMinItems();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema39.minimum(bigDecimal49);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList51 = schema50.getEnum();
        io.swagger.oas.models.media.Schema schema53 = schema50.maxLength((java.lang.Integer) (-1));
        schema35.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema53);
        java.lang.String str55 = schema53.getTitle();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema0.example((java.lang.Object) str55);
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(annotatedElementList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.XML xML30 = null;
        schema24.setXml(xML30);
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema24.maxItems((java.lang.Integer) 0);
        schema24.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str38 = schema24.getType();
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "default" + "'", str38, "default");
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        java.lang.Boolean boolean5 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int11 = annotatedElementSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray17 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        io.swagger.oas.models.media.Schema schema20 = schema13.required((java.util.List<java.lang.String>) strList18);
        schema20.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema4.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean26 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema4.setDiscriminator(discriminator27);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML12 = null;
        schema11.setXml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        java.lang.Object obj22 = annotatedElementSchema14.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema14.getExtensions();
        boolean boolean24 = schema11.equals((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema11.additionalProperties(schema32);
        java.lang.Integer int34 = schema33.getMinLength();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        annotatedElementSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = annotatedElementSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema28);
        java.lang.String str30 = schema28.getDescription();
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.properties(strMap27);
        java.lang.String str29 = schema28.getName();
        io.swagger.oas.annotations.info.Info info30 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional31 = io.swagger.jaxrs2.OperationParser.getInfo(info30);
        java.lang.Class<?> wildcardClass32 = infoOptional31.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = annotatedElementSchema33.getMinItems();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.minimum(bigDecimal43);
        annotatedElementSchema33.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass47 = annotatedElementSchema33.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.properties(strMap54);
        io.swagger.oas.models.media.Schema schema57 = schema55.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass58 = schema55.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray59 = new java.lang.reflect.AnnotatedElement[] { wildcardClass32, wildcardClass47, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList60 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList60, annotatedElementArray59);
        schema28.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList60);
        schema16.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList60);
        io.swagger.oas.models.media.Schema schema64 = schema10.additionalProperties(schema16);
        io.swagger.oas.models.media.XML xML65 = schema64.getXml();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(infoOptional31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(annotatedElementArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(xML65);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean24 = schema23.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        annotatedElementSchema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.additionalProperties(schema20);
        java.lang.String[] strArray34 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema7.required((java.util.List<java.lang.String>) strList35);
        java.lang.Boolean boolean38 = schema37.getExclusiveMinimum();
        schema37.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        java.lang.Boolean boolean26 = schema24.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        java.lang.Boolean boolean29 = schema24.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.Integer int23 = annotatedElementSchema14.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement24 = annotatedElementSchema14.getDefault();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema14.maxItems((java.lang.Integer) 1);
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema14);
        java.math.BigDecimal bigDecimal28 = annotatedElementSchema14.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(annotatedElement24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.setMinItems((java.lang.Integer) 10);
        java.lang.Boolean boolean43 = annotatedElementSchema0.getNullable();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + false + "'", boolean43, false);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.nullable((java.lang.Boolean) true);
        java.lang.Integer int19 = schema18.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        annotatedElementSchema21.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str29 = annotatedElementSchema21.getTitle();
        java.lang.Integer int30 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        annotatedElementSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean63 = annotatedElementSchema32.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList64 = null;
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema32.required(strList64);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema21.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema67.minProperties((java.lang.Integer) 0);
        java.lang.Integer int70 = annotatedElementSchema67.getMinLength();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema72.setPattern("");
        annotatedElementSchema72.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema72.properties(strMap78);
        java.lang.Object obj80 = annotatedElementSchema72.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = annotatedElementSchema72.getExtensions();
        annotatedElementSchema67.setExtensions(strMap81);
        annotatedElementSchema32.setExtensions(strMap81);
        io.swagger.oas.models.media.Schema schema84 = schema18.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema18.xml(xML85);
        schema86.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str14 = annotatedElementSchema13.getPattern();
        annotatedElementSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = annotatedElementSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema20.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema20.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.pattern("");
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema7.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getExclusiveMaximum();
        schema28.setExample((java.lang.Object) boolean43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema28.discriminator(discriminator45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema28.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema11.getFormat();
        java.lang.String str15 = schema11.get$ref();
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMultipleOf(bigDecimal16);
        java.lang.Integer int18 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema20 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema21.setWriteOnly((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        schema9.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema9.minProperties((java.lang.Integer) 0);
        java.lang.String str16 = schema9.getDescription();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema4.discriminator(discriminator30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        java.lang.String str40 = annotatedElementSchema32.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema32.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema32.minimum(bigDecimal47);
        annotatedElementSchema32.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema53.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = annotatedElementSchema53.getMinItems();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema53.minimum(bigDecimal63);
        annotatedElementSchema53.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema53.addRequiredItem("#/components/schemas/");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray69 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces70 = null;
        javax.ws.rs.Produces produces71 = null;
        io.swagger.oas.models.Components components72 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional73 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray69, produces70, produces71, components72);
        javax.ws.rs.Produces produces74 = null;
        javax.ws.rs.Produces produces75 = null;
        io.swagger.oas.models.Components components76 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional77 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray69, produces74, produces75, components76);
        javax.ws.rs.Produces produces78 = null;
        javax.ws.rs.Produces produces79 = null;
        io.swagger.oas.models.Components components80 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional81 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray69, produces78, produces79, components80);
        java.lang.Class<?> wildcardClass82 = apiResponseArray69.getClass();
        schema68.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass82);
        schema52.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass82);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList85 = schema52.getEnum();
        schema31.setEnum(annotatedElementList85);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList87 = null;
        schema31.setEnum(annotatedElementList87);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(apiResponseArray69);
        org.junit.Assert.assertNotNull(apiResponsesOptional73);
        org.junit.Assert.assertNotNull(apiResponsesOptional77);
        org.junit.Assert.assertNotNull(apiResponsesOptional81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(annotatedElementList85);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        schema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema21.deprecated((java.lang.Boolean) true);
        java.lang.String str28 = schema21.getTitle();
        io.swagger.oas.models.media.Schema schema30 = schema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.properties(strMap36);
        java.lang.Integer int38 = schema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.pattern("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema40.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.example((java.lang.Object) schema42);
        java.lang.Boolean boolean46 = schema45.getExclusiveMaximum();
        schema45.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        schema6.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema14.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        schema17.setExtensions(strMap24);
        schema6.setExtensions(strMap24);
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.Boolean boolean27 = annotatedElementSchema25.getNullable();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList30);
        schema22.setRequired((java.util.List<java.lang.String>) strList30);
        schema9.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema36 = schema9.description("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        schema9.setDiscriminator(discriminator37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema9.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML12 = null;
        schema11.setXml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        java.lang.Object obj22 = annotatedElementSchema14.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema14.getExtensions();
        boolean boolean24 = schema11.equals((java.lang.Object) annotatedElementSchema14);
        java.lang.Boolean boolean25 = annotatedElementSchema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj30 = schema29.getExample();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 0);
        schema13.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxItems((java.lang.Integer) (-1));
        schema13.setExample((java.lang.Object) (-1));
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema13.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML30 = null;
        schema27.setXml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema27.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema10.getProperties();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList16 = schema10.getEnum();
        java.lang.String str17 = schema10.toString();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(annotatedElementList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minLength((java.lang.Integer) 10);
        java.lang.String str20 = schema19.getFormat();
        io.swagger.oas.models.media.Schema schema21 = schema19.getAdditionalProperties();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.minimum(bigDecimal22);
        schema7.setAdditionalProperties(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema32.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        annotatedElementSchema35.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean39 = annotatedElementSchema35.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema35.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str43 = annotatedElementSchema42.getPattern();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema35.not((io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema45 = schema34.not(schema44);
        schema34.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema34.$ref("default");
        schema49.setMaxProperties((java.lang.Integer) 0);
        schema49.setMaxProperties((java.lang.Integer) (-1));
        schema49.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema49.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema59 = schema57.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema7.example((java.lang.Object) 100);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.not(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        schema27.setMaximum(bigDecimal30);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        schema7.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        java.lang.String str11 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "no description" + "'", str11, "no description");
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean13 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.Contact contact21 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional22 = io.swagger.jaxrs2.OperationParser.getContact(contact21);
        annotatedElementSchema18.setExample((java.lang.Object) contactOptional22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        io.swagger.oas.annotations.info.Contact contact33 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional34 = io.swagger.jaxrs2.OperationParser.getContact(contact33);
        annotatedElementSchema30.setExample((java.lang.Object) contactOptional34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.readOnly((java.lang.Boolean) false);
        java.lang.String str38 = annotatedElementSchema30.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema30.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema30.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema30.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema30.minimum(bigDecimal45);
        schema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema49 = schema27.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.externalDocs(externalDocumentation50);
        schema15.setDefault((java.lang.Object) schema49);
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(contactOptional34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setName("*/*");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal20 = null;
        annotatedElementSchema19.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema19.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = annotatedElementSchema19.getEnum();
        annotatedElementSchema19.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = annotatedElementSchema27.getMinItems();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList40 = annotatedElementSchema19.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean42 = annotatedElementSchema41.getReadOnly();
        java.lang.Boolean boolean43 = annotatedElementSchema41.getNullable();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.String str49 = annotatedElementSchema41.getDescription();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.multipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema19.example((java.lang.Object) annotatedElementSchema41);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema41.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema57.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema57.setNullable((java.lang.Boolean) false);
        annotatedElementSchema57.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema57.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema57.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema57.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema57.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema76.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema76.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema76.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema57.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = annotatedElementSchema41.additionalProperties(schema90);
        io.swagger.oas.models.media.Schema schema92 = schema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema41);
        annotatedElementSchema41.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema96 = annotatedElementSchema41.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema98 = annotatedElementSchema41.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean99 = annotatedElementSchema41.getUniqueItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(annotatedElementList40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertEquals("'" + boolean99 + "' != '" + false + "'", boolean99, false);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        annotatedElementSchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.discriminator(discriminator12);
        java.lang.Boolean boolean14 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = schema4.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.xml(xML25);
        java.lang.Object obj27 = schema24.getExample();
        java.math.BigDecimal bigDecimal28 = schema24.getMinimum();
        java.math.BigDecimal bigDecimal29 = null;
        schema24.setMultipleOf(bigDecimal29);
        java.lang.Integer int31 = schema24.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = annotatedElementSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        annotatedElementSchema41.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema41.nullable((java.lang.Boolean) false);
        schema40.setDefault((java.lang.Object) annotatedElementSchema41);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema schema54 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        java.lang.Object obj63 = annotatedElementSchema55.getExample();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.format("#/components/schemas/");
        java.lang.Class<?> wildcardClass66 = annotatedElementSchema55.getClass();
        schema53.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass66);
        schema13.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass66);
        java.lang.String str69 = schema13.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.maxLength((java.lang.Integer) 1);
        annotatedElementSchema54.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setPattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.License license15 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional16 = io.swagger.jaxrs2.OperationParser.getLicense(license15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema12.example((java.lang.Object) licenseOptional16);
        java.lang.String str18 = annotatedElementSchema12.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = annotatedElementSchema12.getExternalDocs();
        annotatedElementSchema12.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        annotatedElementSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = annotatedElementSchema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema24.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema24.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.properties(strMap34);
        java.util.List<java.lang.String> strList36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.required(strList36);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema40.pattern("hi!");
        schema49.setMinProperties((java.lang.Integer) 10);
        schema37.addExtension("*/*", (java.lang.Object) schema49);
        schema23.setDefault((java.lang.Object) schema49);
        io.swagger.oas.models.media.XML xML54 = null;
        schema23.setXml(xML54);
        java.math.BigDecimal bigDecimal56 = null;
        schema23.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Discriminator discriminator58 = schema23.getDiscriminator();
        annotatedElementSchema0.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema60 = schema23.getNot();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(licenseOptional16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator58);
        org.junit.Assert.assertNull(schema60);
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema16.additionalProperties(schema25);
        java.math.BigDecimal bigDecimal27 = schema25.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        io.swagger.oas.annotations.info.Contact contact32 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional33 = io.swagger.jaxrs2.OperationParser.getContact(contact32);
        annotatedElementSchema29.setExample((java.lang.Object) contactOptional33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = schema36.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        io.swagger.oas.models.media.Schema schema41 = schema39.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.xml(xML42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema43.getProperties();
        schema25.addExtension("hi!", (java.lang.Object) schema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema43.getExtensions();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(contactOptional33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        schema35.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema35.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema20.setAdditionalProperties(schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.properties(strMap53);
        io.swagger.oas.models.media.Schema schema56 = schema54.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        annotatedElementSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean61 = annotatedElementSchema57.getWriteOnly();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema57.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str65 = annotatedElementSchema64.getPattern();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema57.not((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema schema67 = schema56.not(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int73 = annotatedElementSchema68.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = annotatedElementSchema68.getExternalDocs();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema68.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str78 = annotatedElementSchema77.getPattern();
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema77.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema81.setPattern("");
        annotatedElementSchema81.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = annotatedElementSchema81.getExtensions();
        schema80.setExtensions(strMap87);
        schema76.setExtensions(strMap87);
        schema66.setExtensions(strMap87);
        schema35.setExtensions(strMap87);
        schema35.setMaxProperties((java.lang.Integer) 10);
        schema35.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema97 = schema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML98 = schema35.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(externalDocumentation74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(xML98);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal26 = null;
        annotatedElementSchema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        schema29.setFormat("*/*");
        java.lang.Boolean boolean32 = schema29.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema29.multipleOf(bigDecimal33);
        boolean boolean35 = schema20.equals((java.lang.Object) schema29);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.lang.reflect.AnnotatedElement annotatedElement7 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(annotatedElement7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.properties(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = annotatedElementSchema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema26.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema26.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema26.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.properties(strMap36);
        java.lang.String str38 = schema37.getName();
        io.swagger.oas.annotations.info.Info info39 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional40 = io.swagger.jaxrs2.OperationParser.getInfo(info39);
        java.lang.Class<?> wildcardClass41 = infoOptional40.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema42.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        annotatedElementSchema42.setRequired((java.util.List<java.lang.String>) strList48);
        java.lang.Integer int51 = annotatedElementSchema42.getMinItems();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema42.minimum(bigDecimal52);
        annotatedElementSchema42.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass56 = annotatedElementSchema42.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.properties(strMap63);
        io.swagger.oas.models.media.Schema schema66 = schema64.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass67 = schema64.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray68 = new java.lang.reflect.AnnotatedElement[] { wildcardClass41, wildcardClass56, wildcardClass67 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList69 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList69, annotatedElementArray68);
        schema37.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList69);
        schema25.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList69);
        schema11.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList69);
        java.lang.Integer int74 = schema11.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(infoOptional40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotatedElementArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.XML xML8 = null;
        annotatedElementSchema0.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema42 = null;
        annotatedElementSchema11.setNot(schema42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema47 = schema45.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        java.math.BigDecimal bigDecimal53 = schema51.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("");
        java.lang.Integer int14 = schema9.getMaxItems();
        schema9.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema11.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema30.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList41);
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("default");
        schema15.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema0.getDiscriminator();
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = annotatedElementSchema0.getFormat();
        java.lang.String str21 = annotatedElementSchema0.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema17.minProperties((java.lang.Integer) 0);
        schema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        java.lang.String str30 = annotatedElementSchema22.getName();
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        schema19.setExample((java.lang.Object) annotatedElementSchema22);
        schema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = annotatedElementSchema36.getMinProperties();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema36.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.$ref("*/*");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.minimum(bigDecimal48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema36.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema19.not(schema51);
        io.swagger.oas.models.media.Schema schema54 = schema51.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.multipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema57 = schema16.additionalProperties(schema54);
        schema16.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.Integer int5 = schema4.getMinLength();
        schema4.setMaxLength((java.lang.Integer) (-1));
        schema4.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.minimum(bigDecimal10);
        schema11.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.maxItems((java.lang.Integer) 100);
        java.lang.Integer int10 = schema7.getMinLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.util.List<java.lang.String> strList37 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema15.writeOnly((java.lang.Boolean) false);
        schema42.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema11.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema19.getExclusiveMinimum();
        java.lang.Boolean boolean21 = schema19.getDeprecated();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        schema13.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema9.maxItems((java.lang.Integer) 0);
        java.lang.String str23 = schema9.getPattern();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema9.externalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema25.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.minimum(bigDecimal30);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = annotatedElementSchema0.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema15.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator21 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema schema23 = schema15.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.xml(xML8);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.lang.String str25 = schema9.getFormat();
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int28 = schema9.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.xml(xML9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        schema18.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.addProperties("hi!", schema22);
        io.swagger.oas.models.media.Schema schema25 = schema23.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.example((java.lang.Object) schema25);
        schema25.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        schema10.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema10.getExclusiveMaximum();
        java.lang.Boolean boolean21 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema23 = schema10.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.discriminator(discriminator24);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        java.lang.String str8 = schema4.getType();
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String[] strArray42 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema18.getDiscriminator();
        annotatedElementSchema18.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(discriminator37);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        schema16.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getDescription();
        java.lang.Boolean boolean12 = annotatedElementSchema0.getExclusiveMinimum();
        java.lang.Boolean boolean13 = annotatedElementSchema0.getNullable();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal16);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema7.getReadOnly();
        java.lang.String str13 = schema7.getDescription();
        io.swagger.oas.models.media.Schema schema15 = schema7.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema38.maxItems((java.lang.Integer) 100);
        schema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema38.uniqueItems((java.lang.Boolean) true);
        schema44.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema10.properties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        annotatedElementSchema23.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema23.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema10.addProperties("*/*", (io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        annotatedElementSchema0.setDefault((java.lang.Object) "*/*");
        java.lang.String str43 = annotatedElementSchema0.get$ref();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.Integer int46 = annotatedElementSchema0.getMaxItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.properties(strMap34);
        java.lang.Integer int36 = schema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.pattern("*/*");
        io.swagger.oas.models.media.Schema schema40 = schema38.name("");
        io.swagger.oas.models.media.Schema schema42 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str43 = schema42.getPattern();
        io.swagger.oas.models.media.Schema schema45 = schema42.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema42.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema47.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema50 = schema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema27.example((java.lang.Object) schema50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema27.externalDocs(externalDocumentation52);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "*/*" + "'", str43, "*/*");
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.maxLength((java.lang.Integer) 1);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 0);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str11 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema13 = schema7.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema14.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.xml(xML18);
        io.swagger.oas.models.media.Schema schema20 = schema12.example((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema12.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = schema12.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        java.util.List<java.lang.String> strList10 = annotatedElementSchema0.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema8.minProperties((java.lang.Integer) 100);
        schema14.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.required(strList22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minLength((java.lang.Integer) 10);
        java.lang.String str20 = schema19.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema19.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.lang.Integer int34 = schema19.getMinProperties();
        io.swagger.oas.models.media.XML xML35 = null;
        schema19.setXml(xML35);
        io.swagger.oas.models.media.Schema schema38 = schema19.writeOnly((java.lang.Boolean) true);
        schema19.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = schema19.getMultipleOf();
        annotatedElementSchema0.setAdditionalProperties(schema19);
        java.lang.String str43 = annotatedElementSchema0.get$ref();
        java.lang.Object obj44 = annotatedElementSchema0.getExample();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        annotatedElementSchema0.setProperties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.discriminator(discriminator16);
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = annotatedElementSchema0.getPattern();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        java.lang.Boolean boolean24 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Integer int31 = schema30.getMaxItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = schema9.getWriteOnly();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.maximum(bigDecimal11);
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser24 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema20.addExtension("no description", (java.lang.Object) operationParser24);
        annotatedElementSchema20.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema20.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean30 = annotatedElementSchema20.getWriteOnly();
        boolean boolean31 = schema19.equals((java.lang.Object) annotatedElementSchema20);
        annotatedElementSchema20.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("hi!");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray7 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces8 = null;
        javax.ws.rs.Produces produces9 = null;
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional11 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray7, produces8, produces9, components10);
        javax.ws.rs.Produces produces12 = null;
        javax.ws.rs.Produces produces13 = null;
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional15 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray7, produces12, produces13, components14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.example((java.lang.Object) apiResponseArray7);
        java.lang.String str17 = schema16.toString();
        io.swagger.oas.models.media.Schema schema19 = schema16.uniqueItems((java.lang.Boolean) true);
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.reflect.AnnotatedElement annotatedElement22 = null;
        schema19.addEnumItemObject(annotatedElement22);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(apiResponseArray7);
        org.junit.Assert.assertNotNull(apiResponsesOptional11);
        org.junit.Assert.assertNotNull(apiResponsesOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema21.getDiscriminator();
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema21.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNull(schema34);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser23 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema19.addExtension("no description", (java.lang.Object) operationParser23);
        annotatedElementSchema19.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        annotatedElementSchema19.setDiscriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.multipleOf(bigDecimal29);
        java.lang.Object obj31 = annotatedElementSchema19.getExample();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema19.$ref("hi!");
        annotatedElementSchema0.addExtension("#/components/schemas/", (java.lang.Object) annotatedElementSchema19);
        java.lang.String str35 = annotatedElementSchema19.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema7.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema7.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        schema9.setReadOnly((java.lang.Boolean) true);
        schema9.setMaxItems((java.lang.Integer) 0);
        java.lang.String str16 = schema9.get$ref();
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean10 = schema9.getNullable();
        java.lang.Boolean boolean11 = schema9.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj14 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal5 = null;
        schema4.setMinimum(bigDecimal5);
        schema4.setFormat("hi!");
        java.math.BigDecimal bigDecimal9 = schema4.getMinimum();
        schema4.setMinLength((java.lang.Integer) 1);
        java.lang.String str12 = schema4.getFormat();
        io.swagger.oas.models.media.Schema schema14 = schema4.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        io.swagger.oas.models.media.XML xML10 = null;
        schema7.setXml(xML10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        schema20.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.title("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.String str28 = annotatedElementSchema26.get$ref();
        io.swagger.oas.models.media.XML xML29 = null;
        annotatedElementSchema26.setXml(xML29);
        java.lang.Boolean boolean31 = annotatedElementSchema26.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = schema7.getTitle();
        java.lang.String str9 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema11 = schema7.maxLength((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass12 = schema7.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        java.lang.Object obj12 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.discriminator(discriminator20);
        java.lang.String str22 = schema21.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        java.lang.Integer int8 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean9 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean15 = schema14.getReadOnly();
        schema14.setReadOnly((java.lang.Boolean) false);
        java.lang.String str18 = schema14.getType();
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String[] strArray52 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        io.swagger.oas.models.media.Schema schema55 = schema14.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList53);
        java.lang.Boolean boolean57 = annotatedElementSchema0.getWriteOnly();
        java.lang.String str58 = annotatedElementSchema0.get$ref();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("#/components/schemas/");
        java.math.BigDecimal bigDecimal13 = null;
        schema10.setMultipleOf(bigDecimal13);
        java.lang.Boolean boolean15 = schema10.getReadOnly();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 1);
        annotatedElementSchema0.addExtension("#/components/schemas/", (java.lang.Object) annotatedElementSchema6);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = annotatedElementSchema0.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int18 = annotatedElementSchema15.getMaxItems();
        java.lang.Integer int19 = annotatedElementSchema15.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.XML xML21 = schema11.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema31.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str41 = annotatedElementSchema34.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str43 = annotatedElementSchema42.getPattern();
        annotatedElementSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean46 = annotatedElementSchema42.getWriteOnly();
        boolean boolean47 = annotatedElementSchema34.equals((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        annotatedElementSchema34.setExternalDocs(externalDocumentation48);
        java.lang.String[] strArray51 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema34.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema33.required((java.util.List<java.lang.String>) strList52);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList56 = schema55.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        schema55.setProperties(strMap57);
        io.swagger.oas.models.media.Schema schema60 = schema55.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal61 = null;
        schema60.setMinimum(bigDecimal61);
        schema11.setAdditionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema65 = schema60.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema60.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(xML21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(annotatedElementList56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation66);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 100);
        schema9.setExample((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        annotatedElementSchema30.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema30.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema49 = schema28.getNot();
        schema28.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema15.getFormat();
        java.lang.Integer int17 = schema15.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        java.lang.Integer int9 = schema7.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.readOnly((java.lang.Boolean) false);
        java.lang.Integer int18 = annotatedElementSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.properties(strMap27);
        annotatedElementSchema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema13.minLength((java.lang.Integer) 1);
        java.lang.String str32 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema13);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema13.setDiscriminator(discriminator34);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        schema11.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        schema33.setDescription("hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = annotatedElementSchema12.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        java.lang.String str41 = annotatedElementSchema33.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not(schema47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema49.title("hi!");
        schema48.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        annotatedElementSchema49.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema49.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
    }
}

