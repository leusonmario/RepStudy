import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        annotatedElementSchema22.setDefault((java.lang.Object) strList43);
        java.util.List<java.lang.String> strList47 = annotatedElementSchema22.getRequired();
        io.swagger.oas.models.media.Schema schema48 = schema21.required(strList47);
        schema48.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.deprecated((java.lang.Boolean) true);
        schema41.setAdditionalProperties(schema53);
        java.lang.String str59 = schema53.getPattern();
        java.lang.Boolean boolean60 = schema53.getNullable();
        schema53.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(boolean60);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        java.lang.String[] strArray30 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = schema33.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.readOnly((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema15.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema12.example((java.lang.Object) schema29);
        java.lang.Class<?> wildcardClass33 = schema12.getClass();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = annotatedElementSchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean40 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.uniqueItems((java.lang.Boolean) false);
        schema16.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema48.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = annotatedElementSchema48.getMinItems();
        annotatedElementSchema48.setType("hi!");
        java.util.List<java.lang.String> strList60 = annotatedElementSchema48.getRequired();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        io.swagger.oas.annotations.info.Contact contact66 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional67 = io.swagger.jaxrs2.OperationParser.getContact(contact66);
        annotatedElementSchema63.setExample((java.lang.Object) contactOptional67);
        annotatedElementSchema63.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema63.type("");
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema63.nullable((java.lang.Boolean) false);
        schema74.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean78 = annotatedElementSchema77.getReadOnly();
        java.lang.Boolean boolean79 = annotatedElementSchema77.getNullable();
        schema74.setDefault((java.lang.Object) annotatedElementSchema77);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean82 = annotatedElementSchema81.getReadOnly();
        java.lang.Boolean boolean83 = annotatedElementSchema81.getNullable();
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        annotatedElementSchema81.setRequired((java.util.List<java.lang.String>) strList86);
        annotatedElementSchema77.setRequired((java.util.List<java.lang.String>) strList86);
        schema62.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema91 = schema44.required((java.util.List<java.lang.String>) strList86);
        java.lang.Integer int92 = schema44.getMaxProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(contactOptional67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(int92);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema30 = schema13.minLength((java.lang.Integer) 1);
        java.lang.Object obj31 = null;
        schema13.setDefault(obj31);
        java.lang.String str33 = schema13.getTitle();
        io.swagger.oas.models.media.Schema schema35 = schema13.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.xml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        schema26.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str29 = schema26.getType();
        io.swagger.oas.models.media.Schema schema31 = schema26.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema32.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean43 = annotatedElementSchema42.getReadOnly();
        java.lang.Boolean boolean44 = annotatedElementSchema42.getNullable();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema42.setRequired((java.util.List<java.lang.String>) strList47);
        java.lang.String str50 = annotatedElementSchema42.getDescription();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema42.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator61 = annotatedElementSchema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema42.not((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.minProperties((java.lang.Integer) 10);
        java.lang.String str71 = annotatedElementSchema63.getName();
        annotatedElementSchema42.setDefault((java.lang.Object) annotatedElementSchema63);
        io.swagger.oas.models.media.XML xML73 = null;
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema63.xml(xML73);
        annotatedElementSchema32.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema63);
        schema31.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        java.lang.Boolean boolean77 = schema31.getExclusiveMinimum();
        java.lang.String str78 = schema31.getName();
        io.swagger.oas.models.media.Schema schema80 = schema31.maxItems((java.lang.Integer) 1);
        schema80.setTitle("no description");
        io.swagger.oas.models.media.Schema schema84 = schema80.pattern("no description");
        io.swagger.oas.models.media.Schema schema85 = schema14.not(schema80);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema25.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema9.example((java.lang.Object) schema42);
        schema42.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema42.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema18.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.License license24 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional25 = io.swagger.jaxrs2.OperationParser.getLicense(license24);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema21.example((java.lang.Object) licenseOptional25);
        java.lang.String str27 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = annotatedElementSchema21.getExternalDocs();
        annotatedElementSchema21.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.deprecated((java.lang.Boolean) false);
        java.lang.String str33 = annotatedElementSchema21.toString();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema8.example((java.lang.Object) str33);
        java.lang.Integer int35 = schema34.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema34.discriminator(discriminator36);
        schema34.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.xml(xML15);
        java.lang.String str17 = schema16.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema11.setExternalDocs(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("hi!");
        java.lang.Object obj16 = schema15.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema18.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.readOnly((java.lang.Boolean) true);
        java.lang.Integer int33 = schema30.getMaxItems();
        io.swagger.oas.models.media.Schema schema34 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        java.math.BigDecimal bigDecimal35 = schema15.getMaximum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        annotatedElementSchema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.additionalProperties(schema20);
        io.swagger.oas.models.media.Schema schema23 = schema20.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean24 = schema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema26.getMinProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema64.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema71.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        java.lang.Boolean boolean21 = schema9.getReadOnly();
        schema9.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.String str19 = annotatedElementSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema22.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.$ref("*/*");
        schema33.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str36 = schema33.getType();
        io.swagger.oas.models.media.Schema schema38 = schema33.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema39.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.Boolean boolean51 = annotatedElementSchema49.getNullable();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.String str57 = annotatedElementSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema49.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema60.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema49.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        annotatedElementSchema70.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema70.minProperties((java.lang.Integer) 10);
        java.lang.String str78 = annotatedElementSchema70.getName();
        annotatedElementSchema49.setDefault((java.lang.Object) annotatedElementSchema70);
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema70.xml(xML80);
        annotatedElementSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema70);
        schema38.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema39.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int92 = annotatedElementSchema39.getMaxLength();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(int92);
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minLength((java.lang.Integer) 10);
        boolean boolean16 = annotatedElementSchema0.equals((java.lang.Object) 10);
        java.lang.Boolean boolean17 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        annotatedElementSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = annotatedElementSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema22.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.name("");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 0);
        schema35.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal41 = null;
        annotatedElementSchema40.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxItems((java.lang.Integer) (-1));
        schema35.setExample((java.lang.Object) (-1));
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema35.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setNot(schema51);
        schema51.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.properties(strMap25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema19.getExtensions();
        annotatedElementSchema14.setExtensions(strMap27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema14.format("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.String str33 = annotatedElementSchema31.get$ref();
        io.swagger.oas.models.media.XML xML34 = null;
        annotatedElementSchema31.setXml(xML34);
        io.swagger.oas.models.media.XML xML36 = annotatedElementSchema31.getXml();
        java.lang.String str37 = annotatedElementSchema31.get$ref();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal40 = null;
        annotatedElementSchema31.setMaximum(bigDecimal40);
        java.lang.Object obj42 = annotatedElementSchema31.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal44 = null;
        annotatedElementSchema43.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema43.nullable((java.lang.Boolean) false);
        annotatedElementSchema43.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema43.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema52.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema52.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema52.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info63 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional64 = io.swagger.jaxrs2.OperationParser.getInfo(info63);
        java.lang.Class<?> wildcardClass65 = infoOptional64.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray66 = new java.lang.reflect.AnnotatedElement[] { wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList67 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList67, annotatedElementArray66);
        schema62.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        annotatedElementSchema43.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        annotatedElementSchema31.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        schema30.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(infoOptional64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(annotatedElementArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.xml(xML8);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = annotatedElementSchema28.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema28.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.$ref("*/*");
        schema39.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str42 = schema39.getType();
        io.swagger.oas.models.media.Schema schema44 = schema39.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema45.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.minProperties((java.lang.Integer) 10);
        java.lang.String str84 = annotatedElementSchema76.getName();
        annotatedElementSchema55.setDefault((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema76.xml(xML86);
        annotatedElementSchema45.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema76);
        schema44.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema45);
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        annotatedElementSchema45.setDiscriminator(discriminator90);
        annotatedElementSchema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema45);
        annotatedElementSchema45.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = schema7.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        annotatedElementSchema14.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.type("");
        java.lang.String str24 = schema23.getPattern();
        io.swagger.oas.models.media.Schema schema26 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema23.$ref("*/*");
        schema13.setExample((java.lang.Object) schema28);
        java.lang.Object obj30 = schema13.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(obj30);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = annotatedElementSchema0.toString();
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str4, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = schema14.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList18 = schema17.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(annotatedElementList18);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        schema16.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        schema25.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean19 = schema18.getReadOnly();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator41 = annotatedElementSchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema22.not((io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        java.lang.reflect.AnnotatedElement annotatedElement43 = annotatedElementSchema22.getDefault();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema22.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str59 = annotatedElementSchema58.getPattern();
        annotatedElementSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean62 = annotatedElementSchema58.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema58.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str65 = annotatedElementSchema58.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str67 = annotatedElementSchema66.getPattern();
        annotatedElementSchema66.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean70 = annotatedElementSchema66.getWriteOnly();
        boolean boolean71 = annotatedElementSchema58.equals((java.lang.Object) annotatedElementSchema66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        annotatedElementSchema58.setExternalDocs(externalDocumentation72);
        java.lang.String[] strArray75 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema79 = schema57.required((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema80 = schema45.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema schema81 = schema18.additionalProperties(schema45);
        schema13.setAdditionalProperties(schema18);
        schema13.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(annotatedElement43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMaxItems();
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = annotatedElementSchema21.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema36.minLength((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList41 = schema36.getEnum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(annotatedElementList41);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        java.lang.Boolean boolean14 = schema12.getReadOnly();
        schema12.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = schema11.getMinimum();
        java.lang.Boolean boolean15 = schema11.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema11.setDiscriminator(discriminator16);
        java.lang.Integer int18 = schema11.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean26 = schema25.getReadOnly();
        java.math.BigDecimal bigDecimal27 = null;
        schema25.setMaximum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean30 = annotatedElementSchema29.getReadOnly();
        java.lang.Boolean boolean31 = annotatedElementSchema29.getNullable();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str37 = annotatedElementSchema29.getDescription();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema29.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.lang.reflect.AnnotatedElement annotatedElement50 = annotatedElementSchema29.getDefault();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema29.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.properties(strMap59);
        io.swagger.oas.models.media.Schema schema62 = schema60.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str66 = annotatedElementSchema65.getPattern();
        annotatedElementSchema65.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean69 = annotatedElementSchema65.getWriteOnly();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema65.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str72 = annotatedElementSchema65.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str74 = annotatedElementSchema73.getPattern();
        annotatedElementSchema73.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean77 = annotatedElementSchema73.getWriteOnly();
        boolean boolean78 = annotatedElementSchema65.equals((java.lang.Object) annotatedElementSchema73);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        annotatedElementSchema65.setExternalDocs(externalDocumentation79);
        java.lang.String[] strArray82 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        annotatedElementSchema65.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema86 = schema64.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema87 = schema52.additionalProperties(schema64);
        io.swagger.oas.models.media.Schema schema88 = schema25.additionalProperties(schema52);
        java.lang.Boolean boolean89 = schema25.getDeprecated();
        boolean boolean90 = schema20.equals((java.lang.Object) boolean89);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElement50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        schema37.set$ref("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.minProperties((java.lang.Integer) 0);
        schema45.setFormat("*/*");
        schema45.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal52 = null;
        annotatedElementSchema51.setMultipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        schema55.setFormat("*/*");
        java.math.BigDecimal bigDecimal58 = schema55.getMinimum();
        io.swagger.oas.models.media.Schema schema59 = schema45.addProperties("no description", schema55);
        io.swagger.oas.models.media.Schema schema61 = schema45.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str63 = annotatedElementSchema62.getPattern();
        annotatedElementSchema62.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean66 = annotatedElementSchema62.getWriteOnly();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema62.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = annotatedElementSchema62.getProperties();
        schema45.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema62);
        schema45.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal74 = null;
        annotatedElementSchema73.setMultipleOf(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema73.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema79 = schema77.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean80 = schema79.getExclusiveMinimum();
        schema79.set$ref("*/*");
        java.lang.Integer int83 = schema79.getMaxLength();
        io.swagger.oas.models.media.Schema schema84 = schema45.additionalProperties(schema79);
        schema37.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema84);
        java.math.BigDecimal bigDecimal86 = schema37.getMinimum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(bigDecimal86);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        java.lang.String str19 = annotatedElementSchema11.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.xml(xML29);
        io.swagger.oas.models.media.Schema schema31 = schema23.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema32 = schema10.not(schema23);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        schema23.setMaxProperties((java.lang.Integer) (-1));
        schema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema12.setMinLength((java.lang.Integer) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(schema12);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        annotatedElementSchema14.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = annotatedElementSchema14.getProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        java.lang.String str17 = schema16.toString();
        schema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = schema28.minLength((java.lang.Integer) 10);
        java.lang.String str31 = schema30.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean34 = annotatedElementSchema33.getReadOnly();
        java.lang.Boolean boolean35 = annotatedElementSchema33.getNullable();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.String str41 = annotatedElementSchema33.getDescription();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        java.lang.String str45 = annotatedElementSchema33.get$ref();
        java.lang.Integer int46 = annotatedElementSchema33.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal50 = null;
        schema49.setMaximum(bigDecimal50);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.lang.Boolean boolean27 = annotatedElementSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.example((java.lang.Object) boolean27);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) (-1));
        java.lang.String str31 = schema28.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema28.getExtensions();
        java.lang.String str33 = schema28.getDescription();
        java.math.BigDecimal bigDecimal34 = schema28.getMinimum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        schema10.setTitle("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema10.getExternalDocs();
        java.lang.String str14 = schema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        io.swagger.oas.annotations.info.Contact contact26 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional27 = io.swagger.jaxrs2.OperationParser.getContact(contact26);
        annotatedElementSchema23.setExample((java.lang.Object) contactOptional27);
        annotatedElementSchema23.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        schema22.setDefault((java.lang.Object) annotatedElementSchema23);
        java.lang.String str36 = annotatedElementSchema23.getType();
        schema10.setDefault((java.lang.Object) annotatedElementSchema23);
        java.lang.Boolean boolean38 = schema10.getNullable();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(contactOptional27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        annotatedElementSchema15.setProperties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema15.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        schema33.setDiscriminator(discriminator34);
        java.lang.Boolean boolean36 = schema33.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        annotatedElementSchema0.setDiscriminator(discriminator17);
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.type("");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not(schema34);
        schema8.setDefault((java.lang.Object) schema34);
        schema34.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.externalDocs(externalDocumentation39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.maximum(bigDecimal41);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema7.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema15.pattern("hi!");
        schema24.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema7.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML30 = schema24.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(xML30);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser44 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema40.addExtension("no description", (java.lang.Object) operationParser44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList52);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.maximum(bigDecimal56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema schema61 = schema57.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema24.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema64 = schema62.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str20 = annotatedElementSchema19.getPattern();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema19.maxProperties((java.lang.Integer) 0);
        java.lang.String str23 = schema22.getFormat();
        io.swagger.oas.models.media.Schema schema25 = schema22.minProperties((java.lang.Integer) 0);
        schema16.setNot(schema22);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int11 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser16 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema12.addExtension("no description", (java.lang.Object) operationParser16);
        annotatedElementSchema12.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        annotatedElementSchema12.setDiscriminator(discriminator20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.multipleOf(bigDecimal22);
        schema23.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        java.lang.String str55 = annotatedElementSchema47.getName();
        annotatedElementSchema26.setDefault((java.lang.Object) annotatedElementSchema47);
        io.swagger.oas.models.media.Schema schema57 = null;
        annotatedElementSchema26.setNot(schema57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema26.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList61 = annotatedElementSchema26.getRequired();
        schema23.setRequired(strList61);
        schema23.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema23.getExclusiveMinimum();
        schema23.setTitle("");
        schema10.setDefault((java.lang.Object) schema23);
        java.lang.String str69 = schema23.getType();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMaxItems();
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = annotatedElementSchema21.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.xml(xML37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        io.swagger.oas.annotations.info.Contact contact42 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional43 = io.swagger.jaxrs2.OperationParser.getContact(contact42);
        annotatedElementSchema39.setExample((java.lang.Object) contactOptional43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.readOnly((java.lang.Boolean) false);
        java.lang.String str47 = annotatedElementSchema39.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema39.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema39.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema39.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema39.minimum(bigDecimal54);
        annotatedElementSchema39.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema39.minLength((java.lang.Integer) 100);
        schema36.setExample((java.lang.Object) schema59);
        io.swagger.oas.models.media.Schema schema62 = schema59.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(contactOptional43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema36.name("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema48.getExtensions();
        java.lang.Integer int52 = schema48.getMaxItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.externalDocs(externalDocumentation18);
        java.lang.String str20 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = annotatedElementSchema27.getEnum();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.description("hi!");
        java.lang.Object obj35 = schema34.getExample();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema34);
        io.swagger.oas.models.media.Schema schema38 = schema36.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema40.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int43 = schema40.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = annotatedElementSchema44.getMinProperties();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.maximum(bigDecimal50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.Contact contact57 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional58 = io.swagger.jaxrs2.OperationParser.getContact(contact57);
        annotatedElementSchema54.setExample((java.lang.Object) contactOptional58);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema54.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean63 = annotatedElementSchema62.getReadOnly();
        java.lang.Boolean boolean64 = annotatedElementSchema62.getNullable();
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        annotatedElementSchema62.setRequired((java.util.List<java.lang.String>) strList67);
        java.lang.String str70 = annotatedElementSchema62.getDescription();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema62.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema73.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator81 = annotatedElementSchema73.getDiscriminator();
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema62.not((io.swagger.oas.models.media.Schema) annotatedElementSchema73);
        java.lang.Class<?> wildcardClass83 = annotatedElementSchema62.getClass();
        schema61.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass83);
        annotatedElementSchema44.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass83);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema44.minItems((java.lang.Integer) 10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList88 = schema87.getEnum();
        schema40.setEnum(annotatedElementList88);
        schema17.setEnum(annotatedElementList88);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(contactOptional58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(discriminator81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(annotatedElementList88);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema41.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        java.lang.Object obj33 = null;
        boolean boolean34 = annotatedElementSchema21.equals(obj33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema21.getNot();
        annotatedElementSchema21.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema21.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.minItems((java.lang.Integer) 1);
        annotatedElementSchema21.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.nullable((java.lang.Boolean) false);
        schema20.setExclusiveMinimum((java.lang.Boolean) false);
        schema20.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.util.List<java.lang.String> strList20 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.$ref("*/*");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema21.minimum(bigDecimal33);
        java.lang.String str35 = schema34.getTitle();
        io.swagger.oas.models.media.Schema schema37 = schema34.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.not(schema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema39.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema39.setNullable((java.lang.Boolean) false);
        annotatedElementSchema39.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema39.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema39.externalDocs(externalDocumentation52);
        annotatedElementSchema0.setDefault((java.lang.Object) schema53);
        schema53.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema11.setProperties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema11.minProperties((java.lang.Integer) 0);
        java.lang.String str33 = schema32.getDescription();
        schema32.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema32.getDeprecated();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = annotatedElementSchema23.getEnum();
        annotatedElementSchema23.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = annotatedElementSchema31.getMinItems();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema23.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList44 = annotatedElementSchema23.getEnum();
        io.swagger.oas.models.media.XML xML45 = null;
        annotatedElementSchema23.setXml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList60 = schema59.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator61 = schema59.getDiscriminator();
        io.swagger.oas.models.media.Schema schema63 = schema59.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema23.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema65 = schema19.example((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = schema67.readOnly((java.lang.Boolean) false);
        schema69.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(annotatedElementList44);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(annotatedElementList60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema schema16 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Schema schema26 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema5.discriminator(discriminator63);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema28 = schema25.nullable((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getType();
        io.swagger.oas.models.media.Schema schema31 = schema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema28.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema28.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema35.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        annotatedElementSchema15.setProperties(strMap22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        io.swagger.oas.annotations.info.Contact contact27 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional28 = io.swagger.jaxrs2.OperationParser.getContact(contact27);
        annotatedElementSchema24.setExample((java.lang.Object) contactOptional28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        java.lang.String str32 = annotatedElementSchema24.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema24.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema24.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema24.minimum(bigDecimal39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        schema40.setDiscriminator(discriminator41);
        java.lang.Boolean boolean43 = schema40.getExclusiveMaximum();
        annotatedElementSchema15.setNot(schema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = annotatedElementSchema15.getProperties();
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema15.xml(xML46);
        io.swagger.oas.models.media.Schema schema48 = schema47.getNot();
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema51 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int52 = schema11.getMaxLength();
        java.lang.String str53 = schema11.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(contactOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.XML xML10 = null;
        schema7.setXml(xML10);
        java.math.BigDecimal bigDecimal12 = null;
        schema7.setMinimum(bigDecimal12);
        java.lang.String str14 = schema7.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema4.additionalProperties(schema8);
        schema4.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = schema4.getMaximum();
        schema4.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema4.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema4.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema17.setMinProperties((java.lang.Integer) (-1));
        schema17.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema12 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj10 = null;
        boolean boolean11 = annotatedElementSchema0.equals(obj10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        io.swagger.oas.annotations.info.License license49 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional50 = io.swagger.jaxrs2.OperationParser.getLicense(license49);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema46.example((java.lang.Object) licenseOptional50);
        java.lang.Boolean boolean52 = schema51.getReadOnly();
        schema45.setDefault((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema54 = schema33.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 10);
        java.lang.String str65 = schema62.toString();
        java.lang.Integer int66 = schema62.getMaxProperties();
        java.lang.String str67 = schema62.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str69 = annotatedElementSchema68.getPattern();
        annotatedElementSchema68.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean72 = annotatedElementSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema68.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str76 = annotatedElementSchema75.getPattern();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema68.not((io.swagger.oas.models.media.Schema) annotatedElementSchema75);
        annotatedElementSchema75.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema75.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema75.pattern("");
        java.lang.Boolean boolean84 = schema83.getWriteOnly();
        io.swagger.oas.models.media.Schema schema85 = schema62.not(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema83.exclusiveMaximum((java.lang.Boolean) true);
        schema54.setExample((java.lang.Object) schema87);
        io.swagger.oas.models.media.Schema schema90 = schema54.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.multipleOf(bigDecimal91);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation93 = null;
        schema92.setExternalDocs(externalDocumentation93);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(licenseOptional50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str65, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.License license25 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional26 = io.swagger.jaxrs2.OperationParser.getLicense(license25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.example((java.lang.Object) licenseOptional26);
        java.lang.String str28 = annotatedElementSchema22.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = annotatedElementSchema22.getExternalDocs();
        annotatedElementSchema22.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema36 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str37 = schema20.getTitle();
        java.lang.String str38 = schema20.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema7.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema7.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) true);
        schema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema7.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema15 = schema7.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema15.setMaxLength((java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        java.lang.Boolean boolean5 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema7.setDiscriminator(discriminator14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        schema17.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String str13 = schema12.toString();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        schema12.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema12.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList16 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList16);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean13 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.XML xML14 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.readOnly((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema15.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema15.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema15.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema15.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema44.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = annotatedElementSchema48.getExtensions();
        schema47.setExtensions(strMap54);
        annotatedElementSchema34.setExtensions(strMap54);
        schema33.setExtensions(strMap54);
        annotatedElementSchema0.setExtensions(strMap54);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = annotatedElementSchema30.getMinProperties();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray41 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = schema37.required((java.util.List<java.lang.String>) strList42);
        annotatedElementSchema21.setDefault((java.lang.Object) strList42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema15.required((java.util.List<java.lang.String>) strList42);
        java.lang.Boolean boolean47 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema15.not(schema48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str51 = annotatedElementSchema50.getPattern();
        annotatedElementSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = annotatedElementSchema50.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema50.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str57 = annotatedElementSchema50.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str59 = annotatedElementSchema58.getPattern();
        annotatedElementSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean62 = annotatedElementSchema58.getWriteOnly();
        boolean boolean63 = annotatedElementSchema50.equals((java.lang.Object) annotatedElementSchema58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        annotatedElementSchema50.setExternalDocs(externalDocumentation64);
        java.lang.String[] strArray67 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        annotatedElementSchema50.setRequired((java.util.List<java.lang.String>) strList68);
        schema49.setRequired((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema14.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema74 = schema72.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        java.lang.Class<?> wildcardClass39 = annotatedElementSchema18.getClass();
        schema17.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        io.swagger.oas.models.media.XML xML42 = annotatedElementSchema0.getXml();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) true);
        schema48.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNull(xML42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema11.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = schema11.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema11.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.lang.Object> strMap10 = schema9.getExtensions();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema7.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setNot(schema26);
        java.math.BigDecimal bigDecimal30 = schema26.getMaximum();
        schema26.setMaxItems((java.lang.Integer) (-1));
        java.lang.Integer int33 = schema26.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema21.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.maximum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema schema18 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        schema17.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema21 = schema17.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema23.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = annotatedElementSchema27.getMinItems();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.minimum(bigDecimal37);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList39 = schema38.getEnum();
        io.swagger.oas.models.media.Schema schema41 = schema38.maxLength((java.lang.Integer) (-1));
        schema23.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema44 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        schema47.setMaximum(bigDecimal48);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(annotatedElementList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator3 = null;
        annotatedElementSchema0.setDiscriminator(discriminator3);
        java.util.List<java.lang.String> strList5 = null;
        annotatedElementSchema0.setRequired(strList5);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = annotatedElementSchema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema7.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema15.getReadOnly();
        java.math.BigDecimal bigDecimal19 = schema15.getMultipleOf();
        schema15.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = annotatedElementSchema0.getMultipleOf();
        java.lang.Integer int26 = annotatedElementSchema0.getMaxItems();
        annotatedElementSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.getNot();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.multipleOf(bigDecimal5);
        java.lang.Class<?> wildcardClass7 = annotatedElementSchema0.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        java.lang.Integer int11 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema13 = schema4.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema13.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        java.lang.String str15 = schema12.get$ref();
        java.lang.Integer int16 = schema12.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema schema65 = schema16.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema65.getNot();
        io.swagger.oas.models.media.Schema schema68 = schema66.minProperties((java.lang.Integer) 10);
        schema66.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema22.getNot();
        java.lang.String str26 = schema25.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.String str30 = annotatedElementSchema28.get$ref();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema28.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal35 = null;
        annotatedElementSchema34.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema34.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList39 = annotatedElementSchema34.getEnum();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.description("hi!");
        java.lang.Object obj42 = schema41.getExample();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema41);
        java.math.BigDecimal bigDecimal44 = schema43.getMultipleOf();
        schema43.setUniqueItems((java.lang.Boolean) false);
        schema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal48 = null;
        schema25.setMaximum(bigDecimal48);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(annotatedElementList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        schema8.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = schema8.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema13.getProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 0);
        schema10.setType("");
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        schema25.setProperties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema40.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.properties(strMap50);
        java.lang.String str52 = schema51.getName();
        io.swagger.oas.annotations.info.Info info53 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional54 = io.swagger.jaxrs2.OperationParser.getInfo(info53);
        java.lang.Class<?> wildcardClass55 = infoOptional54.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema56.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema56.setRequired((java.util.List<java.lang.String>) strList62);
        java.lang.Integer int65 = annotatedElementSchema56.getMinItems();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema56.minimum(bigDecimal66);
        annotatedElementSchema56.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass70 = annotatedElementSchema56.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema71.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema78.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass81 = schema78.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray82 = new java.lang.reflect.AnnotatedElement[] { wildcardClass55, wildcardClass70, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList83 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList83, annotatedElementArray82);
        schema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema39.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema25.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema13.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        java.lang.String str89 = schema13.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        schema13.setExternalDocs(externalDocumentation90);
        java.lang.String str92 = schema13.getTitle();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(infoOptional54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotatedElementArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        schema14.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema11.additionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxLength((java.lang.Integer) 10);
        java.lang.String str20 = schema17.getName();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        java.lang.Boolean boolean7 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxProperties((java.lang.Integer) (-1));
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        annotatedElementSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int8 = annotatedElementSchema0.getMaxItems();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList9 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        java.lang.String str22 = annotatedElementSchema14.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.properties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator33 = annotatedElementSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        annotatedElementSchema14.setDefault((java.lang.Object) annotatedElementSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = annotatedElementSchema34.getExtensions();
        schema13.setExtensions(strMap44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal47 = null;
        annotatedElementSchema46.setMultipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        schema50.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator53 = schema50.getDiscriminator();
        java.math.BigDecimal bigDecimal54 = null;
        schema50.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema50.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema57.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = annotatedElementSchema61.getExtensions();
        schema60.setExtensions(strMap67);
        schema50.setExtensions(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema50.getDiscriminator();
        java.math.BigDecimal bigDecimal71 = schema50.getMultipleOf();
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema50.maximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = schema50.exclusiveMaximum((java.lang.Boolean) false);
        schema13.setExample((java.lang.Object) schema75);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(annotatedElementList9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        schema9.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema9.minProperties((java.lang.Integer) 0);
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema14.minProperties((java.lang.Integer) 1);
        schema18.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        annotatedElementSchema15.setProperties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema15.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.minimum(bigDecimal34);
        io.swagger.oas.models.media.XML xML36 = schema35.getXml();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(xML36);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema7.setExternalDocs(externalDocumentation14);
        schema7.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        io.swagger.oas.annotations.info.Contact contact11 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional12 = io.swagger.jaxrs2.OperationParser.getContact(contact11);
        annotatedElementSchema8.setExample((java.lang.Object) contactOptional12);
        annotatedElementSchema8.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema8.nullable((java.lang.Boolean) false);
        schema7.setDefault((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema8.discriminator(discriminator19);
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema8.setMinimum(bigDecimal21);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(contactOptional12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = schema13.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema13.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal12 = annotatedElementSchema0.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.discriminator(discriminator13);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.externalDocs(externalDocumentation10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema41 = schema35.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema41.minLength((java.lang.Integer) 1);
        java.lang.Boolean boolean44 = schema43.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        java.lang.Boolean boolean14 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str24 = annotatedElementSchema17.getFormat();
        annotatedElementSchema17.setType("no description");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema28.getReadOnly();
        io.swagger.oas.models.media.Schema schema30 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema32 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int33 = schema10.getMinItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema7.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.Integer int19 = annotatedElementSchema16.getMaxItems();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema16.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean25 = annotatedElementSchema24.getReadOnly();
        java.lang.Boolean boolean26 = annotatedElementSchema24.getNullable();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList29);
        java.lang.String str32 = annotatedElementSchema24.getDescription();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator43 = annotatedElementSchema35.getDiscriminator();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema24.not((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.minProperties((java.lang.Integer) 10);
        java.lang.String str53 = annotatedElementSchema45.getName();
        annotatedElementSchema24.setDefault((java.lang.Object) annotatedElementSchema45);
        io.swagger.oas.models.media.Schema schema55 = null;
        annotatedElementSchema24.setNot(schema55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema24.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList59 = annotatedElementSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema24.writeOnly((java.lang.Boolean) false);
        java.lang.String str62 = annotatedElementSchema24.getType();
        java.lang.String[] strArray68 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema72 = schema23.required((java.util.List<java.lang.String>) strList69);
        annotatedElementSchema7.setExample((java.lang.Object) schema72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema7.minItems((java.lang.Integer) 0);
        schema75.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema schema43 = null;
        annotatedElementSchema12.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema12.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList47 = annotatedElementSchema12.getRequired();
        annotatedElementSchema0.setRequired(strList47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.XML xML52 = null;
        annotatedElementSchema49.setXml(xML52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        java.lang.Boolean boolean57 = annotatedElementSchema0.getNullable();
        java.math.BigDecimal bigDecimal58 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(bigDecimal58);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        schema10.setTitle("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema10.getExternalDocs();
        java.lang.String str14 = schema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        io.swagger.oas.annotations.info.Contact contact26 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional27 = io.swagger.jaxrs2.OperationParser.getContact(contact26);
        annotatedElementSchema23.setExample((java.lang.Object) contactOptional27);
        annotatedElementSchema23.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        schema22.setDefault((java.lang.Object) annotatedElementSchema23);
        java.lang.String str36 = annotatedElementSchema23.getType();
        schema10.setDefault((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str39 = annotatedElementSchema38.getPattern();
        annotatedElementSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = annotatedElementSchema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str46 = annotatedElementSchema45.getPattern();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema38.not((io.swagger.oas.models.media.Schema) annotatedElementSchema45);
        schema47.setTitle("#/components/schemas/");
        java.lang.Integer int50 = schema47.getMinLength();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema47.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema47.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema47.discriminator(discriminator55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema47.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema47.format("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema10.example((java.lang.Object) "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(contactOptional27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        java.lang.Boolean boolean78 = schema77.getDeprecated();
        io.swagger.oas.models.media.Schema schema80 = schema77.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal81 = null;
        schema80.setMinimum(bigDecimal81);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        annotatedElementSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = annotatedElementSchema12.getType();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMultipleOf(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = null;
        schema27.setMinimum(bigDecimal30);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema11.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        java.lang.reflect.AnnotatedElement annotatedElement37 = annotatedElementSchema16.getDefault();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema16.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.properties(strMap46);
        io.swagger.oas.models.media.Schema schema49 = schema47.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema52.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str59 = annotatedElementSchema52.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str61 = annotatedElementSchema60.getPattern();
        annotatedElementSchema60.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean64 = annotatedElementSchema60.getWriteOnly();
        boolean boolean65 = annotatedElementSchema52.equals((java.lang.Object) annotatedElementSchema60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        annotatedElementSchema52.setExternalDocs(externalDocumentation66);
        java.lang.String[] strArray69 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        annotatedElementSchema52.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema73 = schema51.required((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema39.additionalProperties(schema51);
        io.swagger.oas.models.media.Schema schema76 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj77 = schema76.getExample();
        io.swagger.oas.models.media.Schema schema79 = schema76.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean80 = schema76.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema76);
        io.swagger.oas.models.media.Schema schema83 = schema76.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema84 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal85 = null;
        annotatedElementSchema84.setMultipleOf(bigDecimal85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema84.nullable((java.lang.Boolean) false);
        annotatedElementSchema84.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema92 = annotatedElementSchema84.minProperties((java.lang.Integer) 1);
        schema83.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema84);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema83.getProperties();
        java.lang.Boolean boolean95 = schema83.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElement37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema16.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        schema20.setMaximum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        annotatedElementSchema0.setProperties(strMap17);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema9.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        schema19.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema31 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema33 = schema7.name("");
        schema33.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = schema28.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        java.lang.Object obj6 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        annotatedElementSchema14.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema14.getType();
        io.swagger.oas.models.media.Schema schema24 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema14);
        java.lang.String str25 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.media.XML xML26 = annotatedElementSchema14.getXml();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(xML26);
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = schema10.minItems((java.lang.Integer) 0);
        java.lang.String str14 = schema13.getTitle();
        schema13.setMinLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean17 = schema13.getUniqueItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema4.minItems((java.lang.Integer) (-1));
        schema33.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Integer int6 = annotatedElementSchema0.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int12 = schema4.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        schema20.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema20.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        java.lang.Boolean boolean14 = schema13.getNullable();
        java.lang.Boolean boolean15 = schema13.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser20 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema16.addExtension("no description", (java.lang.Object) operationParser20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema16.required((java.util.List<java.lang.String>) strList28);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.maximum(bigDecimal32);
        java.util.List<java.lang.String> strList34 = schema33.getRequired();
        io.swagger.oas.models.media.Schema schema35 = schema13.required(strList34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.xml(xML36);
        java.math.BigDecimal bigDecimal38 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = annotatedElementSchema40.getMinProperties();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        io.swagger.oas.annotations.info.Contact contact51 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional52 = io.swagger.jaxrs2.OperationParser.getContact(contact51);
        annotatedElementSchema48.setExample((java.lang.Object) contactOptional52);
        annotatedElementSchema48.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema48.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.uniqueItems((java.lang.Boolean) false);
        schema47.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema48.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema37.addExtension("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(contactOptional52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.setTitle("");
        schema11.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 10);
        java.lang.String str19 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema21 = schema18.addRequiredItem("");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.maximum(bigDecimal22);
        schema21.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        annotatedElementSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = annotatedElementSchema27.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        annotatedElementSchema34.setDeprecated((java.lang.Boolean) true);
        schema21.setExample((java.lang.Object) annotatedElementSchema34);
        annotatedElementSchema0.addExtension("#/components/schemas/hi!", (java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal41 = schema21.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal41);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int11 = schema10.getMaxItems();
        java.lang.Boolean boolean12 = schema10.getReadOnly();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.maximum(bigDecimal3);
        java.lang.reflect.AnnotatedElement annotatedElement5 = null;
        schema2.addEnumItemObject(annotatedElement5);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.set$ref("*/*");
        java.lang.Integer int42 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema43 = schema4.additionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.discriminator(discriminator44);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema47.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema47.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal52 = null;
        schema51.setMinimum(bigDecimal52);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema38.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema40.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser22 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema18.addExtension("no description", (java.lang.Object) operationParser22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema18.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = annotatedElementSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema35 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema16.getExtensions();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema3.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        schema3.setDiscriminator(discriminator6);
        schema3.setWriteOnly((java.lang.Boolean) true);
        schema3.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema3);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        schema22.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema22.$ref("default");
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.additionalProperties(schema37);
        java.lang.String str39 = schema38.getName();
        java.lang.String str40 = schema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        annotatedElementSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = annotatedElementSchema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema41.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str49 = annotatedElementSchema48.getPattern();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema41.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        annotatedElementSchema48.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema48.setFormat("hi!");
        java.lang.Boolean boolean55 = annotatedElementSchema48.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = schema38.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        java.lang.Integer int57 = annotatedElementSchema48.getMaxItems();
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.XML xML68 = null;
        schema4.setXml(xML68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema4.maximum(bigDecimal70);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList72 = schema71.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(annotatedElementList72);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        annotatedElementSchema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema5.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = schema34.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema15.getMaxLength();
        schema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = schema15.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setType("hi!");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.not(schema27);
        java.lang.String str29 = annotatedElementSchema0.getDescription();
        java.lang.reflect.AnnotatedElement annotatedElement30 = annotatedElementSchema0.getDefault();
        java.lang.Boolean boolean31 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(annotatedElement30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList7 = schema6.getEnum();
        io.swagger.oas.models.media.Schema schema9 = schema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = annotatedElementSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray21 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        io.swagger.oas.models.media.Schema schema24 = schema17.required((java.util.List<java.lang.String>) strList22);
        schema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema9.additionalProperties(schema28);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        annotatedElementSchema31.setType("no description");
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema31.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML47 = schema44.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema44.setExternalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str52 = schema44.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        io.swagger.oas.annotations.info.Contact contact56 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional57 = io.swagger.jaxrs2.OperationParser.getContact(contact56);
        annotatedElementSchema53.setExample((java.lang.Object) contactOptional57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema53.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int68 = annotatedElementSchema63.getMinProperties();
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema63.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str74 = annotatedElementSchema73.getPattern();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema73.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema77.setPattern("");
        annotatedElementSchema77.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = annotatedElementSchema77.getExtensions();
        schema76.setExtensions(strMap83);
        annotatedElementSchema63.setExtensions(strMap83);
        annotatedElementSchema53.setExtensions(strMap83);
        schema44.setExtensions(strMap83);
        schema29.setExtensions(strMap83);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(annotatedElementList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "no description" + "'", str52, "no description");
        org.junit.Assert.assertNotNull(contactOptional57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.XML xML8 = null;
        annotatedElementSchema0.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean31 = annotatedElementSchema0.equals((java.lang.Object) true);
        java.lang.Boolean boolean32 = annotatedElementSchema0.getWriteOnly();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional28 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional30 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional31 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(tagSetOptional26);
        org.junit.Assert.assertNotNull(tagSetOptional27);
        org.junit.Assert.assertNotNull(tagSetOptional28);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertNotNull(tagSetOptional30);
        org.junit.Assert.assertNotNull(tagSetOptional31);
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.maxLength((java.lang.Integer) (-1));
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList18 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(annotatedElementList18);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.XML xML62 = null;
        annotatedElementSchema17.setXml(xML62);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema17.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList66 = annotatedElementSchema17.getEnum();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema17.minimum(bigDecimal67);
        java.lang.String str69 = schema68.getFormat();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(annotatedElementList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal30 = schema29.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator31 = schema29.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(discriminator31);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema20.minLength((java.lang.Integer) 100);
        java.lang.Boolean boolean32 = schema31.getNullable();
        schema31.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = schema42.minLength((java.lang.Integer) 10);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean48 = annotatedElementSchema47.getReadOnly();
        java.lang.Boolean boolean49 = annotatedElementSchema47.getNullable();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema47.setRequired((java.util.List<java.lang.String>) strList52);
        java.lang.String str55 = annotatedElementSchema47.getDescription();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema58 = schema44.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema47);
        java.lang.Integer int59 = schema44.getMinProperties();
        io.swagger.oas.models.media.XML xML60 = null;
        schema44.setXml(xML60);
        schema44.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int64 = schema44.getMaxLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = schema44.getExtensions();
        schema31.setExtensions(strMap65);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal41 = null;
        annotatedElementSchema40.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        schema44.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema48 = schema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema35.not(schema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema35.getExtensions();
        schema35.setMinLength((java.lang.Integer) 10);
        schema35.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema35.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        java.lang.Boolean boolean14 = schema10.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema12.setNullable((java.lang.Boolean) false);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 0);
        schema24.setType("");
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema11.not(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maximum(bigDecimal12);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.discriminator(discriminator14);
        java.lang.Boolean boolean16 = schema15.getExclusiveMinimum();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema11.setMaxProperties((java.lang.Integer) 0);
        annotatedElementSchema11.setPattern("hi!");
        annotatedElementSchema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.deprecated((java.lang.Boolean) true);
        schema41.setAdditionalProperties(schema53);
        schema41.setReadOnly((java.lang.Boolean) false);
        schema41.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal63 = null;
        schema41.setMinimum(bigDecimal63);
        java.lang.Integer int65 = schema41.getMinProperties();
        java.math.BigDecimal bigDecimal66 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema68 = schema41.title("");
        schema68.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML71 = null;
        schema68.setXml(xML71);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        schema22.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema12.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema25.nullable((java.lang.Boolean) false);
        schema27.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        schema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema21.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.not(schema24);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema0.setMinimum(bigDecimal18);
        java.util.List<java.lang.String> strList20 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = annotatedElementSchema0.getExclusiveMaximum();
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML18 = null;
        annotatedElementSchema0.setXml(xML18);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema20.properties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        java.lang.String str34 = annotatedElementSchema32.get$ref();
        io.swagger.oas.models.media.XML xML35 = null;
        annotatedElementSchema32.setXml(xML35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = annotatedElementSchema32.getExternalDocs();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = annotatedElementSchema40.getMinItems();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.minimum(bigDecimal50);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList52 = schema51.getEnum();
        schema39.setNot(schema51);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema39.maximum(bigDecimal54);
        schema31.setDefault((java.lang.Object) schema55);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema55.maximum(bigDecimal59);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(annotatedElementList52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.discriminator(discriminator14);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList16 = schema15.getEnum();
        java.lang.Boolean boolean17 = schema15.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(annotatedElementList16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Integer int5 = schema4.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema4.externalDocs(externalDocumentation6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema4.getExternalDocs();
        schema4.setMaxProperties((java.lang.Integer) 100);
        schema4.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(externalDocumentation8);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.writeOnly((java.lang.Boolean) true);
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema31.addProperties("no description", schema41);
        schema4.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema4.example((java.lang.Object) annotatedElementSchema47);
        annotatedElementSchema47.setMaxProperties((java.lang.Integer) 100);
        annotatedElementSchema47.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema47.readOnly((java.lang.Boolean) true);
        java.lang.reflect.AnnotatedElement annotatedElement71 = annotatedElementSchema47.getDefault();
        annotatedElementSchema47.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(annotatedElement71);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.discriminator(discriminator14);
        java.lang.String str16 = schema15.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        annotatedElementSchema8.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str19 = annotatedElementSchema18.getPattern();
        annotatedElementSchema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = annotatedElementSchema18.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        io.swagger.oas.models.media.Schema schema28 = schema17.not(schema27);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = annotatedElementSchema31.getExtensions();
        schema28.setExtensions(strMap39);
        schema7.setExtensions(strMap39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema7.externalDocs(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        java.lang.Object obj5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema3.example(obj5);
        java.lang.Boolean boolean7 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema9 = schema3.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.properties(strMap16);
        java.lang.Object obj18 = annotatedElementSchema10.getExample();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        annotatedElementSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = annotatedElementSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = annotatedElementSchema25.getProperties();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean35 = schema34.getWriteOnly();
        schema34.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema34.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.String str45 = annotatedElementSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        java.lang.String str54 = schema53.getTitle();
        annotatedElementSchema40.setAdditionalProperties(schema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.properties(strMap64);
        io.swagger.oas.models.media.Schema schema67 = schema65.minLength((java.lang.Integer) 10);
        schema67.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator70 = schema67.getDiscriminator();
        schema67.setType("#/components/schemas/");
        java.lang.String str73 = schema67.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema75.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema75.setNullable((java.lang.Boolean) false);
        annotatedElementSchema75.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema75.minItems((java.lang.Integer) 0);
        java.lang.String str88 = schema87.getType();
        io.swagger.oas.models.media.XML xML89 = null;
        schema87.setXml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema67.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema87);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema67.getProperties();
        io.swagger.oas.models.media.Schema schema93 = schema57.properties(strMap92);
        io.swagger.oas.models.media.Schema schema94 = schema34.properties(strMap92);
        schema24.setProperties(strMap92);
        schema3.setProperties(strMap92);
        io.swagger.oas.models.media.Schema schema98 = schema3.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces31, produces32, components33);
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces35, produces36, components37);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional38);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal21 = schema20.getMinimum();
        java.lang.Boolean boolean22 = schema20.getNullable();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.minimum(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = null;
        schema20.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = annotatedElementSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema27.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.$ref("*/*");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.minimum(bigDecimal39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema27.multipleOf(bigDecimal41);
        java.lang.Integer int43 = annotatedElementSchema27.getMinProperties();
        java.lang.Boolean boolean44 = annotatedElementSchema27.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema27.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema20.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 100);
        java.lang.Integer int14 = annotatedElementSchema0.getMinItems();
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.License license17 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional18 = io.swagger.jaxrs2.OperationParser.getLicense(license17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.example((java.lang.Object) licenseOptional18);
        java.lang.String str20 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = annotatedElementSchema14.getExternalDocs();
        annotatedElementSchema14.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        java.lang.Integer int27 = schema25.getMaxItems();
        java.lang.String str28 = schema25.getFormat();
        schema13.setDefault((java.lang.Object) str28);
        io.swagger.oas.models.media.Schema schema31 = schema13.minLength((java.lang.Integer) 100);
        schema31.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str41 = annotatedElementSchema34.getFormat();
        annotatedElementSchema34.setType("no description");
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.exclusiveMinimum((java.lang.Boolean) false);
        schema47.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema47.format("");
        schema31.setExample((java.lang.Object) schema47);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(licenseOptional18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        annotatedElementSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = annotatedElementSchema0.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.format("");
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMultipleOf(bigDecimal12);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema11.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList14);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema29.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = annotatedElementSchema33.getExtensions();
        schema32.setExtensions(strMap39);
        annotatedElementSchema19.setExtensions(strMap39);
        schema18.setExtensions(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        schema18.setDiscriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema46 = schema18.maxLength((java.lang.Integer) 1);
        schema46.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = annotatedElementSchema0.getMinimum();
        annotatedElementSchema0.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.type("");
        java.lang.Integer int47 = annotatedElementSchema0.getMaxItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = annotatedElementSchema0.getExtensions();
        annotatedElementSchema0.setDescription("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        schema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema30 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = annotatedElementSchema31.getProperties();
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema14.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema0.setAdditionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.getNot();
        java.lang.Boolean boolean44 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.externalDocs(externalDocumentation45);
        java.lang.String str47 = annotatedElementSchema0.getTitle();
        java.lang.Boolean boolean48 = annotatedElementSchema0.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.addRequiredItem("");
        annotatedElementSchema0.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList35);
        schema27.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = schema27.get$ref();
        schema27.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema12.not(schema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema12.externalDocs(externalDocumentation43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema12.multipleOf(bigDecimal45);
        schema46.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema9.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema9.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema9.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        annotatedElementSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = annotatedElementSchema27.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        java.lang.String str40 = annotatedElementSchema32.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema32.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not(schema46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        io.swagger.oas.annotations.info.License license52 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional53 = io.swagger.jaxrs2.OperationParser.getLicense(license52);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema49.example((java.lang.Object) licenseOptional53);
        java.lang.String str55 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = annotatedElementSchema49.getExternalDocs();
        annotatedElementSchema49.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema47.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        java.math.BigDecimal bigDecimal62 = null;
        schema61.setMaximum(bigDecimal62);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.maximum(bigDecimal64);
        schema9.setNot(schema65);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema65.minimum(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str70 = annotatedElementSchema69.getPattern();
        annotatedElementSchema69.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean73 = annotatedElementSchema69.getWriteOnly();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema69.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = annotatedElementSchema69.getProperties();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema69.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema78.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema81 = schema65.not(schema78);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(licenseOptional53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        java.lang.Boolean boolean24 = annotatedElementSchema0.getNullable();
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal27 = null;
        annotatedElementSchema0.setMaximum(bigDecimal27);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = annotatedElementSchema33.getMinItems();
        annotatedElementSchema33.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema33.externalDocs(externalDocumentation45);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema33.minimum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema51.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        annotatedElementSchema51.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.Integer int60 = annotatedElementSchema51.getMinItems();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.minimum(bigDecimal61);
        annotatedElementSchema51.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema51.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean67 = annotatedElementSchema51.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema51.getDiscriminator();
        schema48.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Discriminator discriminator70 = annotatedElementSchema51.getDiscriminator();
        annotatedElementSchema51.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema51.minimum(bigDecimal74);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        annotatedElementSchema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.additionalProperties(schema20);
        schema7.setTitle("");
        schema7.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.util.List<java.lang.String> strList20 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.$ref("*/*");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema21.minimum(bigDecimal33);
        java.lang.String str35 = schema34.getTitle();
        io.swagger.oas.models.media.Schema schema37 = schema34.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.not(schema34);
        java.lang.Object obj39 = schema38.getExample();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "Optional.empty");
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        schema25.setProperties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema40.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.properties(strMap50);
        java.lang.String str52 = schema51.getName();
        io.swagger.oas.annotations.info.Info info53 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional54 = io.swagger.jaxrs2.OperationParser.getInfo(info53);
        java.lang.Class<?> wildcardClass55 = infoOptional54.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema56.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema56.setRequired((java.util.List<java.lang.String>) strList62);
        java.lang.Integer int65 = annotatedElementSchema56.getMinItems();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema56.minimum(bigDecimal66);
        annotatedElementSchema56.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass70 = annotatedElementSchema56.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema71.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema78.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass81 = schema78.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray82 = new java.lang.reflect.AnnotatedElement[] { wildcardClass55, wildcardClass70, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList83 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList83, annotatedElementArray82);
        schema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema39.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema25.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema13.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        java.lang.String str89 = schema13.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        schema13.setExternalDocs(externalDocumentation90);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList92 = schema13.getEnum();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(infoOptional54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotatedElementArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(annotatedElementList92);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema36.name("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = schema14.getXml();
        java.lang.Boolean boolean16 = schema14.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean10 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        schema14.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema14.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        schema10.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.xml(xML15);
        java.math.BigDecimal bigDecimal17 = null;
        schema10.setMinimum(bigDecimal17);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.String str17 = annotatedElementSchema15.get$ref();
        io.swagger.oas.models.media.XML xML18 = null;
        annotatedElementSchema15.setXml(xML18);
        io.swagger.oas.models.media.XML xML20 = annotatedElementSchema15.getXml();
        annotatedElementSchema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass30 = schema29.getClass();
        annotatedElementSchema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        schema12.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator41 = annotatedElementSchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.properties(strMap48);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema33.not((io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        java.math.BigDecimal bigDecimal51 = null;
        annotatedElementSchema33.setMinimum(bigDecimal51);
        annotatedElementSchema33.setMaxLength((java.lang.Integer) (-1));
        boolean boolean55 = schema12.equals((java.lang.Object) annotatedElementSchema33);
        java.math.BigDecimal bigDecimal56 = schema12.getMinimum();
        java.util.List<java.lang.String> strList57 = schema12.getRequired();
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(strList57);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema7 = schema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.discriminator(discriminator10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 10);
        java.lang.String str6 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 100);
        java.lang.String str9 = schema8.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.lang.Integer int8 = annotatedElementSchema0.getMaxItems();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList9 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal10);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.discriminator(discriminator21);
        annotatedElementSchema14.setDescription("");
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema14.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(annotatedElementList9);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML12 = null;
        schema11.setXml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        java.lang.Object obj22 = annotatedElementSchema14.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema14.getExtensions();
        boolean boolean24 = schema11.equals((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema11.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.pattern("hi!");
        io.swagger.oas.models.media.Schema schema44 = schema32.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema32.readOnly((java.lang.Boolean) true);
        schema46.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.multipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema22.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema20.addProperties("#/components/schemas/hi!", schema31);
        java.lang.Boolean boolean33 = schema20.getUniqueItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema12.multipleOf(bigDecimal19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        java.lang.Class<?> wildcardClass39 = annotatedElementSchema18.getClass();
        schema17.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int44 = schema43.getMaxLength();
        java.lang.Integer int45 = schema43.getMinItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxItems((java.lang.Integer) 0);
        schema4.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.nullable((java.lang.Boolean) false);
        annotatedElementSchema18.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema4.not((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        schema27.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        io.swagger.oas.annotations.info.Contact contact11 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional12 = io.swagger.jaxrs2.OperationParser.getContact(contact11);
        annotatedElementSchema8.setExample((java.lang.Object) contactOptional12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.String str22 = annotatedElementSchema14.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray34 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema30.required((java.util.List<java.lang.String>) strList35);
        annotatedElementSchema14.setDefault((java.lang.Object) strList35);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema8.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList35);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(contactOptional12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = schema39.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        io.swagger.oas.models.media.Schema schema43 = schema31.additionalProperties(schema42);
        java.lang.Boolean boolean44 = schema43.getExclusiveMaximum();
        schema43.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str47 = schema43.getName();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.maximum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int31 = schema30.getMinItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        annotatedElementSchema19.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.example((java.lang.Object) false);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.XML xML52 = null;
        annotatedElementSchema49.setXml(xML52);
        java.lang.Boolean boolean54 = annotatedElementSchema49.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal57 = null;
        annotatedElementSchema56.setMultipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema56.nullable((java.lang.Boolean) false);
        annotatedElementSchema56.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema49.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema56);
        boolean boolean64 = schema45.equals((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.media.XML xML65 = null;
        schema45.setXml(xML65);
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema45.discriminator(discriminator67);
        io.swagger.oas.models.media.Schema schema70 = schema45.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str71 = schema45.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator72 = schema45.getDiscriminator();
        java.lang.String str73 = schema45.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str43 = annotatedElementSchema42.getPattern();
        annotatedElementSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean46 = annotatedElementSchema42.getWriteOnly();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema42.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema42.not((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        annotatedElementSchema49.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema49.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser60 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema56.addExtension("no description", (java.lang.Object) operationParser60);
        annotatedElementSchema56.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema56.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean66 = annotatedElementSchema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema56.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema49.example((java.lang.Object) schema68);
        io.swagger.oas.annotations.Parameter[] parameterArray70 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional72 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray70, components71);
        io.swagger.oas.models.Components components73 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional74 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray70, components73);
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional76 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray70, components75);
        io.swagger.oas.models.media.Schema schema77 = schema69.example((java.lang.Object) parameterListOptional76);
        io.swagger.oas.models.media.Schema schema79 = schema77.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean80 = annotatedElementSchema27.equals((java.lang.Object) schema77);
        annotatedElementSchema27.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + true + "'", boolean66, true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(parameterArray70);
        org.junit.Assert.assertNotNull(parameterListOptional72);
        org.junit.Assert.assertNotNull(parameterListOptional74);
        org.junit.Assert.assertNotNull(parameterListOptional76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema7.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.description("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.xml(xML46);
        java.lang.String str48 = schema47.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.properties(strMap55);
        schema56.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema56.addProperties("hi!", schema60);
        java.lang.String[] strArray68 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional69 = io.swagger.jaxrs2.OperationParser.getTags(strArray68);
        io.swagger.oas.models.media.Schema schema70 = schema56.example((java.lang.Object) strArray68);
        schema70.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema73.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        annotatedElementSchema73.setRequired((java.util.List<java.lang.String>) strList79);
        java.lang.Integer int82 = annotatedElementSchema73.getMinItems();
        annotatedElementSchema73.setType("hi!");
        java.util.List<java.lang.String> strList85 = annotatedElementSchema73.getRequired();
        io.swagger.oas.models.media.Schema schema86 = schema70.required(strList85);
        boolean boolean87 = schema47.equals((java.lang.Object) schema86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema14.properties(strMap88);
        java.math.BigDecimal bigDecimal90 = schema14.getMinimum();
        java.lang.Boolean boolean91 = schema14.getExclusiveMinimum();
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(tagSetOptional69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(bigDecimal90);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        annotatedElementSchema21.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        annotatedElementSchema21.setDiscriminator(discriminator29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.multipleOf(bigDecimal31);
        schema32.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.String str43 = annotatedElementSchema35.getDescription();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema35.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator54 = annotatedElementSchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema35.not((io.swagger.oas.models.media.Schema) annotatedElementSchema46);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        annotatedElementSchema56.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema56.minProperties((java.lang.Integer) 10);
        java.lang.String str64 = annotatedElementSchema56.getName();
        annotatedElementSchema35.setDefault((java.lang.Object) annotatedElementSchema56);
        io.swagger.oas.models.media.Schema schema66 = null;
        annotatedElementSchema35.setNot(schema66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema35.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema35.getRequired();
        schema32.setRequired(strList70);
        schema32.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean74 = schema32.getExclusiveMinimum();
        java.util.List<java.lang.String> strList75 = schema32.getRequired();
        schema20.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema78 = schema20.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema78.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema78.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.License license24 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional25 = io.swagger.jaxrs2.OperationParser.getLicense(license24);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema21.example((java.lang.Object) licenseOptional25);
        java.lang.String str27 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = annotatedElementSchema21.getExternalDocs();
        annotatedElementSchema21.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.deprecated((java.lang.Boolean) false);
        java.lang.String str33 = annotatedElementSchema21.toString();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema8.example((java.lang.Object) str33);
        java.math.BigDecimal bigDecimal35 = schema34.getMultipleOf();
        schema34.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema17.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML22 = schema21.getXml();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(xML22);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.addProperties("default", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema17.setNullable((java.lang.Boolean) false);
        annotatedElementSchema17.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema36.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema17.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema51 = schema14.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema53 = schema51.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema54.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList59 = annotatedElementSchema54.getEnum();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema54.description("hi!");
        java.lang.Object obj62 = schema61.getExample();
        io.swagger.oas.models.media.Schema schema64 = schema61.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema61.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema51.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser72 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema68.addExtension("no description", (java.lang.Object) operationParser72);
        annotatedElementSchema68.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) true);
        schema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema68);
        schema51.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(annotatedElementList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = schema8.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        schema6.setMinProperties((java.lang.Integer) 1);
        java.lang.Integer int9 = schema6.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.minProperties((java.lang.Integer) 10);
        java.lang.String str13 = annotatedElementSchema5.getName();
        annotatedElementSchema5.setMinItems((java.lang.Integer) 0);
        schema2.setExample((java.lang.Object) annotatedElementSchema5);
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.$ref("*/*");
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.minimum(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = schema2.not(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.minItems((java.lang.Integer) 0);
        schema34.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.maximum(bigDecimal14);
        schema7.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        schema7.setMaximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.minProperties((java.lang.Integer) 10);
        java.lang.String str32 = annotatedElementSchema24.getName();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.uniqueItems((java.lang.Boolean) true);
        annotatedElementSchema15.setExample((java.lang.Object) true);
        annotatedElementSchema15.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces5, produces6, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxItems((java.lang.Integer) 1);
        schema12.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setUniqueItems((java.lang.Boolean) false);
        schema11.setMaxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean16 = schema11.getReadOnly();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML14 = null;
        schema11.setXml(xML14);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMaxItems();
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML36 = null;
        annotatedElementSchema21.setXml(xML36);
        annotatedElementSchema21.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.externalDocs(externalDocumentation40);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = annotatedElementSchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean40 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.uniqueItems((java.lang.Boolean) false);
        schema16.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema44.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 100);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.minProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema20.getProperties();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minimum(bigDecimal8);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        java.lang.Integer int17 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        annotatedElementSchema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.nullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema42 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.minProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.getTitle();
        annotatedElementSchema0.setAdditionalProperties(schema13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema16.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.xml(xML27);
        java.lang.Boolean boolean29 = schema28.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        schema28.setDiscriminator(discriminator30);
        java.math.BigDecimal bigDecimal32 = schema28.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema33.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema33.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.minimum(bigDecimal42);
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.xml(xML44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean47 = annotatedElementSchema46.getReadOnly();
        java.lang.Boolean boolean48 = annotatedElementSchema46.getNullable();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList51);
        schema43.setRequired((java.util.List<java.lang.String>) strList51);
        java.lang.String str55 = schema43.get$ref();
        schema43.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema58 = schema28.not(schema43);
        java.math.BigDecimal bigDecimal59 = null;
        schema28.setMaximum(bigDecimal59);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema28.xml(xML61);
        schema28.setMaxItems((java.lang.Integer) (-1));
        java.lang.String str65 = schema28.getType();
        io.swagger.oas.models.media.Schema schema66 = schema13.example((java.lang.Object) schema28);
        io.swagger.oas.models.media.XML xML67 = null;
        schema13.setXml(xML67);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray34 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema30.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema12.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.example((java.lang.Object) strList35);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str42 = schema41.getPattern();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = schema41.getExternalDocs();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(externalDocumentation43);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema0.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        schema21.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        schema20.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.addProperties("hi!", schema24);
        java.lang.String[] strArray32 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        io.swagger.oas.models.media.Schema schema34 = schema20.example((java.lang.Object) strArray32);
        schema34.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema34.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema34.deprecated((java.lang.Boolean) true);
        schema34.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema45 = schema7.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema24.getPattern();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        java.lang.String str22 = schema21.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean41 = schema38.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema43 = schema38.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) false);
        schema21.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema21.getReadOnly();
        java.math.BigDecimal bigDecimal25 = null;
        schema21.setMaximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema21.minimum(bigDecimal27);
        java.lang.Boolean boolean29 = schema28.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        schema16.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMinimum(bigDecimal46);
        schema45.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.properties(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema19.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList25);
        java.lang.Integer int28 = annotatedElementSchema19.getMinItems();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.minimum(bigDecimal29);
        annotatedElementSchema19.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.addRequiredItem("#/components/schemas/");
        java.lang.String str35 = annotatedElementSchema19.getType();
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema19.setMaximum(bigDecimal36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.properties(strMap55);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        java.math.BigDecimal bigDecimal58 = null;
        annotatedElementSchema40.setMinimum(bigDecimal58);
        annotatedElementSchema40.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema62 = schema39.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        io.swagger.oas.models.media.Schema schema64 = schema62.exclusiveMinimum((java.lang.Boolean) true);
        schema18.setAdditionalProperties(schema64);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        schema7.setFormat("*/*");
        schema7.setMinProperties((java.lang.Integer) 1);
        schema7.setMinItems((java.lang.Integer) (-1));
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.lang.String str10 = schema4.getName();
        io.swagger.oas.models.media.Schema schema12 = schema4.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        schema4.setProperties(strMap13);
        java.lang.Integer int15 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema4.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema30.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema34.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema34.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.Integer int43 = annotatedElementSchema34.getMinItems();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.minimum(bigDecimal44);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList46 = schema45.getEnum();
        io.swagger.oas.models.media.Schema schema48 = schema45.maxLength((java.lang.Integer) (-1));
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema52.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema52.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema52.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info63 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional64 = io.swagger.jaxrs2.OperationParser.getInfo(info63);
        java.lang.Class<?> wildcardClass65 = infoOptional64.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray66 = new java.lang.reflect.AnnotatedElement[] { wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList67 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList67, annotatedElementArray66);
        schema62.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        schema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        schema19.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList67);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(annotatedElementList46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(infoOptional64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(annotatedElementArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema16.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema13.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMultipleOf(bigDecimal22);
        java.lang.String[] strArray25 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray25);
        schema21.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional26);
        java.math.BigDecimal bigDecimal28 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema30.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        java.math.BigDecimal bigDecimal37 = annotatedElementSchema30.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.$ref("*/*");
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema38.format("default");
        java.lang.Boolean boolean52 = schema51.getNullable();
        java.lang.Boolean boolean53 = schema51.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser58 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema54.addExtension("no description", (java.lang.Object) operationParser58);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        annotatedElementSchema60.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema54.required((java.util.List<java.lang.String>) strList66);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.maximum(bigDecimal70);
        java.util.List<java.lang.String> strList72 = schema71.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema51.required(strList72);
        annotatedElementSchema30.setRequired(strList72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema0.required(strList72);
        io.swagger.oas.models.media.Schema schema77 = schema75.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str78 = schema75.getType();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional26);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema22);
        java.lang.Boolean boolean36 = annotatedElementSchema22.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal44 = schema43.getMultipleOf();
        io.swagger.oas.models.media.Schema schema46 = schema43.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema43.xml(xML47);
        annotatedElementSchema22.setNot(schema43);
        java.lang.String str50 = schema43.getTitle();
        java.lang.Boolean boolean51 = schema43.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.lang.String str25 = schema9.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema9.getDiscriminator();
        java.lang.Boolean boolean27 = schema9.getDeprecated();
        io.swagger.oas.models.media.Schema schema29 = schema9.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.lang.String str13 = schema12.getType();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.Contact contact21 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional22 = io.swagger.jaxrs2.OperationParser.getContact(contact21);
        annotatedElementSchema18.setExample((java.lang.Object) contactOptional22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema25.getProperties();
        schema25.setDescription("");
        schema25.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        schema38.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema38.addProperties("hi!", schema42);
        java.lang.String[] strArray50 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional51 = io.swagger.jaxrs2.OperationParser.getTags(strArray50);
        io.swagger.oas.models.media.Schema schema52 = schema38.example((java.lang.Object) strArray50);
        schema52.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema52.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema58 = schema52.deprecated((java.lang.Boolean) true);
        schema52.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema schema62 = schema12.not(schema25);
        schema25.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(tagSetOptional51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        schema17.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator20 = schema17.getDiscriminator();
        java.math.BigDecimal bigDecimal21 = null;
        schema17.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = schema17.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = annotatedElementSchema28.getExtensions();
        schema27.setExtensions(strMap34);
        schema17.setExtensions(strMap34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema17);
        java.lang.Boolean boolean38 = schema17.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = schema17.getProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = annotatedElementSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser28 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema24.addExtension("no description", (java.lang.Object) operationParser28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList36);
        java.lang.Class<?> wildcardClass41 = strList36.getClass();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minLength((java.lang.Integer) 10);
        java.lang.String str20 = schema19.getFormat();
        io.swagger.oas.models.media.Schema schema21 = schema19.getAdditionalProperties();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.minimum(bigDecimal22);
        schema7.setAdditionalProperties(schema19);
        java.math.BigDecimal bigDecimal25 = null;
        schema19.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema28.setExternalDocs(externalDocumentation29);
        schema28.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        java.lang.Object obj33 = null;
        boolean boolean34 = annotatedElementSchema21.equals(obj33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = annotatedElementSchema21.getProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = annotatedElementSchema21.getProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema schema15 = schema12.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        java.lang.Integer int9 = schema7.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        java.lang.String str12 = schema7.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema7.setDiscriminator(discriminator13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema7.getExternalDocs();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.annotations.Parameter[] parameterArray20 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components23);
        java.lang.Class<?> wildcardClass25 = parameterListOptional24.getClass();
        schema16.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass25);
        io.swagger.oas.models.media.Schema schema28 = schema16.pattern("no description");
        schema16.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(parameterArray20);
        org.junit.Assert.assertNotNull(parameterListOptional22);
        org.junit.Assert.assertNotNull(parameterListOptional24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        schema12.setType("");
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMultipleOf(bigDecimal15);
        java.lang.String str17 = schema12.getType();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        java.lang.String str12 = schema4.getFormat();
        io.swagger.oas.models.media.Schema schema14 = schema4.maxLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema4.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "*/*" + "'", str12, "*/*");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass5 = schema4.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        annotatedElementSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = annotatedElementSchema12.getType();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        schema31.setProperties(strMap36);
        schema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema31.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = schema41.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        java.math.BigDecimal bigDecimal47 = null;
        schema43.setMaximum(bigDecimal47);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = annotatedElementSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.multipleOf(bigDecimal12);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str16 = annotatedElementSchema0.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = annotatedElementSchema0.getProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getExclusiveMaximum();
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema10.getType();
        java.lang.String str19 = schema10.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.XML xML8 = null;
        annotatedElementSchema0.setXml(xML8);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = annotatedElementSchema0.getMaxProperties();
        java.lang.Integer int14 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema16.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.discriminator(discriminator34);
        io.swagger.oas.models.media.Schema schema37 = schema35.format("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        schema39.setExternalDocs(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        java.lang.Integer int17 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        annotatedElementSchema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.nullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.properties(strMap47);
        java.lang.Object obj49 = annotatedElementSchema41.getExample();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.format("#/components/schemas/");
        java.lang.Class<?> wildcardClass52 = annotatedElementSchema41.getClass();
        schema39.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass52);
        java.lang.Integer int54 = schema39.getMinItems();
        schema39.set$ref("no description");
        java.lang.Boolean boolean57 = schema39.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema39.externalDocs(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) false);
        schema21.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema21.getReadOnly();
        java.math.BigDecimal bigDecimal25 = null;
        schema21.setMaximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema21.minimum(bigDecimal27);
        java.lang.Boolean boolean29 = schema28.getUniqueItems();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + true + "'", boolean29, true);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.String str22 = annotatedElementSchema14.getDescription();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator33 = annotatedElementSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.minProperties((java.lang.Integer) 10);
        java.lang.String str43 = annotatedElementSchema35.getName();
        annotatedElementSchema14.setDefault((java.lang.Object) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema schema45 = null;
        annotatedElementSchema14.setNot(schema45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema14.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList49 = annotatedElementSchema14.getRequired();
        schema11.setRequired(strList49);
        schema11.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean53 = schema11.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema55 = schema11.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal56 = null;
        schema11.setMultipleOf(bigDecimal56);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = schema33.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        schema33.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = schema33.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMinimum(bigDecimal39);
        schema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str43 = schema38.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = schema15.getMinimum();
        java.lang.Boolean boolean17 = schema15.getDeprecated();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        schema17.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema21 = schema17.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema23.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = annotatedElementSchema27.getMinItems();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.minimum(bigDecimal37);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList39 = schema38.getEnum();
        io.swagger.oas.models.media.Schema schema41 = schema38.maxLength((java.lang.Integer) (-1));
        schema23.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema44 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        io.swagger.oas.annotations.info.Contact contact51 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional52 = io.swagger.jaxrs2.OperationParser.getContact(contact51);
        annotatedElementSchema48.setExample((java.lang.Object) contactOptional52);
        annotatedElementSchema48.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema48.type("");
        schema57.setMaxItems((java.lang.Integer) 100);
        schema57.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema57.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str65 = annotatedElementSchema64.getPattern();
        annotatedElementSchema64.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = annotatedElementSchema64.getWriteOnly();
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema64.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str72 = annotatedElementSchema71.getPattern();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema64.not((io.swagger.oas.models.media.Schema) annotatedElementSchema71);
        annotatedElementSchema71.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema71.setFormat("hi!");
        java.lang.Integer int78 = annotatedElementSchema71.getMaxProperties();
        java.math.BigDecimal bigDecimal79 = null;
        annotatedElementSchema71.setMultipleOf(bigDecimal79);
        schema63.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema71);
        io.swagger.oas.models.media.Schema schema82 = schema47.example((java.lang.Object) annotatedElementSchema71);
        java.lang.String str83 = schema82.getDescription();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(annotatedElementList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(contactOptional52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        schema7.setFormat("*/*");
        schema7.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.minimum(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema7.addProperties("", schema49);
        io.swagger.oas.models.media.Schema schema52 = schema50.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList15 = schema14.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.externalDocs(externalDocumentation16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(annotatedElementList15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema43.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema43.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.minimum(bigDecimal52);
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.xml(xML54);
        java.lang.Object obj56 = schema53.getExample();
        java.math.BigDecimal bigDecimal57 = schema53.getMinimum();
        java.math.BigDecimal bigDecimal58 = null;
        schema53.setMultipleOf(bigDecimal58);
        java.lang.Integer int60 = schema53.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int67 = annotatedElementSchema62.getMinProperties();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        io.swagger.oas.annotations.info.Contact contact73 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional74 = io.swagger.jaxrs2.OperationParser.getContact(contact73);
        annotatedElementSchema70.setExample((java.lang.Object) contactOptional74);
        annotatedElementSchema70.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema70.nullable((java.lang.Boolean) false);
        schema69.setDefault((java.lang.Object) annotatedElementSchema70);
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema70.discriminator(discriminator81);
        io.swagger.oas.models.media.Schema schema83 = schema53.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema82);
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema82.discriminator(discriminator84);
        java.math.BigDecimal bigDecimal86 = schema85.getMultipleOf();
        schema85.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema0.additionalProperties(schema85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema85.getProperties();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(contactOptional74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(bigDecimal86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML16 = schema13.getXml();
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema13.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNull(schema19);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        schema13.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema7.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        java.lang.String str35 = annotatedElementSchema27.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.properties(strMap36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList40 = schema39.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema41.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema41.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema39.example((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema48 = schema26.not(schema39);
        schema39.setMaxProperties((java.lang.Integer) (-1));
        schema39.setMaxProperties((java.lang.Integer) (-1));
        schema39.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema7.setDefault((java.lang.Object) schema39);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(annotatedElementList40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.String str19 = annotatedElementSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema22.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.$ref("*/*");
        schema33.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str36 = schema33.getType();
        io.swagger.oas.models.media.Schema schema38 = schema33.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema39.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.Boolean boolean51 = annotatedElementSchema49.getNullable();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.String str57 = annotatedElementSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema49.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema60.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema49.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        annotatedElementSchema70.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema70.minProperties((java.lang.Integer) 10);
        java.lang.String str78 = annotatedElementSchema70.getName();
        annotatedElementSchema49.setDefault((java.lang.Object) annotatedElementSchema70);
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema70.xml(xML80);
        annotatedElementSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema70);
        schema38.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        java.lang.String str88 = schema87.getDescription();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema15.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema7.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema7.nullable((java.lang.Boolean) false);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        java.lang.Integer int15 = annotatedElementSchema7.getMaxItems();
        java.lang.String str16 = annotatedElementSchema7.getFormat();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean39 = annotatedElementSchema38.getReadOnly();
        java.lang.Boolean boolean40 = annotatedElementSchema38.getNullable();
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        annotatedElementSchema38.setRequired((java.util.List<java.lang.String>) strList43);
        java.lang.String str46 = annotatedElementSchema38.getDescription();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema38.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator57 = annotatedElementSchema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema38.not((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema49.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema49.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema65.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema72.setPattern("");
        annotatedElementSchema72.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema72.properties(strMap78);
        io.swagger.oas.models.media.Schema schema81 = schema79.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema65.not(schema79);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema79.getExtensions();
        schema64.setExtensions(strMap83);
        annotatedElementSchema22.setExtensions(strMap83);
        java.lang.Boolean boolean86 = annotatedElementSchema22.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(boolean86);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.util.List<java.lang.String> strList37 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMinProperties();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.uniqueItems((java.lang.Boolean) false);
        schema48.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema48.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean53 = schema48.getWriteOnly();
        schema40.setAdditionalProperties(schema48);
        java.lang.Object obj55 = schema48.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        io.swagger.oas.annotations.info.Contact contact27 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional28 = io.swagger.jaxrs2.OperationParser.getContact(contact27);
        annotatedElementSchema24.setExample((java.lang.Object) contactOptional28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        java.lang.String str32 = annotatedElementSchema24.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema24.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = schema36.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator38 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = schema36.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema0.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema42 = schema40.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal43 = schema42.getMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(contactOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElementList37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.String str17 = annotatedElementSchema15.get$ref();
        io.swagger.oas.models.media.XML xML18 = null;
        annotatedElementSchema15.setXml(xML18);
        io.swagger.oas.models.media.XML xML20 = annotatedElementSchema15.getXml();
        annotatedElementSchema15.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass30 = schema29.getClass();
        annotatedElementSchema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        schema12.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator41 = annotatedElementSchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.properties(strMap48);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema33.not((io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        java.math.BigDecimal bigDecimal51 = null;
        annotatedElementSchema33.setMinimum(bigDecimal51);
        annotatedElementSchema33.setMaxLength((java.lang.Integer) (-1));
        boolean boolean55 = schema12.equals((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema33.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema4.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema4.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema4.name("");
        schema3.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema4);
        io.swagger.oas.models.media.Schema schema17 = schema3.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema26.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        java.lang.Boolean boolean30 = schema28.getDeprecated();
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema3.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        io.swagger.oas.models.media.Schema schema35 = schema3.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        java.math.BigDecimal bigDecimal12 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema6.multipleOf(bigDecimal15);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        schema49.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.not(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = schema27.getMaxProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int18 = annotatedElementSchema15.getMaxItems();
        java.lang.Integer int19 = annotatedElementSchema15.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema11.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema33.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = annotatedElementSchema37.getExtensions();
        schema36.setExtensions(strMap43);
        annotatedElementSchema23.setExtensions(strMap43);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema23.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setExample((java.lang.Object) annotatedElementSchema23);
        java.lang.String str51 = schema22.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        schema22.setExternalDocs(externalDocumentation52);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        schema10.setDefault((java.lang.Object) schema16);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema10.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = annotatedElementSchema23.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        annotatedElementSchema23.setProperties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        java.lang.String str40 = annotatedElementSchema32.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema32.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema32.minimum(bigDecimal47);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        schema48.setDiscriminator(discriminator49);
        java.lang.Boolean boolean51 = schema48.getExclusiveMaximum();
        annotatedElementSchema23.setNot(schema48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = annotatedElementSchema23.getProperties();
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema23.xml(xML54);
        io.swagger.oas.models.media.Schema schema56 = schema10.not(schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.$ref("default");
        java.lang.String str59 = schema55.get$ref();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#/components/schemas/default" + "'", str59, "#/components/schemas/default");
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema10.format("#/components/schemas/");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema10.xml(xML22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList29 = annotatedElementSchema24.getEnum();
        annotatedElementSchema24.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.Integer int41 = annotatedElementSchema32.getMinItems();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema24.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        annotatedElementSchema24.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema24.properties(strMap47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema48.getExternalDocs();
        io.swagger.oas.models.media.Schema schema51 = schema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema23.example((java.lang.Object) true);
        schema54.setMaxLength((java.lang.Integer) 100);
        schema54.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElementList29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str29 = schema24.getType();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.format("");
        java.lang.Boolean boolean9 = schema8.getExclusiveMinimum();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = schema8.getEnum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(annotatedElementList10);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.minimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.deprecated((java.lang.Boolean) true);
        schema41.setAdditionalProperties(schema53);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema53.multipleOf(bigDecimal59);
        schema60.setDescription("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML63 = schema60.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML63);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        schema10.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int15 = schema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema10.getProperties();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.xml(xML17);
        schema18.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema4.properties(strMap10);
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info25 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional26 = io.swagger.jaxrs2.OperationParser.getInfo(info25);
        java.lang.Class<?> wildcardClass27 = infoOptional26.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray28 = new java.lang.reflect.AnnotatedElement[] { wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList29 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList29, annotatedElementArray28);
        schema24.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList29);
        schema11.addExtension("no description", (java.lang.Object) schema24);
        java.lang.String str33 = schema24.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        io.swagger.oas.annotations.info.Contact contact38 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional39 = io.swagger.jaxrs2.OperationParser.getContact(contact38);
        annotatedElementSchema35.setExample((java.lang.Object) contactOptional39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.pattern("#/components/schemas/");
        schema24.addExtension("no description", (java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.additionalProperties(schema24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int52 = annotatedElementSchema47.getMinProperties();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema47.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema47.$ref("*/*");
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema47.format("default");
        java.lang.Boolean boolean61 = schema60.getNullable();
        java.lang.Boolean boolean62 = schema60.getUniqueItems();
        schema60.setFormat("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        io.swagger.oas.annotations.info.Contact contact69 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional70 = io.swagger.jaxrs2.OperationParser.getContact(contact69);
        annotatedElementSchema66.setExample((java.lang.Object) contactOptional70);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.readOnly((java.lang.Boolean) false);
        java.lang.String str74 = annotatedElementSchema66.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema66.properties(strMap75);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema66.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema66.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema66.minimum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema66.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema85 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema85.setPattern("");
        annotatedElementSchema85.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int90 = annotatedElementSchema85.getMinProperties();
        annotatedElementSchema85.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema66.example((java.lang.Object) false);
        schema60.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema96 = schema60.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema96.discriminator(discriminator97);
        schema24.setExample((java.lang.Object) discriminator97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(infoOptional26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotatedElementArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(contactOptional70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str24 = schema20.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema20.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal27 = null;
        annotatedElementSchema26.setMultipleOf(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema26.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList31 = annotatedElementSchema26.getEnum();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.description("hi!");
        java.lang.Object obj34 = schema33.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        io.swagger.oas.annotations.info.License license38 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional39 = io.swagger.jaxrs2.OperationParser.getLicense(license38);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema35.example((java.lang.Object) licenseOptional39);
        java.lang.String str41 = annotatedElementSchema35.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = annotatedElementSchema35.getExternalDocs();
        annotatedElementSchema35.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema35.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema33.additionalProperties(schema46);
        java.lang.String[] strArray60 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        io.swagger.oas.models.media.Schema schema63 = schema33.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema33.discriminator(discriminator64);
        io.swagger.oas.models.media.Schema schema67 = schema65.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema68.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema68.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema68.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema79 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema79.setPattern("");
        annotatedElementSchema79.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int84 = annotatedElementSchema79.getMinProperties();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema79.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray90 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        io.swagger.oas.models.media.Schema schema93 = schema86.required((java.util.List<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema94 = annotatedElementSchema68.required((java.util.List<java.lang.String>) strList91);
        schema65.setRequired((java.util.List<java.lang.String>) strList91);
        schema20.setRequired((java.util.List<java.lang.String>) strList91);
        schema12.setRequired((java.util.List<java.lang.String>) strList91);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(annotatedElementList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(licenseOptional39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML4 = null;
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.xml(xML4);
        schema5.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        java.lang.String str37 = schema34.toString();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList38 = null;
        schema34.setEnum(annotatedElementList38);
        schema34.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        io.swagger.oas.models.media.Schema schema30 = null;
        annotatedElementSchema0.setNot(schema30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        schema33.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str21 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema23 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        java.lang.String str11 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        java.math.BigDecimal bigDecimal17 = annotatedElementSchema0.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(externalDocumentation18);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinItems();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema22.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema22.setExternalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema22.getDeprecated();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        schema12.setType("");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = annotatedElementSchema29.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        boolean boolean42 = annotatedElementSchema29.equals((java.lang.Object) annotatedElementSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        annotatedElementSchema29.setExternalDocs(externalDocumentation43);
        java.lang.String[] strArray46 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema28.required((java.util.List<java.lang.String>) strList47);
        schema16.setRequired((java.util.List<java.lang.String>) strList47);
        schema16.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        annotatedElementSchema49.setProperties(strMap61);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap61);
        io.swagger.oas.models.media.Schema schema65 = schema38.deprecated((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass66 = schema65.getClass();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema54.pattern("default");
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        schema67.setDiscriminator(discriminator68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        schema67.setProperties(strMap70);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        java.lang.String str13 = schema7.toString();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema16 = schema7.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str13, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema13 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        java.lang.Boolean boolean5 = annotatedElementSchema0.getExclusiveMinimum();
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.discriminator(discriminator8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = annotatedElementSchema0.getExtensions();
        java.lang.String str11 = annotatedElementSchema0.get$ref();
        java.lang.reflect.AnnotatedElement annotatedElement12 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema13.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = annotatedElementSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator47 = annotatedElementSchema39.getDiscriminator();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        java.lang.String str57 = annotatedElementSchema49.getName();
        annotatedElementSchema28.setDefault((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema schema59 = null;
        annotatedElementSchema28.setNot(schema59);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema28.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList63 = annotatedElementSchema28.getRequired();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String str66 = annotatedElementSchema28.getType();
        java.lang.String[] strArray72 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema28.required((java.util.List<java.lang.String>) strList73);
        schema25.setDefault((java.lang.Object) strList73);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList73);
        java.math.BigDecimal bigDecimal78 = annotatedElementSchema0.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(annotatedElement12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(bigDecimal78);
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.Integer int46 = schema45.getMaxProperties();
        java.lang.Boolean boolean47 = schema45.getDeprecated();
        schema45.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList29 = schema11.getEnum();
        schema11.setPattern("");
        schema11.setFormat("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = schema11.getProperties();
        io.swagger.oas.models.media.Schema schema36 = schema11.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElementList29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        schema64.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean67 = schema64.getDeprecated();
        schema64.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.discriminator(discriminator24);
        java.lang.Boolean boolean26 = annotatedElementSchema11.getReadOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = schema14.getMultipleOf();
        java.lang.String str20 = schema14.get$ref();
        schema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema14.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema10.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema10.setNullable((java.lang.Boolean) false);
        annotatedElementSchema10.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema10.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema10.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema29.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema29.required((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema10.required((java.util.List<java.lang.String>) strList40);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList44 = annotatedElementSchema10.getEnum();
        io.swagger.oas.models.media.XML xML45 = annotatedElementSchema10.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema46.pattern("hi!");
        schema55.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema55.getAdditionalProperties();
        boolean boolean59 = annotatedElementSchema10.equals((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal61 = null;
        annotatedElementSchema60.setMultipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema66 = schema64.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean67 = schema66.getExclusiveMinimum();
        schema66.set$ref("*/*");
        io.swagger.oas.models.media.Schema schema71 = schema66.format("no description");
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema10.not(schema66);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = annotatedElementSchema10.getProperties();
        boolean boolean74 = schema9.equals((java.lang.Object) strMap73);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(annotatedElementList44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.util.List<java.lang.String> strList37 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMaximum(bigDecimal40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.multipleOf(bigDecimal42);
        java.math.BigDecimal bigDecimal44 = null;
        schema39.setMaximum(bigDecimal44);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema11.getFormat();
        java.lang.String str15 = schema11.get$ref();
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMultipleOf(bigDecimal16);
        java.lang.String str18 = schema11.getFormat();
        java.lang.String str19 = schema11.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        java.lang.Boolean boolean22 = annotatedElementSchema20.getNullable();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        io.swagger.oas.annotations.info.Contact contact28 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional29 = io.swagger.jaxrs2.OperationParser.getContact(contact28);
        annotatedElementSchema25.setExample((java.lang.Object) contactOptional29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.Boolean boolean33 = annotatedElementSchema31.getNullable();
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.String str39 = annotatedElementSchema31.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = annotatedElementSchema40.getMinProperties();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray51 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = schema47.required((java.util.List<java.lang.String>) strList52);
        annotatedElementSchema31.setDefault((java.lang.Object) strList52);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema25.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema25.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema59.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema59.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema59.name("");
        io.swagger.oas.models.media.Discriminator discriminator70 = schema69.getDiscriminator();
        io.swagger.oas.models.media.XML xML71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema69.xml(xML71);
        java.lang.Class<?> wildcardClass73 = schema69.getClass();
        schema58.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass73);
        annotatedElementSchema20.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass73);
        schema11.setExample((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal78 = null;
        annotatedElementSchema77.setMultipleOf(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema77.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean82 = schema81.getReadOnly();
        java.math.BigDecimal bigDecimal83 = null;
        schema81.setMaximum(bigDecimal83);
        io.swagger.oas.models.media.XML xML85 = schema81.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema81.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = schema81.getExternalDocs();
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema20.example((java.lang.Object) schema81);
        java.lang.reflect.AnnotatedElement annotatedElement89 = annotatedElementSchema20.getDefault();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(contactOptional29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(xML85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(externalDocumentation87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(annotatedElement89);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.XML xML62 = null;
        annotatedElementSchema17.setXml(xML62);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema17.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList66 = annotatedElementSchema17.getEnum();
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema17.minimum(bigDecimal67);
        java.lang.Boolean boolean69 = annotatedElementSchema17.getWriteOnly();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(annotatedElementList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str28 = annotatedElementSchema27.getPattern();
        annotatedElementSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str39 = annotatedElementSchema38.getPattern();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        schema40.setTitle("#/components/schemas/");
        java.lang.Integer int43 = schema40.getMinLength();
        java.lang.Integer int44 = schema40.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        io.swagger.oas.annotations.info.Contact contact48 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional49 = io.swagger.jaxrs2.OperationParser.getContact(contact48);
        annotatedElementSchema45.setExample((java.lang.Object) contactOptional49);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema45.setMinProperties((java.lang.Integer) 100);
        schema40.setExample((java.lang.Object) annotatedElementSchema45);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema45.deprecated((java.lang.Boolean) false);
        schema59.setDescription("");
        java.lang.Boolean boolean62 = schema59.getDeprecated();
        annotatedElementSchema27.setDefault((java.lang.Object) boolean62);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema66.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = schema68.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(contactOptional49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        schema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema30 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = annotatedElementSchema31.getProperties();
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema14.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema0.setAdditionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema0.minLength((java.lang.Integer) 10);
        java.lang.Integer int45 = annotatedElementSchema0.getMaxLength();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser19 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema15.addExtension("no description", (java.lang.Object) operationParser19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = null;
        schema22.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema29 = schema14.additionalProperties(schema22);
        java.math.BigDecimal bigDecimal30 = null;
        schema22.setMultipleOf(bigDecimal30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema15.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema24.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.String str43 = annotatedElementSchema35.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int49 = annotatedElementSchema44.getMinProperties();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray55 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema51.required((java.util.List<java.lang.String>) strList56);
        annotatedElementSchema35.setDefault((java.lang.Object) strList56);
        io.swagger.oas.models.media.Schema schema60 = schema32.required((java.util.List<java.lang.String>) strList56);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema62 = schema13.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema64 = schema13.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.discriminator(discriminator65);
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("");
        io.swagger.oas.models.media.Schema schema70 = schema66.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        schema10.setDefault((java.lang.Object) schema16);
        io.swagger.oas.models.media.Schema schema20 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema57 = schema55.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = schema55.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal60 = schema55.getMaximum();
        schema10.setNot(schema55);
        io.swagger.oas.models.media.Schema schema62 = schema55.getNot();
        java.lang.Boolean boolean63 = schema55.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema55.minimum(bigDecimal64);
        java.math.BigDecimal bigDecimal66 = null;
        schema65.setMaximum(bigDecimal66);
        schema65.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int70 = schema65.getMinProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + true + "'", boolean63, true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = annotatedElementSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser28 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema24.addExtension("no description", (java.lang.Object) operationParser28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean42 = annotatedElementSchema41.getReadOnly();
        java.lang.Boolean boolean43 = annotatedElementSchema41.getNullable();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.String str49 = annotatedElementSchema41.getDescription();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema52.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator60 = annotatedElementSchema52.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema41.not((io.swagger.oas.models.media.Schema) annotatedElementSchema52);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.minProperties((java.lang.Integer) 10);
        java.lang.String str70 = annotatedElementSchema62.getName();
        annotatedElementSchema41.setDefault((java.lang.Object) annotatedElementSchema62);
        java.lang.Integer int72 = annotatedElementSchema62.getMinItems();
        java.lang.Boolean boolean73 = annotatedElementSchema62.getDeprecated();
        annotatedElementSchema62.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str77 = annotatedElementSchema76.getPattern();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema76.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema80.setPattern("");
        annotatedElementSchema80.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = annotatedElementSchema80.getExtensions();
        schema79.setExtensions(strMap86);
        boolean boolean88 = annotatedElementSchema62.equals((java.lang.Object) schema79);
        schema79.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        boolean boolean91 = schema40.equals((java.lang.Object) schema79);
        java.lang.String str92 = schema40.getType();
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema40.minimum(bigDecimal93);
        io.swagger.oas.models.media.Schema schema96 = schema94.maxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean97 = schema96.getDeprecated();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(boolean97);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setNot(schema26);
        java.math.BigDecimal bigDecimal30 = schema26.getMaximum();
        java.lang.Boolean boolean31 = schema26.getWriteOnly();
        schema26.setMaxItems((java.lang.Integer) 0);
        java.lang.String str34 = schema26.getTitle();
        schema26.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj15 = schema14.getExample();
        io.swagger.oas.models.media.Schema schema17 = schema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        java.lang.Boolean boolean14 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.properties(strMap34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser42 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema38.addExtension("no description", (java.lang.Object) operationParser42);
        annotatedElementSchema38.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        annotatedElementSchema38.setDiscriminator(discriminator46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.multipleOf(bigDecimal48);
        schema49.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean53 = annotatedElementSchema52.getReadOnly();
        java.lang.Boolean boolean54 = annotatedElementSchema52.getNullable();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        annotatedElementSchema52.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.String str60 = annotatedElementSchema52.getDescription();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema52.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator71 = annotatedElementSchema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema52.not((io.swagger.oas.models.media.Schema) annotatedElementSchema63);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema73.minProperties((java.lang.Integer) 10);
        java.lang.String str81 = annotatedElementSchema73.getName();
        annotatedElementSchema52.setDefault((java.lang.Object) annotatedElementSchema73);
        io.swagger.oas.models.media.Schema schema83 = null;
        annotatedElementSchema52.setNot(schema83);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema52.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList87 = annotatedElementSchema52.getRequired();
        schema49.setRequired(strList87);
        schema49.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean91 = schema49.getExclusiveMinimum();
        java.util.List<java.lang.String> strList92 = schema49.getRequired();
        schema37.setRequired(strList92);
        io.swagger.oas.models.media.Schema schema95 = schema37.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal96 = schema37.getMaximum();
        io.swagger.oas.models.media.Schema schema97 = schema16.not(schema37);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(bigDecimal96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema schema15 = schema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema12.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema9.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema9.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.Integer int18 = annotatedElementSchema9.getMinItems();
        java.lang.Boolean boolean19 = annotatedElementSchema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMultipleOf();
        io.swagger.oas.models.media.Schema schema41 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean44 = annotatedElementSchema43.getReadOnly();
        java.lang.Boolean boolean45 = annotatedElementSchema43.getNullable();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList48);
        java.lang.String str51 = annotatedElementSchema43.getDescription();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema43.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema43.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMinimum((java.lang.Boolean) false);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema57);
        annotatedElementSchema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema61 = schema38.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList62 = schema38.getRequired();
        io.swagger.oas.models.media.Schema schema63 = schema24.not(schema38);
        io.swagger.oas.models.media.Schema schema65 = schema24.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        schema10.setDefault((java.lang.Object) schema16);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema10.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = annotatedElementSchema23.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        annotatedElementSchema23.setProperties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        java.lang.String str40 = annotatedElementSchema32.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema32.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema32.minimum(bigDecimal47);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        schema48.setDiscriminator(discriminator49);
        java.lang.Boolean boolean51 = schema48.getExclusiveMaximum();
        annotatedElementSchema23.setNot(schema48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = annotatedElementSchema23.getProperties();
        io.swagger.oas.models.media.XML xML54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema23.xml(xML54);
        io.swagger.oas.models.media.Schema schema56 = schema10.not(schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema58.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean61 = schema58.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + boolean61 + "' != '" + false + "'", boolean61, false);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        java.lang.Integer int46 = annotatedElementSchema36.getMinItems();
        java.lang.Boolean boolean47 = annotatedElementSchema36.getDeprecated();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema36.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema36.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = schema53.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema10.not(schema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema10.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema8.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema8.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = schema19.name("");
        io.swagger.oas.models.media.Schema schema23 = schema19.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.externalDocs(externalDocumentation25);
        java.lang.Integer int27 = schema23.getMaxLength();
        schema4.setNot(schema23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        schema15.setFormat("");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setNot(schema20);
        schema20.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema26.writeOnly((java.lang.Boolean) false);
        java.lang.String str33 = schema32.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int18 = annotatedElementSchema15.getMaxItems();
        java.lang.Integer int19 = annotatedElementSchema15.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema15.setXml(xML21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        schema27.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator30 = schema27.getDiscriminator();
        java.math.BigDecimal bigDecimal31 = null;
        schema27.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema15.not(schema27);
        io.swagger.oas.models.media.Schema schema35 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema15.getReadOnly();
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.License license25 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional26 = io.swagger.jaxrs2.OperationParser.getLicense(license25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.example((java.lang.Object) licenseOptional26);
        java.lang.String str28 = annotatedElementSchema22.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = annotatedElementSchema22.getExternalDocs();
        annotatedElementSchema22.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMaximum(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal40 = null;
        annotatedElementSchema39.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema39.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList44 = annotatedElementSchema39.getEnum();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.description("hi!");
        java.lang.Object obj47 = schema46.getExample();
        schema46.setType("no description");
        java.math.BigDecimal bigDecimal50 = null;
        schema46.setMinimum(bigDecimal50);
        java.lang.String[] strArray78 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "no description", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "default" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        io.swagger.oas.models.media.Schema schema81 = schema46.required((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema82 = schema38.required((java.util.List<java.lang.String>) strList79);
        schema82.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(annotatedElementList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = annotatedElementSchema0.getWriteOnly();
        java.lang.String str11 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        annotatedElementSchema14.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.type("");
        schema23.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema26.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = annotatedElementSchema36.getMinProperties();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.maximum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean54 = annotatedElementSchema53.getReadOnly();
        java.lang.Boolean boolean55 = annotatedElementSchema53.getNullable();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.String str61 = annotatedElementSchema53.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int67 = annotatedElementSchema62.getMinProperties();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray73 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        io.swagger.oas.models.media.Schema schema76 = schema69.required((java.util.List<java.lang.String>) strList74);
        annotatedElementSchema53.setDefault((java.lang.Object) strList74);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema47.required((java.util.List<java.lang.String>) strList74);
        schema46.setRequired((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema80 = schema23.required((java.util.List<java.lang.String>) strList74);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema23.maximum(bigDecimal81);
        java.lang.Integer int83 = schema23.getMaxLength();
        schema23.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema86 = schema13.not(schema23);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.set$ref("*/*");
        java.lang.Integer int42 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema43 = schema4.additionalProperties(schema38);
        schema38.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema38.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.multipleOf(bigDecimal48);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        schema24.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal31 = null;
        annotatedElementSchema30.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        schema34.setFormat("*/*");
        java.math.BigDecimal bigDecimal37 = schema34.getMinimum();
        io.swagger.oas.models.media.Schema schema38 = schema24.addProperties("no description", schema34);
        java.math.BigDecimal bigDecimal39 = schema34.getMultipleOf();
        io.swagger.oas.models.media.Schema schema40 = schema19.not(schema34);
        java.lang.String str41 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema43 = schema40.format("default");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        java.lang.Integer int29 = schema20.getMinLength();
        java.lang.String str30 = schema20.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        schema10.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema10.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema schema65 = schema16.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema65.getNot();
        schema66.set$ref("hi!");
        java.math.BigDecimal bigDecimal69 = schema66.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        schema66.setExternalDocs(externalDocumentation70);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal69);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) (-1));
        annotatedElementSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.multipleOf(bigDecimal9);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal28);
        java.lang.String str30 = annotatedElementSchema23.getName();
        io.swagger.oas.models.media.Schema schema31 = schema20.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        java.lang.String str32 = schema31.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#/components/schemas/" + "'", str32, "#/components/schemas/");
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("");
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = schema24.getMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(bigDecimal26);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = annotatedElementSchema6.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray26 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema22.required((java.util.List<java.lang.String>) strList27);
        annotatedElementSchema6.setDefault((java.lang.Object) strList27);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.externalDocs(externalDocumentation32);
        schema33.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema28 = schema25.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 100);
        schema9.setExample((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        annotatedElementSchema30.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema30.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) true);
        schema50.setName("no description");
        io.swagger.oas.models.media.Schema schema54 = schema50.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema50.maxLength((java.lang.Integer) 1);
        java.lang.Integer int57 = schema56.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        schema64.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema12.getExtensions();
        schema11.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema11.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean26 = schema23.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.discriminator(discriminator27);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema34.getExclusiveMinimum();
        java.lang.Boolean boolean36 = schema34.getExclusiveMinimum();
        schema34.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = schema26.example((java.lang.Object) 0);
        schema39.setMaxLength((java.lang.Integer) 0);
        schema12.setDefault((java.lang.Object) schema39);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema15.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = schema29.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.String str15 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.media.XML xML16 = null;
        annotatedElementSchema13.setXml(xML16);
        java.lang.Boolean boolean18 = annotatedElementSchema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema12.additionalProperties(schema20);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema20.setDiscriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema26 = schema20.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean27 = schema26.getNullable();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.Integer int24 = schema9.getMinProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        schema9.setXml(xML25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema9.discriminator(discriminator27);
        java.lang.Boolean boolean29 = schema9.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        annotatedElementSchema14.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean24 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema7.example((java.lang.Object) schema26);
        io.swagger.oas.annotations.Parameter[] parameterArray28 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray28, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray28, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray28, components33);
        io.swagger.oas.models.media.Schema schema35 = schema27.example((java.lang.Object) parameterListOptional34);
        io.swagger.oas.models.media.Schema schema37 = schema35.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema37.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + true + "'", boolean24, true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(parameterArray28);
        org.junit.Assert.assertNotNull(parameterListOptional30);
        org.junit.Assert.assertNotNull(parameterListOptional32);
        org.junit.Assert.assertNotNull(parameterListOptional34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        java.lang.String str16 = schema15.getFormat();
        java.lang.reflect.AnnotatedElement annotatedElement17 = null;
        schema15.addEnumItemObject(annotatedElement17);
        schema15.setFormat("no description");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema22.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str27 = schema22.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        java.lang.Boolean boolean14 = schema10.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str24 = annotatedElementSchema17.getFormat();
        annotatedElementSchema17.setType("no description");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema28.getReadOnly();
        io.swagger.oas.models.media.Schema schema30 = schema10.not(schema28);
        io.swagger.oas.models.media.Schema schema32 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        java.lang.String str41 = annotatedElementSchema33.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema33.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema45.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema47.format("default");
        io.swagger.oas.models.media.Schema schema50 = schema32.additionalProperties(schema49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema32.maximum(bigDecimal51);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList11 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        java.lang.Object obj21 = annotatedElementSchema13.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema22.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal31 = null;
        schema30.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass35 = schema34.getClass();
        annotatedElementSchema13.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass35);
        java.lang.Object obj37 = annotatedElementSchema13.getExample();
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        annotatedElementSchema13.setDiscriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema12.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema13);
        java.lang.String str41 = schema40.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema18.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.externalDocs(externalDocumentation22);
        schema23.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.xml(xML9);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema11.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("#/components/schemas/");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.required(strList22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema28.title("");
        java.lang.String str33 = schema28.getTitle();
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema23.not(schema28);
        java.math.BigDecimal bigDecimal37 = null;
        schema36.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        java.math.BigDecimal bigDecimal40 = null;
        schema36.setMaximum(bigDecimal40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema36.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 100);
        schema31.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        java.lang.String str24 = schema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema26.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 0\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 100\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        io.swagger.oas.annotations.info.Contact contact11 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional12 = io.swagger.jaxrs2.OperationParser.getContact(contact11);
        annotatedElementSchema8.setExample((java.lang.Object) contactOptional12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        schema15.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal20 = null;
        annotatedElementSchema19.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema19.nullable((java.lang.Boolean) false);
        annotatedElementSchema19.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema19.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info39 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional40 = io.swagger.jaxrs2.OperationParser.getInfo(info39);
        java.lang.Class<?> wildcardClass41 = infoOptional40.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray42 = new java.lang.reflect.AnnotatedElement[] { wildcardClass41 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList43 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList43, annotatedElementArray42);
        schema38.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList43);
        annotatedElementSchema19.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList43);
        schema15.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList43);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema0.additionalProperties(schema15);
        java.lang.Integer int49 = annotatedElementSchema0.getMinProperties();
        java.lang.Integer int50 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        annotatedElementSchema0.setDiscriminator(discriminator51);
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: default\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(contactOptional12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(infoOptional40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(annotatedElementArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema14.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.xml(xML18);
        io.swagger.oas.models.media.Schema schema20 = schema12.example((java.lang.Object) schema19);
        schema12.setMaxProperties((java.lang.Integer) 100);
        schema12.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        annotatedElementSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = annotatedElementSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        schema34.setTitle("#/components/schemas/");
        java.lang.Integer int37 = schema34.getMinLength();
        java.lang.Integer int38 = schema34.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        io.swagger.oas.annotations.info.Contact contact42 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional43 = io.swagger.jaxrs2.OperationParser.getContact(contact42);
        annotatedElementSchema39.setExample((java.lang.Object) contactOptional43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema39.setMinProperties((java.lang.Integer) 100);
        schema34.setExample((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema39.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema55.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList61);
        java.lang.Integer int64 = annotatedElementSchema55.getMinItems();
        annotatedElementSchema55.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema55.externalDocs(externalDocumentation67);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema55.minimum(bigDecimal69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.multipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema73 = schema53.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema70);
        io.swagger.oas.models.media.Schema schema75 = schema73.exclusiveMaximum((java.lang.Boolean) true);
        schema75.setName("no description");
        io.swagger.oas.models.media.Schema schema79 = schema75.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema79.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema81.setMaxProperties((java.lang.Integer) 1);
        schema12.setDefault((java.lang.Object) schema81);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(contactOptional43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setDefault((java.lang.Object) schema28);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal23 = schema19.getMultipleOf();
        io.swagger.oas.models.media.Schema schema24 = null;
        schema19.setNot(schema24);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        schema25.setPattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        io.swagger.oas.annotations.info.License license33 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional34 = io.swagger.jaxrs2.OperationParser.getLicense(license33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema30.example((java.lang.Object) licenseOptional34);
        java.lang.String str36 = annotatedElementSchema30.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = annotatedElementSchema30.getExternalDocs();
        annotatedElementSchema30.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML42 = null;
        schema41.setXml(xML42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.properties(strMap50);
        java.lang.Object obj52 = annotatedElementSchema44.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = annotatedElementSchema44.getExtensions();
        boolean boolean54 = schema41.equals((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema41.additionalProperties(schema62);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema64.setPattern("");
        annotatedElementSchema64.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema64.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema64.pattern("hi!");
        io.swagger.oas.models.media.Schema schema74 = schema62.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        schema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema74);
        java.lang.Boolean boolean76 = schema74.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(licenseOptional34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean76);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray16 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray16, produces25, produces26, components27);
        java.lang.Class<?> wildcardClass29 = apiResponseArray16.getClass();
        schema15.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = annotatedElementSchema32.getEnum();
        annotatedElementSchema32.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = annotatedElementSchema40.getMinItems();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        java.lang.Boolean boolean54 = schema52.getNullable();
        io.swagger.oas.models.media.Schema schema55 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema52);
        java.lang.Boolean boolean56 = schema55.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(apiResponseArray16);
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElementList37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.set$ref("hi!");
        java.lang.Integer int14 = annotatedElementSchema0.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.String str18 = annotatedElementSchema16.get$ref();
        io.swagger.oas.models.media.XML xML19 = null;
        annotatedElementSchema16.setXml(xML19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        java.lang.Object obj23 = annotatedElementSchema16.getExample();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean26 = schema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.String str16 = schema13.getFormat();
        io.swagger.oas.models.media.XML xML17 = null;
        schema13.setXml(xML17);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser21 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema17.addExtension("no description", (java.lang.Object) operationParser21);
        annotatedElementSchema17.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str25 = annotatedElementSchema17.getTitle();
        java.lang.Integer int26 = annotatedElementSchema17.getMinProperties();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.maximum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema28.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema10.example((java.lang.Object) schema28);
        java.lang.Boolean boolean35 = schema34.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.xml(xML15);
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema9.maximum(bigDecimal19);
        java.lang.String str21 = schema20.getDescription();
        schema20.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.lang.String str10 = schema4.getName();
        io.swagger.oas.models.media.Schema schema12 = schema4.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList15 = schema14.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        schema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema30 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = annotatedElementSchema31.getProperties();
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema14.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema0.setAdditionalProperties(schema14);
        java.math.BigDecimal bigDecimal43 = annotatedElementSchema0.getMinimum();
        java.lang.Integer int44 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = schema53.minLength((java.lang.Integer) 10);
        java.lang.String str56 = schema55.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean59 = annotatedElementSchema58.getReadOnly();
        java.lang.Boolean boolean60 = annotatedElementSchema58.getNullable();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList63);
        java.lang.String str66 = annotatedElementSchema58.getDescription();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema58.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema55.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema58);
        java.util.List<java.lang.String> strList70 = schema69.getRequired();
        schema69.setExclusiveMinimum((java.lang.Boolean) true);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema69);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strList70);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement20 = annotatedElementSchema10.getDefault();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema4.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema22.name("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema22.getExternalDocs();
        java.lang.Boolean boolean27 = schema22.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.name("");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 0);
        schema41.setNullable((java.lang.Boolean) false);
        schema22.setDefault((java.lang.Object) schema41);
        java.lang.String str47 = schema41.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(annotatedElement20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        java.math.BigDecimal bigDecimal44 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema49.getNot();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.xml(xML51);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        schema22.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema12.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema25.nullable((java.lang.Boolean) false);
        schema27.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema28.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        io.swagger.oas.annotations.info.Contact contact34 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional35 = io.swagger.jaxrs2.OperationParser.getContact(contact34);
        annotatedElementSchema31.setExample((java.lang.Object) contactOptional35);
        annotatedElementSchema31.setTitle("hi!");
        java.util.List<java.lang.String> strList39 = annotatedElementSchema31.getRequired();
        io.swagger.oas.models.media.Schema schema40 = schema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema41 = schema28.getAdditionalProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(contactOptional35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.nullable((java.lang.Boolean) true);
        java.lang.Integer int19 = schema18.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        annotatedElementSchema21.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str29 = annotatedElementSchema21.getTitle();
        java.lang.Integer int30 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        annotatedElementSchema32.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean63 = annotatedElementSchema32.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList64 = null;
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema32.required(strList64);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema21.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema67.minProperties((java.lang.Integer) 0);
        java.lang.Integer int70 = annotatedElementSchema67.getMinLength();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema72.setPattern("");
        annotatedElementSchema72.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema72.properties(strMap78);
        java.lang.Object obj80 = annotatedElementSchema72.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = annotatedElementSchema72.getExtensions();
        annotatedElementSchema67.setExtensions(strMap81);
        annotatedElementSchema32.setExtensions(strMap81);
        io.swagger.oas.models.media.Schema schema84 = schema18.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema18.xml(xML85);
        io.swagger.oas.models.media.Discriminator discriminator87 = null;
        schema86.setDiscriminator(discriminator87);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.format("");
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.Integer int23 = annotatedElementSchema14.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement24 = annotatedElementSchema14.getDefault();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList27 = schema26.getRequired();
        schema11.setRequired(strList27);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(annotatedElement24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strList27);
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList7 = schema6.getEnum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.xml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(annotatedElementList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.String str15 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.media.XML xML16 = null;
        annotatedElementSchema13.setXml(xML16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema13.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        io.swagger.oas.models.media.Schema schema23 = schema20.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema schema26 = schema23.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema12.additionalProperties(schema26);
        java.lang.String str28 = schema26.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean30 = annotatedElementSchema29.getReadOnly();
        java.lang.Boolean boolean31 = annotatedElementSchema29.getNullable();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str37 = annotatedElementSchema29.getDescription();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema29.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = annotatedElementSchema40.getProperties();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema40.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser57 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema53.addExtension("no description", (java.lang.Object) operationParser57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema59.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        annotatedElementSchema59.setRequired((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema53.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList65);
        schema13.setRequired((java.util.List<java.lang.String>) strList65);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema13.multipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema74 = schema13.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.discriminator(discriminator14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = annotatedElementSchema0.getProperties();
        java.lang.Integer int12 = annotatedElementSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = schema13.getPattern();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema0.setMinimum(bigDecimal18);
        java.util.List<java.lang.String> strList20 = annotatedElementSchema0.getRequired();
        java.lang.Integer int21 = annotatedElementSchema0.getMaxItems();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList22 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(annotatedElementList22);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = schema38.getAdditionalProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.xml(xML31);
        io.swagger.oas.models.media.Schema schema33 = schema32.getNot();
        java.lang.Boolean boolean34 = schema32.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator35 = schema32.getDiscriminator();
        java.lang.Integer int36 = schema32.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = schema32.getAdditionalProperties();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(schema37);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.deprecated((java.lang.Boolean) true);
        schema12.setMinProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean15 = schema12.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.deprecated((java.lang.Boolean) true);
        java.lang.Integer int18 = schema17.getMaxLength();
        annotatedElementSchema0.setNot(schema17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minLength((java.lang.Integer) 100);
        java.lang.String str26 = schema25.getPattern();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        java.lang.Boolean boolean31 = schema29.getUniqueItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = schema28.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema33 = schema28.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema28.multipleOf(bigDecimal34);
        java.lang.Boolean boolean36 = schema35.getExclusiveMinimum();
        java.lang.String str37 = schema35.getType();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minProperties((java.lang.Integer) 0);
        schema15.setFormat("*/*");
        schema15.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        java.math.BigDecimal bigDecimal28 = schema25.getMinimum();
        io.swagger.oas.models.media.Schema schema29 = schema15.addProperties("no description", schema25);
        io.swagger.oas.models.media.Schema schema31 = schema15.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        annotatedElementSchema32.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = annotatedElementSchema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = annotatedElementSchema32.getProperties();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        schema15.setMinProperties((java.lang.Integer) 1);
        schema15.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema15);
        io.swagger.oas.models.media.Schema schema47 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        schema45.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = schema21.getDeprecated();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        schema12.setMinimum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        schema13.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser22 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema18.addExtension("no description", (java.lang.Object) operationParser22);
        annotatedElementSchema18.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        annotatedElementSchema18.setDiscriminator(discriminator26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.multipleOf(bigDecimal28);
        schema29.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        java.lang.Boolean boolean34 = annotatedElementSchema32.getNullable();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.String str40 = annotatedElementSchema32.getDescription();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator51 = annotatedElementSchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        java.lang.String str61 = annotatedElementSchema53.getName();
        annotatedElementSchema32.setDefault((java.lang.Object) annotatedElementSchema53);
        io.swagger.oas.models.media.Schema schema63 = null;
        annotatedElementSchema32.setNot(schema63);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema32.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList67 = annotatedElementSchema32.getRequired();
        schema29.setRequired(strList67);
        schema29.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean71 = schema29.getExclusiveMinimum();
        java.util.List<java.lang.String> strList72 = schema29.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema13.required(strList72);
        io.swagger.oas.models.media.Schema schema75 = schema73.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema75.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema75.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = annotatedElementSchema7.getMinProperties();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.maximum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema7.setMultipleOf(bigDecimal15);
        annotatedElementSchema7.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        java.lang.String str48 = annotatedElementSchema40.getName();
        annotatedElementSchema19.setDefault((java.lang.Object) annotatedElementSchema40);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.xml(xML50);
        java.lang.String str52 = schema51.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.properties(strMap59);
        schema60.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema60.addProperties("hi!", schema64);
        java.lang.String[] strArray72 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional73 = io.swagger.jaxrs2.OperationParser.getTags(strArray72);
        io.swagger.oas.models.media.Schema schema74 = schema60.example((java.lang.Object) strArray72);
        schema74.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema77.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        annotatedElementSchema77.setRequired((java.util.List<java.lang.String>) strList83);
        java.lang.Integer int86 = annotatedElementSchema77.getMinItems();
        annotatedElementSchema77.setType("hi!");
        java.util.List<java.lang.String> strList89 = annotatedElementSchema77.getRequired();
        io.swagger.oas.models.media.Schema schema90 = schema74.required(strList89);
        boolean boolean91 = schema51.equals((java.lang.Object) schema90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema90.getProperties();
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema7.properties(strMap92);
        annotatedElementSchema0.setProperties(strMap92);
        io.swagger.oas.models.media.Schema schema96 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(tagSetOptional73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str14 = annotatedElementSchema13.getPattern();
        annotatedElementSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = annotatedElementSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema20.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema20.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.pattern("");
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema7.not(schema28);
        io.swagger.oas.models.media.Schema schema32 = schema30.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.deprecated((java.lang.Boolean) true);
        schema34.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema34.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema29.getExtensions();
        schema29.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.maximum(bigDecimal34);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.String str8 = annotatedElementSchema6.get$ref();
        io.swagger.oas.models.media.XML xML9 = null;
        annotatedElementSchema6.setXml(xML9);
        io.swagger.oas.models.media.XML xML11 = annotatedElementSchema6.getXml();
        java.lang.String str12 = annotatedElementSchema6.get$ref();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema6.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.example((java.lang.Object) bigDecimal15);
        io.swagger.oas.models.media.XML xML18 = annotatedElementSchema0.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(xML18);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        java.lang.Object obj33 = null;
        boolean boolean34 = annotatedElementSchema21.equals(obj33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = annotatedElementSchema21.getProperties();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.lang.Boolean boolean40 = schema24.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema41.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema41.required((java.util.List<java.lang.String>) strList52);
        annotatedElementSchema41.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.minProperties((java.lang.Integer) 10);
        java.lang.String str65 = annotatedElementSchema57.getName();
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema41.not(schema69);
        schema70.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str73 = schema70.getType();
        io.swagger.oas.models.media.Schema schema75 = schema70.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema24.additionalProperties(schema75);
        java.lang.Boolean boolean77 = schema75.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList19 = annotatedElementSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.description("hi!");
        java.lang.Object obj22 = schema21.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        io.swagger.oas.annotations.info.License license26 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional27 = io.swagger.jaxrs2.OperationParser.getLicense(license26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema23.example((java.lang.Object) licenseOptional27);
        java.lang.String str29 = annotatedElementSchema23.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = annotatedElementSchema23.getExternalDocs();
        annotatedElementSchema23.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema21.additionalProperties(schema34);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema21.required((java.util.List<java.lang.String>) strList49);
        schema13.setRequired((java.util.List<java.lang.String>) strList49);
        java.lang.String str53 = schema13.getTitle();
        io.swagger.oas.models.media.Schema schema55 = schema13.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        annotatedElementSchema56.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema56.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema56.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = annotatedElementSchema67.getMinProperties();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema67.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray78 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        io.swagger.oas.models.media.Schema schema81 = schema74.required((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema56.required((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema83 = schema13.required((java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList84 = schema83.getEnum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(annotatedElementList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(licenseOptional27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(annotatedElementList84);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.pattern("no description");
        java.lang.String str11 = annotatedElementSchema0.getTitle();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.String str25 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.XML xML26 = null;
        annotatedElementSchema0.setXml(xML26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        io.swagger.oas.annotations.info.Contact contact33 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional34 = io.swagger.jaxrs2.OperationParser.getContact(contact33);
        annotatedElementSchema30.setExample((java.lang.Object) contactOptional34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean37 = annotatedElementSchema36.getReadOnly();
        java.lang.Boolean boolean38 = annotatedElementSchema36.getNullable();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.String str44 = annotatedElementSchema36.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int50 = annotatedElementSchema45.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray56 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        io.swagger.oas.models.media.Schema schema59 = schema52.required((java.util.List<java.lang.String>) strList57);
        annotatedElementSchema36.setDefault((java.lang.Object) strList57);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema30.required((java.util.List<java.lang.String>) strList57);
        java.util.List<java.lang.String> strList62 = annotatedElementSchema30.getRequired();
        io.swagger.oas.models.media.Schema schema63 = schema29.required(strList62);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(contactOptional34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema18.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList18 = schema17.getEnum();
        io.swagger.oas.models.media.Schema schema20 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(annotatedElementList18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int18 = annotatedElementSchema15.getMaxItems();
        java.lang.Integer int19 = annotatedElementSchema15.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.Integer int24 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = schema20.example((java.lang.Object) int24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.readOnly((java.lang.Boolean) false);
        java.lang.String str38 = schema37.getFormat();
        java.lang.String str39 = schema37.getType();
        schema25.setNot(schema37);
        io.swagger.oas.models.media.Schema schema42 = schema37.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema42.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        java.lang.Object obj12 = schema10.getExample();
        io.swagger.oas.models.media.Schema schema14 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean17 = schema14.getExclusiveMinimum();
        java.lang.Boolean boolean18 = schema14.getDeprecated();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean15 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        java.lang.String str8 = schema6.getFormat();
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minLength((java.lang.Integer) 0);
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema15.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema15.getExtensions();
        io.swagger.oas.models.media.Schema schema20 = schema6.example((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema schema22 = schema20.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = schema22.getMaximum();
        java.lang.String str24 = schema22.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = annotatedElementSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema5.$ref("*/*");
        schema16.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema16.getType();
        io.swagger.oas.models.media.Schema schema21 = schema16.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        java.lang.Boolean boolean34 = annotatedElementSchema32.getNullable();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.String str40 = annotatedElementSchema32.getDescription();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator51 = annotatedElementSchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        java.lang.String str61 = annotatedElementSchema53.getName();
        annotatedElementSchema32.setDefault((java.lang.Object) annotatedElementSchema53);
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema53.xml(xML63);
        annotatedElementSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        schema21.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = schema67.getProperties();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema67.maximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema67.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = schema72.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.xml(xML12);
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema20.set$ref("no description");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        schema35.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema35.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema20.setAdditionalProperties(schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.properties(strMap53);
        io.swagger.oas.models.media.Schema schema56 = schema54.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        annotatedElementSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean61 = annotatedElementSchema57.getWriteOnly();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema57.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str65 = annotatedElementSchema64.getPattern();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema57.not((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema schema67 = schema56.not(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int73 = annotatedElementSchema68.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = annotatedElementSchema68.getExternalDocs();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema68.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str78 = annotatedElementSchema77.getPattern();
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema77.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema81.setPattern("");
        annotatedElementSchema81.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = annotatedElementSchema81.getExtensions();
        schema80.setExtensions(strMap87);
        schema76.setExtensions(strMap87);
        schema66.setExtensions(strMap87);
        schema35.setExtensions(strMap87);
        schema35.setMaxProperties((java.lang.Integer) 10);
        schema35.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema97 = schema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema99 = schema35.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(externalDocumentation74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = schema8.getMultipleOf();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.multipleOf(bigDecimal14);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        java.lang.Object obj33 = null;
        boolean boolean34 = annotatedElementSchema21.equals(obj33);
        annotatedElementSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema21.discriminator(discriminator37);
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        java.lang.Boolean boolean14 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal30 = null;
        annotatedElementSchema29.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema29.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = annotatedElementSchema29.getEnum();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.description("hi!");
        java.lang.Object obj37 = schema36.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.License license41 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional42 = io.swagger.jaxrs2.OperationParser.getLicense(license41);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema38.example((java.lang.Object) licenseOptional42);
        java.lang.String str44 = annotatedElementSchema38.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = annotatedElementSchema38.getExternalDocs();
        annotatedElementSchema38.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema36.additionalProperties(schema49);
        java.lang.String[] strArray63 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        io.swagger.oas.models.media.Schema schema66 = schema36.required((java.util.List<java.lang.String>) strList64);
        schema28.setRequired((java.util.List<java.lang.String>) strList64);
        schema12.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int69 = schema12.getMinItems();
        java.lang.Object obj70 = schema12.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(licenseOptional42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        schema8.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal18 = annotatedElementSchema13.getMultipleOf();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.format("default");
        schema20.setDeprecated((java.lang.Boolean) false);
        java.lang.String str23 = schema20.toString();
        io.swagger.oas.models.media.Schema schema24 = schema8.example((java.lang.Object) str23);
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str23, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = annotatedElementSchema6.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray26 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema22.required((java.util.List<java.lang.String>) strList27);
        annotatedElementSchema6.setDefault((java.lang.Object) strList27);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList27);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList32 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema0.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str37 = schema36.get$ref();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElementList32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal12 = annotatedElementSchema0.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation13);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minLength((java.lang.Integer) 10);
        boolean boolean16 = annotatedElementSchema0.equals((java.lang.Object) 10);
        java.lang.Boolean boolean17 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator20 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = annotatedElementSchema12.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        java.lang.String str41 = annotatedElementSchema33.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not(schema47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema49.title("hi!");
        schema48.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema49);
        annotatedElementSchema49.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj60 = annotatedElementSchema49.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema49.externalDocs(externalDocumentation61);
        annotatedElementSchema49.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema49.minItems((java.lang.Integer) 1);
        java.lang.String str67 = schema66.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.type("default");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.minimum(bigDecimal12);
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, #/components/schemas/, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema11.setProperties(strMap29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema11.maximum(bigDecimal31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema11.getExternalDocs();
        java.math.BigDecimal bigDecimal34 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema schema27 = schema16.not(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.minimum(bigDecimal40);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList42 = schema41.getEnum();
        io.swagger.oas.models.media.Schema schema44 = schema41.maxLength((java.lang.Integer) (-1));
        java.lang.String str45 = schema41.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser50 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema46.addExtension("no description", (java.lang.Object) operationParser50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema52.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        annotatedElementSchema52.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema46.required((java.util.List<java.lang.String>) strList58);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.maximum(bigDecimal62);
        java.util.List<java.lang.String> strList64 = schema63.getRequired();
        schema41.setRequired(strList64);
        schema26.setRequired(strList64);
        io.swagger.oas.models.media.Schema schema67 = schema6.required(strList64);
        schema6.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.annotations.media.Content[] contentArray70 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces71 = null;
        javax.ws.rs.Produces produces72 = null;
        io.swagger.oas.models.Components components73 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional74 = io.swagger.jaxrs2.OperationParser.getContent(contentArray70, produces71, produces72, components73);
        javax.ws.rs.Produces produces75 = null;
        javax.ws.rs.Produces produces76 = null;
        io.swagger.oas.models.Components components77 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional78 = io.swagger.jaxrs2.OperationParser.getContent(contentArray70, produces75, produces76, components77);
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional80 = io.swagger.jaxrs2.OperationParser.getContents(contentArray70, components79);
        schema6.setExample((java.lang.Object) components79);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(annotatedElementList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(contentArray70);
        org.junit.Assert.assertNotNull(contentOptional74);
        org.junit.Assert.assertNotNull(contentOptional78);
        org.junit.Assert.assertNotNull(contentOptional80);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML32 = null;
        schema4.setXml(xML32);
        schema4.set$ref("no description");
        schema4.setNullable((java.lang.Boolean) true);
        java.lang.String str38 = schema4.getType();
        io.swagger.oas.models.media.Schema schema40 = schema4.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema40.addRequiredItem("hi!");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        annotatedElementSchema17.setDiscriminator(discriminator62);
        annotatedElementSchema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML66 = null;
        annotatedElementSchema17.setXml(xML66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema68.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema68.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.minimum(bigDecimal77);
        io.swagger.oas.models.media.XML xML79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.xml(xML79);
        annotatedElementSchema17.setAdditionalProperties(schema78);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean84 = schema83.getDeprecated();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 0);
        schema19.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML25 = null;
        schema19.setXml(xML25);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        schema15.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.Integer int23 = annotatedElementSchema14.getMinItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.minimum(bigDecimal24);
        annotatedElementSchema14.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema14.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean30 = annotatedElementSchema14.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean40 = annotatedElementSchema39.getReadOnly();
        java.lang.Boolean boolean41 = annotatedElementSchema39.getNullable();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        annotatedElementSchema39.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.String str47 = annotatedElementSchema39.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = annotatedElementSchema48.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray59 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        io.swagger.oas.models.media.Schema schema62 = schema55.required((java.util.List<java.lang.String>) strList60);
        annotatedElementSchema39.setDefault((java.lang.Object) strList60);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema33.required((java.util.List<java.lang.String>) strList60);
        java.lang.Boolean boolean65 = annotatedElementSchema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema33.not(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str69 = annotatedElementSchema68.getPattern();
        annotatedElementSchema68.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean72 = annotatedElementSchema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema68.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str75 = annotatedElementSchema68.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str77 = annotatedElementSchema76.getPattern();
        annotatedElementSchema76.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean80 = annotatedElementSchema76.getWriteOnly();
        boolean boolean81 = annotatedElementSchema68.equals((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        annotatedElementSchema68.setExternalDocs(externalDocumentation82);
        java.lang.String[] strArray85 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        annotatedElementSchema68.setRequired((java.util.List<java.lang.String>) strList86);
        schema67.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema90 = schema32.required((java.util.List<java.lang.String>) strList86);
        schema90.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        annotatedElementSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        java.lang.Integer int21 = schema20.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema23.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info34 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional35 = io.swagger.jaxrs2.OperationParser.getInfo(info34);
        java.lang.Class<?> wildcardClass36 = infoOptional35.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray37 = new java.lang.reflect.AnnotatedElement[] { wildcardClass36 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList38 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList38, annotatedElementArray37);
        schema33.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList38);
        schema20.addExtension("no description", (java.lang.Object) schema33);
        java.lang.String str42 = schema33.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        io.swagger.oas.annotations.info.Contact contact47 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional48 = io.swagger.jaxrs2.OperationParser.getContact(contact47);
        annotatedElementSchema44.setExample((java.lang.Object) contactOptional48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.pattern("#/components/schemas/");
        schema33.addExtension("no description", (java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema9.additionalProperties(schema33);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema9);
        java.lang.Integer int57 = annotatedElementSchema0.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(infoOptional35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(annotatedElementArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str42, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str33 = schema32.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        java.util.List<java.lang.String> strList25 = annotatedElementSchema11.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = annotatedElementSchema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema26.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.getAdditionalProperties();
        annotatedElementSchema11.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema11.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.XML xML39 = schema38.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML39);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = annotatedElementSchema13.getDescription();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator32 = annotatedElementSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = annotatedElementSchema24.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema24.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.getNot();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema0.getNot();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.type("no description");
        io.swagger.oas.models.media.Schema schema45 = schema43.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean46 = schema45.getUniqueItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        java.math.BigDecimal bigDecimal25 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setPattern("default");
        annotatedElementSchema0.setFormat("*/*");
        java.math.BigDecimal bigDecimal30 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema35.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        schema39.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator42 = schema39.getDiscriminator();
        java.math.BigDecimal bigDecimal43 = null;
        schema39.setMultipleOf(bigDecimal43);
        java.lang.String str45 = schema39.getName();
        io.swagger.oas.models.media.Schema schema47 = schema39.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema39.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.additionalProperties(schema39);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = annotatedElementSchema31.getMinItems();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.minimum(bigDecimal41);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList43 = schema42.getEnum();
        io.swagger.oas.models.media.Schema schema45 = schema42.maxLength((java.lang.Integer) (-1));
        java.lang.Object obj46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema42.example(obj46);
        annotatedElementSchema5.setNot(schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema47.maximum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema47.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = schema47.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(annotatedElementList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int23 = annotatedElementSchema0.getMaxProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean10 = schema9.getWriteOnly();
        java.lang.Boolean boolean11 = schema9.getDeprecated();
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema9.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        java.lang.String str8 = schema4.getType();
        schema4.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList15 = schema14.getEnum();
        java.lang.String str16 = schema14.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(annotatedElementList15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        java.lang.Boolean boolean22 = schema21.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMinimum(bigDecimal27);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema28.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        io.swagger.oas.annotations.info.Contact contact34 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional35 = io.swagger.jaxrs2.OperationParser.getContact(contact34);
        annotatedElementSchema31.setExample((java.lang.Object) contactOptional35);
        annotatedElementSchema31.setTitle("hi!");
        java.util.List<java.lang.String> strList39 = annotatedElementSchema31.getRequired();
        io.swagger.oas.models.media.Schema schema40 = schema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.lang.Integer int41 = annotatedElementSchema31.getMaxItems();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema31.setMinimum(bigDecimal42);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(contactOptional35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.externalDocs(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        java.lang.Class<?> wildcardClass29 = annotatedElementSchema8.getClass();
        schema7.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass29);
        schema7.setTitle("");
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema7.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser12 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema8.addExtension("no description", (java.lang.Object) operationParser12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.properties(strMap14);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = schema18.getEnum();
        java.util.List<java.lang.String> strList22 = schema18.getRequired();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Object obj7 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean10 = schema9.getWriteOnly();
        java.lang.String str11 = schema9.get$ref();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        java.lang.Boolean boolean78 = schema77.getDeprecated();
        io.swagger.oas.models.media.Schema schema80 = schema77.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean81 = schema80.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema82 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema82.setPattern("");
        annotatedElementSchema82.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = null;
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema82.properties(strMap88);
        io.swagger.oas.models.media.Schema schema91 = schema89.minLength((java.lang.Integer) 10);
        java.lang.String str92 = schema89.toString();
        java.lang.Integer int93 = schema89.getMaxProperties();
        schema89.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema89.discriminator(discriminator96);
        schema80.setExample((java.lang.Object) schema97);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str92, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int93);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.String str22 = annotatedElementSchema14.getDescription();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema14.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator33 = annotatedElementSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.minProperties((java.lang.Integer) 10);
        java.lang.String str43 = annotatedElementSchema35.getName();
        annotatedElementSchema14.setDefault((java.lang.Object) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema schema45 = null;
        annotatedElementSchema14.setNot(schema45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema14.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList49 = annotatedElementSchema14.getRequired();
        schema11.setRequired(strList49);
        schema11.setReadOnly((java.lang.Boolean) true);
        schema11.setReadOnly((java.lang.Boolean) false);
        schema11.setReadOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList57 = schema11.getRequired();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList57);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        java.math.BigDecimal bigDecimal19 = null;
        schema17.setMaximum(bigDecimal19);
        schema17.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.deprecated((java.lang.Boolean) true);
        java.lang.Integer int18 = schema17.getMaxLength();
        annotatedElementSchema0.setNot(schema17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minLength((java.lang.Integer) 100);
        java.lang.String str26 = schema25.getPattern();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        java.lang.String str19 = schema18.get$ref();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList19 = annotatedElementSchema14.getEnum();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.description("hi!");
        java.lang.Object obj22 = schema21.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        io.swagger.oas.annotations.info.License license26 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional27 = io.swagger.jaxrs2.OperationParser.getLicense(license26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema23.example((java.lang.Object) licenseOptional27);
        java.lang.String str29 = annotatedElementSchema23.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = annotatedElementSchema23.getExternalDocs();
        annotatedElementSchema23.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema21.additionalProperties(schema34);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema21.required((java.util.List<java.lang.String>) strList49);
        schema13.setRequired((java.util.List<java.lang.String>) strList49);
        java.lang.String str53 = schema13.getTitle();
        io.swagger.oas.models.media.Schema schema55 = schema13.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        annotatedElementSchema56.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema56.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema56.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = annotatedElementSchema67.getMinProperties();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema67.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray78 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        io.swagger.oas.models.media.Schema schema81 = schema74.required((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema56.required((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema83 = schema13.required((java.util.List<java.lang.String>) strList79);
        java.lang.Object obj85 = null;
        schema83.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj85);
        io.swagger.oas.models.media.Schema schema88 = schema83.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(annotatedElementList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(licenseOptional27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = schema15.getMinimum();
        schema15.setMinProperties((java.lang.Integer) 0);
        schema15.setNullable((java.lang.Boolean) false);
        schema15.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.getTitle();
        java.lang.Class<?> wildcardClass38 = schema36.getClass();
        schema28.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass38);
        schema28.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema11.getEnum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(annotatedElementList13);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = schema18.getMinimum();
        io.swagger.oas.models.media.Schema schema25 = schema18.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML26 = null;
        schema18.setXml(xML26);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML18 = null;
        schema17.setXml(xML18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        schema10.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema16.setNullable((java.lang.Boolean) false);
        annotatedElementSchema16.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema16.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = schema30.getDeprecated();
        schema14.addExtension("*/*", (java.lang.Object) boolean31);
        java.lang.Integer int33 = schema14.getMinProperties();
        schema14.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str14 = annotatedElementSchema13.getPattern();
        annotatedElementSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = annotatedElementSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema20.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema20.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.pattern("");
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema7.not(schema28);
        io.swagger.oas.models.media.Schema schema32 = schema30.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.deprecated((java.lang.Boolean) true);
        java.lang.String str35 = schema34.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML35 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema36.pattern("hi!");
        schema45.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema45.getAdditionalProperties();
        boolean boolean49 = annotatedElementSchema0.equals((java.lang.Object) schema45);
        schema45.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNull(xML35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.discriminator(discriminator20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.maximum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema24.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal34 = null;
        annotatedElementSchema33.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean38 = annotatedElementSchema33.getNullable();
        io.swagger.oas.models.media.Schema schema39 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        schema24.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 10);
        java.lang.String str19 = annotatedElementSchema14.getDescription();
        java.lang.Integer int20 = annotatedElementSchema14.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.Contact contact24 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional25 = io.swagger.jaxrs2.OperationParser.getContact(contact24);
        annotatedElementSchema21.setExample((java.lang.Object) contactOptional25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = schema28.getExclusiveMinimum();
        java.lang.Boolean boolean30 = schema28.getExclusiveMinimum();
        schema28.setMinProperties((java.lang.Integer) 0);
        annotatedElementSchema14.setDefault((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema13.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema35.name("*/*");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(contactOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int15 = annotatedElementSchema0.getMaxProperties();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        java.lang.Integer int8 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean9 = annotatedElementSchema0.getDeprecated();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("no description");
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.minimum(bigDecimal21);
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.xml(xML23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.Boolean boolean27 = annotatedElementSchema25.getNullable();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList30);
        schema22.setRequired((java.util.List<java.lang.String>) strList30);
        schema9.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema36 = schema9.description("#/components/schemas/");
        schema9.setType("default");
        io.swagger.oas.models.media.Schema schema40 = schema9.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal41 = null;
        schema9.setMaximum(bigDecimal41);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema64.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema69.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema71.name("");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        schema9.setReadOnly((java.lang.Boolean) true);
        schema9.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getName();
        schema17.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMaximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        schema9.setReadOnly((java.lang.Boolean) true);
        schema9.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, #/components/schemas/, */*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema9.maximum(bigDecimal18);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        schema17.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator20 = schema17.getDiscriminator();
        java.math.BigDecimal bigDecimal21 = null;
        schema17.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema23 = schema17.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = annotatedElementSchema28.getExtensions();
        schema27.setExtensions(strMap34);
        schema17.setExtensions(strMap34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema17);
        schema17.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = schema17.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML35 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema36.pattern("hi!");
        schema45.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema45.getAdditionalProperties();
        boolean boolean49 = annotatedElementSchema0.equals((java.lang.Object) schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema45.setExternalDocs(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNull(xML35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray11 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        io.swagger.oas.models.media.Schema schema14 = schema7.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema14.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema9.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.uniqueItems((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass22 = schema21.getClass();
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str26 = schema25.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema25.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema28.setExternalDocs(externalDocumentation29);
        java.lang.Boolean boolean31 = schema28.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces21, produces22, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces27, produces28, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces37, produces38, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional36);
        org.junit.Assert.assertNotNull(contentOptional40);
        org.junit.Assert.assertNotNull(contentOptional42);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema10.minLength((java.lang.Integer) 0);
        schema26.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMaximum(bigDecimal11);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 1);
        annotatedElementSchema0.addExtension("#/components/schemas/", (java.lang.Object) annotatedElementSchema6);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList16 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema17 = schema15.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema28 = schema25.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.minProperties((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass31 = schema28.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        schema10.setNullable((java.lang.Boolean) false);
        java.lang.Integer int13 = schema10.getMinLength();
        java.lang.String str14 = schema10.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.not((io.swagger.oas.models.media.Schema) annotatedElementSchema41);
        io.swagger.oas.models.media.Schema schema44 = schema33.not(schema43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int50 = annotatedElementSchema45.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = annotatedElementSchema45.getExternalDocs();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str55 = annotatedElementSchema54.getPattern();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema54.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = annotatedElementSchema58.getExtensions();
        schema57.setExtensions(strMap64);
        schema53.setExtensions(strMap64);
        schema43.setExtensions(strMap64);
        schema23.setExtensions(strMap64);
        java.lang.Object obj69 = schema23.getExample();
        schema23.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(externalDocumentation51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement20 = annotatedElementSchema10.getDefault();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema4.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema22.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema33.required((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        java.lang.String str43 = schema40.getDescription();
        schema25.setDefault((java.lang.Object) str43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = schema25.getExternalDocs();
        schema25.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator50 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = schema25.format("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(annotatedElement20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema52);
    }
}

