import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test03501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03501");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        java.lang.String str13 = annotatedElementSchema0.get$ref();
        java.lang.Boolean boolean14 = annotatedElementSchema0.getExclusiveMinimum();
        java.lang.String str15 = annotatedElementSchema0.toString();
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03502");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema29.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = annotatedElementSchema33.getExtensions();
        schema32.setExtensions(strMap39);
        annotatedElementSchema19.setExtensions(strMap39);
        schema18.setExtensions(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        schema18.setDiscriminator(discriminator43);
        java.lang.String str45 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema47 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.not(schema48);
        schema49.setDescription("default");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03503");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        schema16.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema16.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        java.lang.String str22 = schema16.getName();
        io.swagger.oas.models.media.Schema schema24 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03504");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema0.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.multipleOf(bigDecimal26);
        schema27.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        schema27.setMinimum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03505");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int32 = schema31.getMinProperties();
        java.math.BigDecimal bigDecimal33 = null;
        schema31.setMinimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = schema31.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(schema35);
    }

    @Test
    public void test03506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03506");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03507");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema11.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema11.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema26.writeOnly((java.lang.Boolean) false);
        schema10.setAdditionalProperties(schema28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03508");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema10.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.discriminator(discriminator23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03509");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.lang.Integer int50 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        io.swagger.oas.annotations.info.License license54 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional55 = io.swagger.jaxrs2.OperationParser.getLicense(license54);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema51.example((java.lang.Object) licenseOptional55);
        java.lang.String str57 = annotatedElementSchema51.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = annotatedElementSchema51.getExternalDocs();
        annotatedElementSchema51.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema51.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema62.maxProperties((java.lang.Integer) 0);
        schema64.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = schema17.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema67.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(licenseOptional55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test03510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03510");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        java.lang.Integer int42 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema44.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info55 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional56 = io.swagger.jaxrs2.OperationParser.getInfo(info55);
        java.lang.Class<?> wildcardClass57 = infoOptional56.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray58 = new java.lang.reflect.AnnotatedElement[] { wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList59 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList59, annotatedElementArray58);
        schema54.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList59);
        schema41.addExtension("no description", (java.lang.Object) schema54);
        java.lang.String str63 = schema54.toString();
        io.swagger.oas.models.media.Schema schema64 = schema11.not(schema54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema11.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema66.setFormat("*/*");
        annotatedElementSchema66.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str76 = annotatedElementSchema66.toString();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema66.description("*/*");
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema66.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        schema11.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(infoOptional56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(annotatedElementArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str76, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test03511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03511");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03512");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal11);
        java.lang.String str13 = annotatedElementSchema0.getName();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.discriminator(discriminator16);
        schema17.setTitle("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.Contact contact24 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional25 = io.swagger.jaxrs2.OperationParser.getContact(contact24);
        annotatedElementSchema21.setExample((java.lang.Object) contactOptional25);
        annotatedElementSchema21.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.type("");
        java.lang.String str31 = schema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = schema30.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.minimum(bigDecimal46);
        java.lang.String str48 = schema47.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = annotatedElementSchema49.getWriteOnly();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema49.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str56 = annotatedElementSchema49.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        annotatedElementSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean61 = annotatedElementSchema57.getWriteOnly();
        boolean boolean62 = annotatedElementSchema49.equals((java.lang.Object) annotatedElementSchema57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        annotatedElementSchema49.setExternalDocs(externalDocumentation63);
        java.lang.String[] strArray66 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema70 = schema47.required((java.util.List<java.lang.String>) strList67);
        schema30.setExample((java.lang.Object) schema47);
        io.swagger.oas.models.media.Discriminator discriminator72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema30.discriminator(discriminator72);
        io.swagger.oas.models.media.Schema schema75 = schema73.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema77 = schema73.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test03513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03513");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = schema4.getNot();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test03514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03514");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema9.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03515");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        java.lang.Boolean boolean24 = annotatedElementSchema0.getNullable();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.minimum(bigDecimal25);
        schema26.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03516");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema10.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03517");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema30 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03518");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList35);
        schema27.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = schema27.get$ref();
        schema27.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema12.not(schema27);
        java.math.BigDecimal bigDecimal43 = null;
        schema12.setMaximum(bigDecimal43);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema12.xml(xML45);
        java.math.BigDecimal bigDecimal47 = null;
        schema46.setMultipleOf(bigDecimal47);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03519");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema38.maxItems((java.lang.Integer) 100);
        schema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        schema38.setExternalDocs(externalDocumentation43);
        java.lang.Integer int45 = schema38.getMaxProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test03520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03520");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = annotatedElementSchema0.getWriteOnly();
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser26 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema22.addExtension("no description", (java.lang.Object) operationParser26);
        annotatedElementSchema22.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str30 = annotatedElementSchema22.getTitle();
        java.lang.Integer int31 = annotatedElementSchema22.getMinProperties();
        annotatedElementSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema22.maximum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.Contact contact39 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional40 = io.swagger.jaxrs2.OperationParser.getContact(contact39);
        annotatedElementSchema36.setExample((java.lang.Object) contactOptional40);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.readOnly((java.lang.Boolean) false);
        java.lang.Object obj48 = schema47.getExample();
        java.lang.String str49 = schema47.getPattern();
        annotatedElementSchema22.setNot(schema47);
        io.swagger.oas.models.media.Schema schema51 = schema21.not(schema47);
        annotatedElementSchema0.setNot(schema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.minimum(bigDecimal62);
        io.swagger.oas.models.media.XML xML64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.xml(xML64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema66.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        annotatedElementSchema66.setRequired((java.util.List<java.lang.String>) strList72);
        java.lang.Integer int75 = annotatedElementSchema66.getMinItems();
        annotatedElementSchema66.setType("hi!");
        java.util.List<java.lang.String> strList78 = annotatedElementSchema66.getRequired();
        io.swagger.oas.models.media.Schema schema79 = schema63.required(strList78);
        io.swagger.oas.models.media.Schema schema80 = schema21.required(strList78);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(contactOptional40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "Optional.empty");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#/components/schemas/" + "'", str49, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test03521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03521");
        io.swagger.oas.models.media.Schema<java.lang.Class<?>> wildcardClassSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Class<?>>();
    }

    @Test
    public void test03522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03522");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        io.swagger.oas.models.media.Schema schema31 = schema25.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03523");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setExample((java.lang.Object) 10.0d);
        java.lang.String str14 = schema4.getPattern();
        java.lang.Boolean boolean15 = schema4.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        io.swagger.oas.annotations.info.Contact contact19 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional20 = io.swagger.jaxrs2.OperationParser.getContact(contact19);
        annotatedElementSchema16.setExample((java.lang.Object) contactOptional20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        java.lang.String str24 = annotatedElementSchema16.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser35 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema31.addExtension("no description", (java.lang.Object) operationParser35);
        annotatedElementSchema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        annotatedElementSchema31.setDiscriminator(discriminator39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.multipleOf(bigDecimal41);
        java.lang.Class<?> wildcardClass43 = schema42.getClass();
        schema30.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass43);
        schema30.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean48 = annotatedElementSchema47.getReadOnly();
        java.lang.Boolean boolean49 = annotatedElementSchema47.getNullable();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema47.setRequired((java.util.List<java.lang.String>) strList52);
        java.lang.String str55 = annotatedElementSchema47.getDescription();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator66 = annotatedElementSchema58.getDiscriminator();
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema47.not((io.swagger.oas.models.media.Schema) annotatedElementSchema58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = annotatedElementSchema58.getProperties();
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema58.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser75 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema71.addExtension("no description", (java.lang.Object) operationParser75);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema77.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        annotatedElementSchema77.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema71.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema58.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema88 = schema30.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema89 = schema4.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema91 = schema89.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
        org.junit.Assert.assertNotNull(contactOptional20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(discriminator66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test03524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03524");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.maxItems((java.lang.Integer) 1);
        schema16.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema7.not(schema16);
        java.lang.String str22 = schema21.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test03525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03525");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMinimum(bigDecimal19);
        schema18.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03526");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        java.math.BigDecimal bigDecimal47 = null;
        schema46.setMaximum(bigDecimal47);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03527");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        schema11.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema11.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03528");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        io.swagger.oas.annotations.info.Contact contact9 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional10 = io.swagger.jaxrs2.OperationParser.getContact(contact9);
        annotatedElementSchema6.setExample((java.lang.Object) contactOptional10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMultipleOf(bigDecimal16);
        java.lang.Boolean boolean18 = schema15.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema15.readOnly((java.lang.Boolean) false);
        schema15.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema23.setMultipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = annotatedElementSchema23.getEnum();
        annotatedElementSchema23.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = annotatedElementSchema31.getMinItems();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema23.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        annotatedElementSchema23.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema23.properties(strMap46);
        java.math.BigDecimal bigDecimal48 = annotatedElementSchema23.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.properties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema56.minLength((java.lang.Integer) 10);
        schema58.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator61 = schema58.getDiscriminator();
        schema58.setType("#/components/schemas/");
        java.lang.String str64 = schema58.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema66.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema66.setNullable((java.lang.Boolean) false);
        annotatedElementSchema66.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema66.minItems((java.lang.Integer) 0);
        java.lang.String str79 = schema78.getType();
        io.swagger.oas.models.media.XML xML80 = null;
        schema78.setXml(xML80);
        io.swagger.oas.models.media.Schema schema82 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema58.getProperties();
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema23.properties(strMap83);
        schema15.setProperties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema0.properties(strMap83);
        java.lang.Object obj87 = annotatedElementSchema0.getExample();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(contactOptional10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test03529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03529");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        schema13.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema13.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03530");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema4.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema4.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema17.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test03531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03531");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema33.required((java.util.List<java.lang.String>) strList38);
        annotatedElementSchema17.setDefault((java.lang.Object) strList38);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList38);
        java.lang.Boolean boolean43 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema11.not(schema44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str47 = annotatedElementSchema46.getPattern();
        annotatedElementSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = annotatedElementSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str53 = annotatedElementSchema46.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str55 = annotatedElementSchema54.getPattern();
        annotatedElementSchema54.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = annotatedElementSchema54.getWriteOnly();
        boolean boolean59 = annotatedElementSchema46.equals((java.lang.Object) annotatedElementSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        annotatedElementSchema46.setExternalDocs(externalDocumentation60);
        java.lang.String[] strArray63 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList64);
        schema45.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema10.required((java.util.List<java.lang.String>) strList64);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.maximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 0);
        java.lang.Object obj73 = schema70.getExample();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test03532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03532");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.multipleOf(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal6 = null;
        annotatedElementSchema5.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema5.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = annotatedElementSchema5.getEnum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.description("hi!");
        java.lang.Object obj13 = schema12.getExample();
        io.swagger.oas.models.media.Schema schema15 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("");
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema20.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema47 = schema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema4.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        java.lang.String str50 = schema48.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test03533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03533");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = schema31.getMaximum();
        java.lang.Class<?> wildcardClass35 = schema31.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test03534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03534");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = annotatedElementSchema16.getMinItems();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.minimum(bigDecimal26);
        annotatedElementSchema16.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema16.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean32 = annotatedElementSchema16.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator33 = annotatedElementSchema16.getDiscriminator();
        boolean boolean34 = schema15.equals((java.lang.Object) annotatedElementSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.maximum(bigDecimal35);
        schema36.setMaxItems((java.lang.Integer) 0);
        schema36.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03535");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema4.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema4.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema4.name("");
        schema3.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info28 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional29 = io.swagger.jaxrs2.OperationParser.getInfo(info28);
        java.lang.Class<?> wildcardClass30 = infoOptional29.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray31 = new java.lang.reflect.AnnotatedElement[] { wildcardClass30 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList32 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList32, annotatedElementArray31);
        schema27.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList32);
        io.swagger.oas.models.media.Schema schema36 = schema27.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        java.lang.String[] strArray49 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional50 = io.swagger.jaxrs2.OperationParser.getTags(strArray49);
        schema45.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional50);
        io.swagger.oas.models.media.Schema schema52 = schema36.example((java.lang.Object) schema45);
        annotatedElementSchema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser60 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema56.addExtension("no description", (java.lang.Object) operationParser60);
        annotatedElementSchema56.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema56.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema66.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema66.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema66.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal73 = schema72.getMultipleOf();
        io.swagger.oas.models.media.Schema schema75 = schema72.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean78 = annotatedElementSchema77.getReadOnly();
        java.lang.Boolean boolean79 = annotatedElementSchema77.getNullable();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        annotatedElementSchema77.setRequired((java.util.List<java.lang.String>) strList82);
        java.lang.String str85 = annotatedElementSchema77.getDescription();
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema77.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema77.multipleOf(bigDecimal88);
        io.swagger.oas.models.media.Schema schema91 = schema89.exclusiveMinimum((java.lang.Boolean) false);
        schema72.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema91);
        schema91.setPattern("");
        schema65.setNot(schema91);
        java.lang.Boolean boolean96 = schema65.getExclusiveMinimum();
        schema55.setDefault((java.lang.Object) boolean96);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(infoOptional29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(annotatedElementArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(tagSetOptional50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertEquals("'" + boolean96 + "' != '" + false + "'", boolean96, false);
    }

    @Test
    public void test03536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03536");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test03537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03537");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean34 = schema31.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema31.getProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test03538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03538");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = schema3.getFormat();
        java.lang.String str5 = schema3.getFormat();
        java.math.BigDecimal bigDecimal6 = schema3.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = schema3.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        schema12.setFormat("*/*");
        java.math.BigDecimal bigDecimal15 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        schema3.setExample((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema3.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean23 = schema22.getExclusiveMaximum();
        java.lang.String str24 = schema22.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test03539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03539");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML12 = null;
        schema11.setXml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        java.lang.Object obj22 = annotatedElementSchema14.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema14.getExtensions();
        boolean boolean24 = schema11.equals((java.lang.Object) annotatedElementSchema14);
        java.lang.Boolean boolean25 = annotatedElementSchema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema27.getDiscriminator();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
    }

    @Test
    public void test03540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03540");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = schema10.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        java.lang.String[] strArray46 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema16.required((java.util.List<java.lang.String>) strList47);
        schema13.setRequired((java.util.List<java.lang.String>) strList47);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03541");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        java.lang.Integer int23 = schema22.getMaxProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test03542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03542");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema36.name("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = schema48.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema48.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        schema55.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03543");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) 10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList26 = schema23.getEnum();
        java.lang.String str27 = schema23.getTitle();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElementList26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test03544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03544");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.lang.reflect.AnnotatedElement annotatedElement32 = annotatedElementSchema11.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray34 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional38 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray34, produces35, produces36, components37);
        javax.ws.rs.Produces produces39 = null;
        javax.ws.rs.Produces produces40 = null;
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional42 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray34, produces39, produces40, components41);
        javax.ws.rs.Produces produces43 = null;
        javax.ws.rs.Produces produces44 = null;
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional46 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray34, produces43, produces44, components45);
        annotatedElementSchema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces43);
        java.lang.Integer int48 = annotatedElementSchema11.getMaxProperties();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema11);
        io.swagger.oas.models.media.XML xML50 = null;
        annotatedElementSchema11.setXml(xML50);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElement32);
        org.junit.Assert.assertNotNull(apiResponseArray34);
        org.junit.Assert.assertNotNull(apiResponsesOptional38);
        org.junit.Assert.assertNotNull(apiResponsesOptional42);
        org.junit.Assert.assertNotNull(apiResponsesOptional46);
        org.junit.Assert.assertNull(int48);
    }

    @Test
    public void test03545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03545");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03546");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = annotatedElementSchema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema7.getDiscriminator();
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int21 = schema20.getMinLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03547");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = schema6.getMaximum();
        java.lang.Boolean boolean11 = schema6.getReadOnly();
        java.lang.Class<?> wildcardClass12 = schema6.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03548");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = annotatedElementSchema11.getExternalDocs();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
    }

    @Test
    public void test03549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03549");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList35 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str38 = annotatedElementSchema0.getType();
        java.lang.String[] strArray44 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.description("hi!");
        io.swagger.oas.models.media.Schema schema51 = schema49.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema52.minProperties((java.lang.Integer) 10);
        java.lang.String str60 = annotatedElementSchema52.getName();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema52.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj63 = annotatedElementSchema52.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema52.properties(strMap64);
        java.math.BigDecimal bigDecimal66 = null;
        schema65.setMultipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.String str70 = annotatedElementSchema68.get$ref();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema68.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal75 = null;
        annotatedElementSchema74.setMultipleOf(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema74.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList79 = annotatedElementSchema74.getEnum();
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema74.description("hi!");
        java.lang.Object obj82 = schema81.getExample();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema68.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        schema65.setExample((java.lang.Object) schema81);
        io.swagger.oas.models.media.Schema schema86 = schema65.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema49.setNot(schema86);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(annotatedElementList79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test03550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03550");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema22.getAdditionalProperties();
        schema22.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test03551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03551");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.minProperties((java.lang.Integer) 10);
        java.lang.String str13 = annotatedElementSchema5.getName();
        annotatedElementSchema5.setMinItems((java.lang.Integer) 0);
        schema2.setExample((java.lang.Object) annotatedElementSchema5);
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema2.getNullable();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test03552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03552");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        java.math.BigDecimal bigDecimal15 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str18 = schema8.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int29 = schema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema8.example((java.lang.Object) false);
        java.math.BigDecimal bigDecimal33 = null;
        schema8.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema8.setExternalDocs(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03553");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.util.List<java.lang.String> strList37 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = schema15.maxProperties((java.lang.Integer) (-1));
        java.lang.Object obj42 = schema41.getExample();
        java.lang.Boolean boolean43 = schema41.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test03554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03554");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema31.addProperties("no description", schema41);
        schema4.setAdditionalProperties(schema45);
        java.lang.Boolean boolean47 = schema45.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        io.swagger.oas.annotations.info.Contact contact52 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional53 = io.swagger.jaxrs2.OperationParser.getContact(contact52);
        annotatedElementSchema49.setExample((java.lang.Object) contactOptional53);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        schema56.setDescription("");
        schema56.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema56.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema56.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int71 = annotatedElementSchema66.getMinProperties();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema66.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str77 = annotatedElementSchema76.getPattern();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema76.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema80.setPattern("");
        annotatedElementSchema80.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = annotatedElementSchema80.getExtensions();
        schema79.setExtensions(strMap86);
        annotatedElementSchema66.setExtensions(strMap86);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema66.minimum(bigDecimal89);
        boolean boolean91 = schema56.equals((java.lang.Object) bigDecimal89);
        java.lang.String str92 = schema56.getPattern();
        schema56.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema96 = schema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema97 = schema45.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema96);
        java.lang.String str98 = schema45.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(contactOptional53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "#/components/schemas/" + "'", str98, "#/components/schemas/");
    }

    @Test
    public void test03555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03555");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema22.getNot();
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema22.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test03556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03556");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        annotatedElementSchema9.setPattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.License license24 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional25 = io.swagger.jaxrs2.OperationParser.getLicense(license24);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema21.example((java.lang.Object) licenseOptional25);
        java.lang.String str27 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = annotatedElementSchema21.getExternalDocs();
        annotatedElementSchema21.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        annotatedElementSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = annotatedElementSchema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema33.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.properties(strMap43);
        java.util.List<java.lang.String> strList45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.required(strList45);
        io.swagger.oas.models.media.Schema schema47 = schema46.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema49.pattern("hi!");
        schema58.setMinProperties((java.lang.Integer) 10);
        schema46.addExtension("*/*", (java.lang.Object) schema58);
        schema32.setDefault((java.lang.Object) schema58);
        io.swagger.oas.models.media.XML xML63 = null;
        schema32.setXml(xML63);
        java.math.BigDecimal bigDecimal65 = null;
        schema32.setMultipleOf(bigDecimal65);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema32.getDiscriminator();
        annotatedElementSchema9.setExample((java.lang.Object) schema32);
        java.lang.Class<?> wildcardClass69 = annotatedElementSchema9.getClass();
        schema8.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass69);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(licenseOptional25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test03557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03557");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema12.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03558");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        schema22.setDescription("hi!");
        schema22.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03559");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.writeOnly((java.lang.Boolean) false);
        schema16.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03560");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema21.minItems((java.lang.Integer) 0);
        annotatedElementSchema21.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        annotatedElementSchema21.setDiscriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test03561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03561");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = annotatedElementSchema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.example((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean40 = annotatedElementSchema39.getReadOnly();
        java.lang.Boolean boolean41 = annotatedElementSchema39.getNullable();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        annotatedElementSchema39.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.String str47 = annotatedElementSchema39.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = annotatedElementSchema48.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray59 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        io.swagger.oas.models.media.Schema schema62 = schema55.required((java.util.List<java.lang.String>) strList60);
        annotatedElementSchema39.setDefault((java.lang.Object) strList60);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema33.required((java.util.List<java.lang.String>) strList60);
        schema32.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema66 = schema9.required((java.util.List<java.lang.String>) strList60);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema9.maximum(bigDecimal67);
        java.util.List<java.lang.String> strList69 = null;
        schema9.setRequired(strList69);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03562");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.License license8 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional9 = io.swagger.jaxrs2.OperationParser.getLicense(license8);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema5.example((java.lang.Object) licenseOptional9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        annotatedElementSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema11.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema11.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.properties(strMap21);
        java.lang.String str23 = schema22.getName();
        io.swagger.oas.annotations.info.Info info24 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional25 = io.swagger.jaxrs2.OperationParser.getInfo(info24);
        java.lang.Class<?> wildcardClass26 = infoOptional25.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = annotatedElementSchema27.getMinItems();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.minimum(bigDecimal37);
        annotatedElementSchema27.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass41 = annotatedElementSchema27.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema49.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass52 = schema49.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray53 = new java.lang.reflect.AnnotatedElement[] { wildcardClass26, wildcardClass41, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList54 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList54, annotatedElementArray53);
        schema22.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList54);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList54);
        annotatedElementSchema0.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList54);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(licenseOptional9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(infoOptional25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotatedElementArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03563");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.lang.String str25 = schema9.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema9.getDiscriminator();
        schema9.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.properties(strMap44);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        annotatedElementSchema29.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal50 = null;
        annotatedElementSchema49.setMultipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema49.nullable((java.lang.Boolean) false);
        annotatedElementSchema49.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema49.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str59 = annotatedElementSchema58.getPattern();
        annotatedElementSchema58.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean62 = annotatedElementSchema58.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema58.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema58.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema58.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info69 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional70 = io.swagger.jaxrs2.OperationParser.getInfo(info69);
        java.lang.Class<?> wildcardClass71 = infoOptional70.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray72 = new java.lang.reflect.AnnotatedElement[] { wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList73 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList73, annotatedElementArray72);
        schema68.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList73);
        annotatedElementSchema49.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList73);
        annotatedElementSchema29.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList73);
        schema9.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList73);
        io.swagger.oas.models.media.Schema schema80 = schema9.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(infoOptional70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(annotatedElementArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test03564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03564");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = annotatedElementSchema29.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        boolean boolean42 = annotatedElementSchema29.equals((java.lang.Object) annotatedElementSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        annotatedElementSchema29.setExternalDocs(externalDocumentation43);
        java.lang.String[] strArray46 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema28.required((java.util.List<java.lang.String>) strList47);
        schema8.setNot(schema28);
        schema28.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03565");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.discriminator(discriminator25);
        io.swagger.oas.models.media.Schema schema27 = schema15.not(schema26);
        java.math.BigDecimal bigDecimal28 = schema15.getMaximum();
        schema15.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test03566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03566");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.set$ref("*/*");
        java.lang.Integer int42 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema43 = schema4.additionalProperties(schema38);
        java.lang.String str44 = schema38.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test03567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03567");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int18 = annotatedElementSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema13.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema23.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = annotatedElementSchema27.getExtensions();
        schema26.setExtensions(strMap33);
        annotatedElementSchema13.setExtensions(strMap33);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema13.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema45.minLength((java.lang.Integer) 10);
        schema45.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema45.addProperties("default", schema51);
        schema52.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema55.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema55.setNullable((java.lang.Boolean) false);
        annotatedElementSchema55.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema55.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema55.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema55.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema55.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema74.setPattern("");
        annotatedElementSchema74.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema74.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema74.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema74.required((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema55.required((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema89 = schema52.required((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema90 = schema37.required((java.util.List<java.lang.String>) strList85);
        schema12.setRequired((java.util.List<java.lang.String>) strList85);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test03568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03568");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int7 = schema4.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03569");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema19.getExtensions();
        schema19.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test03570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03570");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator21 = annotatedElementSchema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser26 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema22.addExtension("no description", (java.lang.Object) operationParser26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema28.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema22.required((java.util.List<java.lang.String>) strList34);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.maximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema13.not(schema37);
        io.swagger.oas.models.media.Schema schema42 = schema37.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema37.minLength((java.lang.Integer) 100);
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema37);
        java.lang.Integer int46 = schema37.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test03571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03571");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.lang.Boolean boolean27 = annotatedElementSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.example((java.lang.Object) boolean27);
        java.lang.String str29 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03572");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.minItems((java.lang.Integer) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        schema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = schema19.getDeprecated();
        io.swagger.oas.models.media.Schema schema25 = schema19.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03573");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal20 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        java.lang.String str56 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList58 = schema57.getEnum();
        io.swagger.oas.models.media.Schema schema60 = schema57.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema61.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        annotatedElementSchema61.setRequired((java.util.List<java.lang.String>) strList67);
        java.lang.Integer int70 = annotatedElementSchema61.getMinItems();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema61.minimum(bigDecimal71);
        annotatedElementSchema61.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator75 = annotatedElementSchema61.getDiscriminator();
        java.math.BigDecimal bigDecimal76 = annotatedElementSchema61.getMultipleOf();
        annotatedElementSchema61.setNullable((java.lang.Boolean) true);
        java.lang.String str79 = annotatedElementSchema61.getTitle();
        java.util.List<java.lang.String> strList80 = annotatedElementSchema61.getRequired();
        schema57.setRequired(strList80);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(annotatedElementList58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator75);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strList80);
    }

    @Test
    public void test03574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03574");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.type("");
        java.lang.Integer int47 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03575");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema10.setDiscriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = schema10.getMaximum();
        java.lang.Integer int18 = schema10.getMaxProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test03576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03576");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        schema16.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema16.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        java.lang.String str22 = schema16.getName();
        io.swagger.oas.models.media.Schema schema24 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.additionalProperties(schema26);
        java.lang.Boolean boolean28 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema0.xml(xML29);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03577");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema12.getAdditionalProperties();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03578");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema15.toString();
        io.swagger.oas.models.media.Schema schema18 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str19 = schema15.toString();
        schema15.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str19, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03579");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.format("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.xml(xML17);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03580");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = schema3.getFormat();
        java.lang.String str5 = schema3.getFormat();
        java.math.BigDecimal bigDecimal6 = schema3.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = schema3.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        schema12.setFormat("*/*");
        java.math.BigDecimal bigDecimal15 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        schema3.setExample((java.lang.Object) schema19);
        schema19.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03581");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        schema4.setTitle("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        schema4.setProperties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema4.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03582");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema14.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.xml(xML18);
        io.swagger.oas.models.media.Schema schema20 = schema12.example((java.lang.Object) schema19);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03583");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        schema41.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.addProperties("hi!", schema45);
        java.lang.String[] strArray53 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional54 = io.swagger.jaxrs2.OperationParser.getTags(strArray53);
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) strArray53);
        schema55.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema58.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int67 = annotatedElementSchema58.getMinItems();
        annotatedElementSchema58.setType("hi!");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema58.getRequired();
        io.swagger.oas.models.media.Schema schema71 = schema55.required(strList70);
        boolean boolean72 = schema32.equals((java.lang.Object) schema71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = schema71.getProperties();
        java.lang.Boolean boolean74 = schema71.getDeprecated();
        java.lang.String str75 = schema71.getFormat();
        java.lang.Integer int76 = schema71.getMinLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(tagSetOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertEquals("'" + boolean74 + "' != '" + false + "'", boolean74, false);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test03584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03584");
        io.swagger.oas.models.media.Schema<java.util.Map<java.lang.String, java.lang.String>> strMapSchema0 = new io.swagger.oas.models.media.Schema<java.util.Map<java.lang.String, java.lang.String>>();
    }

    @Test
    public void test03585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03585");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass18 = schema15.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test03586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03586");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema37.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema37.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema37.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema37.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema37.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
    }

    @Test
    public void test03587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03587");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema8.exclusiveMaximum((java.lang.Boolean) false);
        schema19.setName("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03588");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str43 = annotatedElementSchema36.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        boolean boolean49 = annotatedElementSchema36.equals((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema36.setExternalDocs(externalDocumentation50);
        java.lang.String[] strArray53 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = schema35.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = schema23.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema60 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema23.nullable((java.lang.Boolean) false);
        java.lang.String str63 = schema62.getTitle();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test03589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03589");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema9.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03590");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema9.getExclusiveMaximum();
        schema9.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test03591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03591");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.description("#/components/schemas/");
        java.math.BigDecimal bigDecimal51 = annotatedElementSchema0.getMinimum();
        java.math.BigDecimal bigDecimal52 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(bigDecimal52);
    }

    @Test
    public void test03592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03592");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int5 = schema4.getMinLength();
        schema4.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = schema4.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal10 = schema4.getMaximum();
        java.lang.Boolean boolean11 = schema4.getWriteOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test03593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03593");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        java.lang.String str12 = schema9.getTitle();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test03594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03594");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema schema11 = schema4.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMinimum(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.$ref("*/*");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema23.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema23.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = annotatedElementSchema39.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema49.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = annotatedElementSchema53.getExtensions();
        schema52.setExtensions(strMap59);
        annotatedElementSchema39.setExtensions(strMap59);
        schema38.setExtensions(strMap59);
        schema21.setExtensions(strMap59);
        schema11.setExtensions(strMap59);
        java.lang.String str65 = schema11.getTitle();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test03595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03595");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        schema4.setDeprecated((java.lang.Boolean) true);
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema4.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema15.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03596");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        annotatedElementSchema17.setDiscriminator(discriminator62);
        annotatedElementSchema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema17.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test03597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03597");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema schema23 = schema7.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean24 = schema7.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
    }

    @Test
    public void test03598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03598");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.addProperties("default", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema17.setNullable((java.lang.Boolean) false);
        annotatedElementSchema17.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema36.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema17.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema51 = schema14.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema53 = schema51.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema54.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList59 = annotatedElementSchema54.getEnum();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema54.description("hi!");
        java.lang.Object obj62 = schema61.getExample();
        io.swagger.oas.models.media.Schema schema64 = schema61.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema61.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema51.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser72 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema68.addExtension("no description", (java.lang.Object) operationParser72);
        annotatedElementSchema68.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) true);
        schema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema68);
        java.math.BigDecimal bigDecimal79 = schema51.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema51.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(annotatedElementList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test03599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03599");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema38.xml(xML48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.externalDocs(externalDocumentation50);
        java.math.BigDecimal bigDecimal52 = schema49.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
    }

    @Test
    public void test03600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03600");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        annotatedElementSchema10.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean41 = annotatedElementSchema10.equals((java.lang.Object) true);
        java.lang.Boolean boolean42 = annotatedElementSchema10.getWriteOnly();
        annotatedElementSchema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema10.maxLength((java.lang.Integer) 100);
        schema7.setDefault((java.lang.Object) schema46);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03601");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03602");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema11.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean22 = schema21.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03603");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        schema4.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema4.multipleOf(bigDecimal9);
        java.lang.String str11 = schema10.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03604");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser12 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema8.addExtension("no description", (java.lang.Object) operationParser12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.properties(strMap14);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.lang.Boolean boolean17 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test03605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03605");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = annotatedElementSchema19.getWriteOnly();
        java.lang.String str32 = annotatedElementSchema19.getType();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.discriminator(discriminator33);
        schema7.setNot(schema34);
        schema34.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03606");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxProperties();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        annotatedElementSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int13 = annotatedElementSchema8.getMinProperties();
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema8.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03607");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema24.properties(strMap78);
        java.lang.String str80 = schema79.get$ref();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "#/components/schemas/default" + "'", str80, "#/components/schemas/default");
    }

    @Test
    public void test03608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03608");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal11);
        java.lang.String str13 = annotatedElementSchema0.getName();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.discriminator(discriminator16);
        schema17.setTitle("");
        java.lang.Boolean boolean20 = schema17.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test03609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03609");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean12 = schema4.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03610");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        java.lang.String str9 = schema4.getTitle();
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML14 = null;
        schema4.setXml(xML14);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03611");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.maxLength((java.lang.Integer) (-1));
        java.lang.String str13 = schema4.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema4.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = schema4.getMaximum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#/components/schemas/" + "'", str13, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test03612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03612");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.maximum(bigDecimal21);
        java.lang.Boolean boolean23 = schema22.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test03613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03613");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema10.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.Integer int23 = annotatedElementSchema14.getMinItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.minimum(bigDecimal24);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList26 = schema25.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema25.maxLength((java.lang.Integer) (-1));
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema schema31 = schema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema33.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal38 = annotatedElementSchema33.getMultipleOf();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema41.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = annotatedElementSchema45.getExtensions();
        schema44.setExtensions(strMap51);
        schema40.setExtensions(strMap51);
        io.swagger.oas.models.media.XML xML54 = schema40.getXml();
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) xML54);
        io.swagger.oas.models.media.Schema schema57 = schema31.addRequiredItem("hi!");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElementList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(xML54);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test03614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03614");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.String str20 = annotatedElementSchema18.get$ref();
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema18.setXml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = annotatedElementSchema18.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.properties(strMap24);
        schema16.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = annotatedElementSchema18.getExternalDocs();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation27);
    }

    @Test
    public void test03615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03615");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.String str51 = annotatedElementSchema49.get$ref();
        io.swagger.oas.models.media.XML xML52 = null;
        annotatedElementSchema49.setXml(xML52);
        java.lang.Boolean boolean54 = annotatedElementSchema49.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal57 = null;
        annotatedElementSchema56.setMultipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema56.nullable((java.lang.Boolean) false);
        annotatedElementSchema56.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema49.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema56);
        boolean boolean64 = schema45.equals((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.media.XML xML65 = null;
        schema45.setXml(xML65);
        schema45.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema45.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03616");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int15 = schema14.getMinItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test03617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03617");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass15 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test03618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03618");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        java.math.BigDecimal bigDecimal44 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema47.setExternalDocs(externalDocumentation50);
        java.util.List<java.lang.String> strList52 = null;
        schema47.setRequired(strList52);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03619");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema17.multipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.properties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = schema70.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str74 = annotatedElementSchema73.getPattern();
        annotatedElementSchema73.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean77 = annotatedElementSchema73.getWriteOnly();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema73.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str81 = annotatedElementSchema80.getPattern();
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema73.not((io.swagger.oas.models.media.Schema) annotatedElementSchema80);
        io.swagger.oas.models.media.Schema schema83 = schema72.not(schema82);
        schema83.setPattern("");
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema17.additionalProperties(schema83);
        java.lang.Integer int87 = schema83.getMaxLength();
        java.lang.Integer int88 = schema83.getMaxProperties();
        io.swagger.oas.models.media.Schema schema89 = schema9.not(schema83);
        io.swagger.oas.models.media.Schema schema91 = schema89.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test03620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03620");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = schema40.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema40.externalDocs(externalDocumentation51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.maximum(bigDecimal53);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03621");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema12.readOnly((java.lang.Boolean) true);
        java.lang.Object obj19 = schema12.getExample();
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test03622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03622");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.externalDocs(externalDocumentation29);
        java.lang.Integer int31 = schema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema33 = schema28.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03623");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = annotatedElementSchema0.getEnum();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.multipleOf(bigDecimal13);
        java.lang.Integer int15 = annotatedElementSchema0.getMinProperties();
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test03624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03624");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema7.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema7.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = schema7.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test03625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03625");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = schema23.getEnum();
        java.lang.Boolean boolean29 = schema23.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test03626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03626");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces17, produces18, components19);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional20);
    }

    @Test
    public void test03627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03627");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.deprecated((java.lang.Boolean) true);
        java.lang.Integer int18 = schema17.getMaxLength();
        annotatedElementSchema0.setNot(schema17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = annotatedElementSchema0.getProperties();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test03628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03628");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        schema3.setType("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.String str9 = annotatedElementSchema7.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        annotatedElementSchema7.setXml(xML10);
        io.swagger.oas.models.media.XML xML12 = annotatedElementSchema7.getXml();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minLength((java.lang.Integer) 0);
        schema3.setAdditionalProperties(schema16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03629");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 1);
        java.lang.String str19 = schema18.getFormat();
        java.lang.Boolean boolean20 = schema18.getNullable();
        io.swagger.oas.models.media.Schema schema21 = schema18.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test03630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03630");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema7.setExternalDocs(externalDocumentation14);
        java.lang.String str16 = schema7.toString();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03631");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.XML xML62 = null;
        annotatedElementSchema17.setXml(xML62);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema17.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList66 = annotatedElementSchema17.getEnum();
        annotatedElementSchema17.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(annotatedElementList66);
    }

    @Test
    public void test03632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03632");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        java.lang.String str24 = schema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        java.math.BigDecimal bigDecimal38 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser43 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema39.addExtension("no description", (java.lang.Object) operationParser43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema45.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        annotatedElementSchema45.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema39.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.xml(xML55);
        io.swagger.oas.models.media.Schema schema57 = schema23.example((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema58.pattern("hi!");
        schema67.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = schema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema72 = schema67.minProperties((java.lang.Integer) 0);
        boolean boolean73 = schema57.equals((java.lang.Object) schema67);
        io.swagger.oas.models.media.Schema schema75 = schema57.minProperties((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass76 = schema57.getClass();
        schema7.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass76);
        java.lang.Boolean boolean78 = schema7.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNull(boolean78);
    }

    @Test
    public void test03633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03633");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        java.math.BigDecimal bigDecimal15 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema17.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema17.xml(xML21);
        io.swagger.oas.models.media.Schema schema23 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.externalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = annotatedElementSchema17.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        java.lang.Integer int58 = annotatedElementSchema48.getMinItems();
        java.lang.Boolean boolean59 = annotatedElementSchema48.getDeprecated();
        annotatedElementSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema48.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema17.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        annotatedElementSchema48.setDiscriminator(discriminator65);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test03634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03634");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema29.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMinProperties();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema41.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.$ref("*/*");
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema41.minimum(bigDecimal53);
        java.lang.String str55 = schema54.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str57 = annotatedElementSchema56.getPattern();
        annotatedElementSchema56.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean60 = annotatedElementSchema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str63 = annotatedElementSchema56.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str65 = annotatedElementSchema64.getPattern();
        annotatedElementSchema64.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean68 = annotatedElementSchema64.getWriteOnly();
        boolean boolean69 = annotatedElementSchema56.equals((java.lang.Object) annotatedElementSchema64);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        annotatedElementSchema56.setExternalDocs(externalDocumentation70);
        java.lang.String[] strArray73 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        annotatedElementSchema56.setRequired((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema77 = schema54.required((java.util.List<java.lang.String>) strList74);
        annotatedElementSchema29.setExample((java.lang.Object) strList74);
        java.lang.Class<?> wildcardClass79 = annotatedElementSchema29.getClass();
        schema16.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test03635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03635");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray23 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces24 = null;
        javax.ws.rs.Produces produces25 = null;
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional27 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces24, produces25, components26);
        javax.ws.rs.Produces produces28 = null;
        javax.ws.rs.Produces produces29 = null;
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional31 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces28, produces29, components30);
        javax.ws.rs.Produces produces32 = null;
        javax.ws.rs.Produces produces33 = null;
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional35 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces32, produces33, components34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces32);
        java.lang.Integer int37 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.XML xML38 = null;
        annotatedElementSchema0.setXml(xML38);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMaximum((java.lang.Boolean) true);
        schema45.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(apiResponseArray23);
        org.junit.Assert.assertNotNull(apiResponsesOptional27);
        org.junit.Assert.assertNotNull(apiResponsesOptional31);
        org.junit.Assert.assertNotNull(apiResponsesOptional35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03636");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        io.swagger.oas.annotations.info.Contact contact11 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional12 = io.swagger.jaxrs2.OperationParser.getContact(contact11);
        annotatedElementSchema8.setExample((java.lang.Object) contactOptional12);
        annotatedElementSchema8.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema8.nullable((java.lang.Boolean) false);
        schema7.setDefault((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema8.discriminator(discriminator19);
        schema20.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(contactOptional12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03637");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal29 = null;
        schema28.setMultipleOf(bigDecimal29);
        java.lang.String[] strArray32 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional33 = io.swagger.jaxrs2.OperationParser.getTags(strArray32);
        schema28.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional33);
        io.swagger.oas.models.media.Schema schema35 = schema19.example((java.lang.Object) schema28);
        schema28.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(tagSetOptional33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test03638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03638");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        io.swagger.oas.models.media.Schema schema9 = schema4.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.String str12 = annotatedElementSchema10.get$ref();
        io.swagger.oas.models.media.XML xML13 = null;
        annotatedElementSchema10.setXml(xML13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = annotatedElementSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.format("no description");
        annotatedElementSchema10.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        annotatedElementSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = annotatedElementSchema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema24.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema33.setTitle("#/components/schemas/");
        java.lang.Integer int36 = schema33.getMinLength();
        java.lang.Integer int37 = schema33.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.Contact contact41 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional42 = io.swagger.jaxrs2.OperationParser.getContact(contact41);
        annotatedElementSchema38.setExample((java.lang.Object) contactOptional42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema38.setMinProperties((java.lang.Integer) 100);
        schema33.setExample((java.lang.Object) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema10.not(schema52);
        schema9.setAdditionalProperties(schema53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema55.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema55.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = schema63.exclusiveMinimum((java.lang.Boolean) true);
        schema9.setNot(schema65);
        java.math.BigDecimal bigDecimal67 = schema9.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(contactOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal67);
    }

    @Test
    public void test03639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03639");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        schema39.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.discriminator(discriminator42);
        java.util.List<java.lang.String> strList44 = schema39.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test03640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03640");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.set$ref("");
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03641");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean14 = schema13.getDeprecated();
        java.lang.Boolean boolean15 = schema13.getDeprecated();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test03642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03642");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema7.pattern("");
        java.lang.Integer int16 = annotatedElementSchema7.getMaxProperties();
        annotatedElementSchema7.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03643");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) true);
        schema15.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03644");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        annotatedElementSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = annotatedElementSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema35 = schema24.not(schema34);
        schema24.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema24.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema41.addExtension("no description", (java.lang.Object) operationParser45);
        annotatedElementSchema41.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        annotatedElementSchema41.setDiscriminator(discriminator49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.multipleOf(bigDecimal51);
        schema52.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.minProperties((java.lang.Integer) 10);
        java.lang.String str84 = annotatedElementSchema76.getName();
        annotatedElementSchema55.setDefault((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.media.Schema schema86 = null;
        annotatedElementSchema55.setNot(schema86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema55.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList90 = annotatedElementSchema55.getRequired();
        schema52.setRequired(strList90);
        io.swagger.oas.models.media.Schema schema92 = schema39.required(strList90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema39.properties(strMap93);
        java.lang.Class<?> wildcardClass95 = schema39.getClass();
        schema9.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass95);
        io.swagger.oas.models.media.Schema schema98 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass99 = schema98.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test03645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03645");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setMinProperties((java.lang.Integer) 0);
        java.lang.Integer int30 = schema27.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.externalDocs(externalDocumentation31);
        schema27.setMinItems((java.lang.Integer) 100);
        schema27.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03646");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        java.lang.String str10 = schema7.getDescription();
        schema7.setMaxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean13 = schema7.getDeprecated();
        java.lang.Integer int14 = schema7.getMaxLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03647");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maximum(bigDecimal14);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03648");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMaximum(bigDecimal10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03649");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        java.lang.String str17 = schema16.toString();
        schema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = schema28.minLength((java.lang.Integer) 10);
        java.lang.String str31 = schema30.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean34 = annotatedElementSchema33.getReadOnly();
        java.lang.Boolean boolean35 = annotatedElementSchema33.getNullable();
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        annotatedElementSchema33.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.String str41 = annotatedElementSchema33.getDescription();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema33.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema30.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        java.lang.String str45 = annotatedElementSchema33.get$ref();
        java.lang.Integer int46 = annotatedElementSchema33.getMinLength();
        io.swagger.oas.models.media.Schema schema47 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean60 = annotatedElementSchema59.getReadOnly();
        java.lang.Boolean boolean61 = annotatedElementSchema59.getNullable();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema59.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.String str67 = annotatedElementSchema59.getDescription();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema59.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        annotatedElementSchema70.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema70.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator78 = annotatedElementSchema70.getDiscriminator();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema59.not((io.swagger.oas.models.media.Schema) annotatedElementSchema70);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema70.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean82 = schema81.getReadOnly();
        java.math.BigDecimal bigDecimal83 = null;
        schema81.setMaximum(bigDecimal83);
        schema56.setDefault((java.lang.Object) schema81);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema56.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema88);
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema33.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema56);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(discriminator78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test03650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03650");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        schema41.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.addProperties("hi!", schema45);
        java.lang.String[] strArray53 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional54 = io.swagger.jaxrs2.OperationParser.getTags(strArray53);
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) strArray53);
        schema55.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema58.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int67 = annotatedElementSchema58.getMinItems();
        annotatedElementSchema58.setType("hi!");
        java.util.List<java.lang.String> strList70 = annotatedElementSchema58.getRequired();
        io.swagger.oas.models.media.Schema schema71 = schema55.required(strList70);
        boolean boolean72 = schema32.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema schema74 = schema32.minItems((java.lang.Integer) 100);
        schema74.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(tagSetOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03651");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.properties(strMap23);
        io.swagger.oas.models.media.Schema schema26 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = annotatedElementSchema29.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        boolean boolean42 = annotatedElementSchema29.equals((java.lang.Object) annotatedElementSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        annotatedElementSchema29.setExternalDocs(externalDocumentation43);
        java.lang.String[] strArray46 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema28.required((java.util.List<java.lang.String>) strList47);
        schema8.setNot(schema28);
        io.swagger.oas.models.media.Schema schema52 = schema28.getAdditionalProperties();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema28.minimum(bigDecimal53);
        java.lang.Boolean boolean55 = schema54.getWriteOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test03652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03652");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.minimum(bigDecimal31);
        schema32.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03653");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        java.lang.Integer int17 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        annotatedElementSchema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.nullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.properties(strMap47);
        java.lang.Object obj49 = annotatedElementSchema41.getExample();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.format("#/components/schemas/");
        java.lang.Class<?> wildcardClass52 = annotatedElementSchema41.getClass();
        schema39.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass52);
        java.lang.Integer int54 = schema39.getMinItems();
        schema39.set$ref("no description");
        java.lang.Boolean boolean57 = schema39.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        annotatedElementSchema58.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.minProperties((java.lang.Integer) 10);
        java.lang.String str66 = annotatedElementSchema58.getName();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema58.uniqueItems((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = annotatedElementSchema58.getProperties();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema58.title("");
        schema71.setWriteOnly((java.lang.Boolean) true);
        schema39.setDefault((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test03654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03654");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str15 = schema14.getTitle();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03655");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setPattern("*/*");
        java.lang.Integer int12 = annotatedElementSchema0.getMinItems();
        java.lang.String str13 = annotatedElementSchema0.get$ref();
        java.lang.Boolean boolean14 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test03656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03656");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        schema18.setDescription("#/components/schemas/");
        schema18.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.example((java.lang.Object) schema18);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03657");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        java.lang.reflect.AnnotatedElement annotatedElement29 = annotatedElementSchema8.getDefault();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema8.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str51 = annotatedElementSchema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        boolean boolean57 = annotatedElementSchema44.equals((java.lang.Object) annotatedElementSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        annotatedElementSchema44.setExternalDocs(externalDocumentation58);
        java.lang.String[] strArray61 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema31.additionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema67 = schema4.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema4.additionalProperties(schema68);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElement29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test03658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03658");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema34.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03659");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.description("#/components/schemas/");
        java.math.BigDecimal bigDecimal51 = annotatedElementSchema0.getMinimum();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
    }

    @Test
    public void test03660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03660");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setUniqueItems((java.lang.Boolean) true);
        schema12.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03661");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema14.setNullable((java.lang.Boolean) false);
        annotatedElementSchema14.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema14.minItems((java.lang.Integer) 0);
        schema26.setType("");
        java.math.BigDecimal bigDecimal29 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        annotatedElementSchema30.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = annotatedElementSchema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema30.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema30.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str43 = annotatedElementSchema42.getPattern();
        annotatedElementSchema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean46 = annotatedElementSchema42.getWriteOnly();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema42.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema42.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema42.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema42.properties(strMap52);
        java.lang.String str54 = schema53.getName();
        io.swagger.oas.annotations.info.Info info55 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional56 = io.swagger.jaxrs2.OperationParser.getInfo(info55);
        java.lang.Class<?> wildcardClass57 = infoOptional56.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema58.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema58.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int67 = annotatedElementSchema58.getMinItems();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema58.minimum(bigDecimal68);
        annotatedElementSchema58.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass72 = annotatedElementSchema58.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema73.properties(strMap79);
        io.swagger.oas.models.media.Schema schema82 = schema80.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass83 = schema80.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray84 = new java.lang.reflect.AnnotatedElement[] { wildcardClass57, wildcardClass72, wildcardClass83 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList85 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList85, annotatedElementArray84);
        schema53.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList85);
        schema41.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList85);
        schema26.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList85);
        schema11.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList85);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(infoOptional56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(annotatedElementArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test03662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03662");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = schema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str14 = annotatedElementSchema13.getPattern();
        annotatedElementSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = annotatedElementSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str20 = annotatedElementSchema13.getFormat();
        annotatedElementSchema13.setType("no description");
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema28.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Integer int37 = annotatedElementSchema28.getMinItems();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.minimum(bigDecimal38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema28.getExtensions();
        annotatedElementSchema28.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema47 = schema45.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = annotatedElementSchema48.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.xml(xML56);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema58.setPattern("");
        io.swagger.oas.annotations.info.Contact contact61 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional62 = io.swagger.jaxrs2.OperationParser.getContact(contact61);
        annotatedElementSchema58.setExample((java.lang.Object) contactOptional62);
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema58.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean66 = schema65.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema68 = schema65.format("no description");
        io.swagger.oas.models.media.Schema schema70 = schema68.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema57.setNot(schema68);
        java.lang.Boolean boolean72 = schema68.getReadOnly();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList73 = schema68.getEnum();
        schema47.setAdditionalProperties(schema68);
        io.swagger.oas.models.media.Schema schema75 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(contactOptional62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
        org.junit.Assert.assertNull(annotatedElementList73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03663");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = schema33.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        schema33.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = schema33.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMinimum(bigDecimal39);
        schema38.setReadOnly((java.lang.Boolean) false);
        schema38.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal47 = null;
        annotatedElementSchema46.setMultipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        schema50.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator53 = schema50.getDiscriminator();
        java.math.BigDecimal bigDecimal54 = null;
        schema50.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema50.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str58 = annotatedElementSchema57.getPattern();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema57.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = annotatedElementSchema61.getExtensions();
        schema60.setExtensions(strMap67);
        schema50.setExtensions(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema50.getDiscriminator();
        java.math.BigDecimal bigDecimal71 = schema50.getMultipleOf();
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema50.maximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = schema73.name("default");
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "default");
        java.lang.String str77 = schema38.get$ref();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test03664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03664");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        java.lang.Boolean boolean7 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str12 = schema11.getName();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test03665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03665");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema50.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        annotatedElementSchema50.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = schema49.required((java.util.List<java.lang.String>) strList56);
        java.lang.String str60 = schema59.getTitle();
        io.swagger.oas.models.media.Schema schema61 = schema31.not(schema59);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        io.swagger.oas.annotations.info.Contact contact66 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional67 = io.swagger.jaxrs2.OperationParser.getContact(contact66);
        annotatedElementSchema63.setExample((java.lang.Object) contactOptional67);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList75 = schema74.getEnum();
        io.swagger.oas.models.media.Schema schema77 = schema74.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema77.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema61.not(schema77);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema81.setPattern("");
        io.swagger.oas.annotations.info.Contact contact84 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional85 = io.swagger.jaxrs2.OperationParser.getContact(contact84);
        annotatedElementSchema81.setExample((java.lang.Object) contactOptional85);
        annotatedElementSchema81.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema81.type("");
        schema90.setMaxItems((java.lang.Integer) 100);
        schema90.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema96 = schema90.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema97 = schema80.example((java.lang.Object) schema96);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(contactOptional67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(annotatedElementList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(contactOptional85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test03666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03666");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList7 = schema6.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator8 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = schema6.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(annotatedElementList7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03667");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03668");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        java.math.BigDecimal bigDecimal15 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str18 = schema8.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int29 = schema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema8.example((java.lang.Object) false);
        java.math.BigDecimal bigDecimal33 = null;
        schema8.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = null;
        schema8.setMultipleOf(bigDecimal37);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03669");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj15 = schema14.getExample();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        java.math.BigDecimal bigDecimal18 = schema17.getMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test03670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03670");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.maxLength((java.lang.Integer) 1);
        java.lang.reflect.AnnotatedElement annotatedElement66 = annotatedElementSchema54.getDefault();
        java.lang.Boolean boolean67 = annotatedElementSchema54.getExclusiveMinimum();
        annotatedElementSchema54.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(annotatedElement66);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test03671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03671");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int10 = schema7.getMaxLength();
        java.lang.String str11 = schema7.toString();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03672");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        java.lang.Boolean boolean65 = schema32.getNullable();
        io.swagger.oas.models.media.Schema schema67 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema32.minimum(bigDecimal68);
        java.lang.String str70 = schema32.get$ref();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test03673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03673");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList10 = schema9.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        annotatedElementSchema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        io.swagger.oas.annotations.info.Contact contact19 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional20 = io.swagger.jaxrs2.OperationParser.getContact(contact19);
        annotatedElementSchema16.setExample((java.lang.Object) contactOptional20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.readOnly((java.lang.Boolean) false);
        java.lang.String str24 = annotatedElementSchema16.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema30.minProperties((java.lang.Integer) 0);
        schema30.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema36.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean40 = schema39.getNullable();
        io.swagger.oas.models.media.Schema schema42 = schema39.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.readOnly((java.lang.Boolean) false);
        schema30.setDefault((java.lang.Object) schema44);
        java.lang.Class<?> wildcardClass46 = schema44.getClass();
        schema9.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass46);
        java.lang.Boolean boolean48 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(contactOptional20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test03674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03674");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        annotatedElementSchema9.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = annotatedElementSchema9.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema9.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema20.setNullable((java.lang.Boolean) false);
        annotatedElementSchema20.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema20.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema9.example((java.lang.Object) 0);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema9.minimum(bigDecimal34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test03675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03675");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal38 = null;
        schema36.setMultipleOf(bigDecimal38);
        schema4.setExample((java.lang.Object) schema36);
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        schema4.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema46 = schema4.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.minimum(bigDecimal49);
        java.math.BigDecimal bigDecimal51 = schema50.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
    }

    @Test
    public void test03676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03676");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema15.getExtensions();
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema schema34 = schema32.minLength((java.lang.Integer) (-1));
        java.lang.Integer int35 = schema32.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test03677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03677");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        java.lang.Integer int46 = annotatedElementSchema36.getMinItems();
        java.lang.Boolean boolean47 = annotatedElementSchema36.getDeprecated();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema36.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema36.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = schema53.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema10.not(schema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema10.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema59.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        annotatedElementSchema59.setRequired((java.util.List<java.lang.String>) strList65);
        java.lang.Integer int68 = annotatedElementSchema59.getMinItems();
        annotatedElementSchema59.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema59.externalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser77 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema73.addExtension("no description", (java.lang.Object) operationParser77);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema79 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema79.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        annotatedElementSchema79.setRequired((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema73.required((java.util.List<java.lang.String>) strList85);
        annotatedElementSchema59.setRequired((java.util.List<java.lang.String>) strList85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = null;
        annotatedElementSchema59.setProperties(strMap90);
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema59.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema94 = schema58.additionalProperties(schema93);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = null;
        schema94.setExternalDocs(externalDocumentation95);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test03678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03678");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = schema15.getXml();
        java.math.BigDecimal bigDecimal21 = null;
        schema15.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema24.setDiscriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
    }

    @Test
    public void test03679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03679");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema38.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema49.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj53 = null;
        schema51.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj53);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema51.minimum(bigDecimal55);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test03680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03680");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        java.lang.Boolean boolean21 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean24 = annotatedElementSchema23.getReadOnly();
        java.lang.Boolean boolean25 = annotatedElementSchema23.getNullable();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema23.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.String str31 = annotatedElementSchema23.getDescription();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator42 = annotatedElementSchema34.getDiscriminator();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.minProperties((java.lang.Integer) 10);
        java.lang.String str52 = annotatedElementSchema44.getName();
        annotatedElementSchema23.setDefault((java.lang.Object) annotatedElementSchema44);
        java.lang.Integer int54 = annotatedElementSchema44.getMinItems();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema44.minItems((java.lang.Integer) 0);
        annotatedElementSchema44.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema44.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema9.type("default");
        io.swagger.oas.models.media.Schema schema65 = schema9.maxItems((java.lang.Integer) 100);
        java.lang.String str66 = schema65.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test03681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03681");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.math.BigDecimal bigDecimal40 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal43 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema42.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean47 = schema46.getReadOnly();
        java.math.BigDecimal bigDecimal48 = null;
        schema46.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.additionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema52 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        schema51.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema51.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = schema51.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal63 = null;
        annotatedElementSchema62.setMultipleOf(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema62.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema66.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema70 = schema68.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal71 = schema68.getMultipleOf();
        io.swagger.oas.models.media.Schema schema73 = schema68.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema60.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema68);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test03682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03682");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03683");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str9 = annotatedElementSchema0.getName();
        java.lang.String str10 = annotatedElementSchema0.getTitle();
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(annotatedElementList13);
    }

    @Test
    public void test03684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03684");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema36.name("*/*");
        java.lang.String str49 = schema36.getTitle();
        java.lang.String str50 = schema36.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema36.discriminator(discriminator51);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03685");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.addRequiredItem("no description");
        java.lang.Integer int18 = annotatedElementSchema0.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test03686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03686");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.String str4 = schema3.getFormat();
        java.lang.String str5 = schema3.getFormat();
        java.math.BigDecimal bigDecimal6 = schema3.getMaximum();
        io.swagger.oas.models.media.Schema schema7 = schema3.getAdditionalProperties();
        io.swagger.oas.models.media.Discriminator discriminator8 = schema3.getDiscriminator();
        java.lang.String str9 = schema3.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test03687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03687");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = annotatedElementSchema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int27 = annotatedElementSchema22.getMinProperties();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.example((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean40 = annotatedElementSchema39.getReadOnly();
        java.lang.Boolean boolean41 = annotatedElementSchema39.getNullable();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        annotatedElementSchema39.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.String str47 = annotatedElementSchema39.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = annotatedElementSchema48.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray59 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        io.swagger.oas.models.media.Schema schema62 = schema55.required((java.util.List<java.lang.String>) strList60);
        annotatedElementSchema39.setDefault((java.lang.Object) strList60);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema33.required((java.util.List<java.lang.String>) strList60);
        schema32.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema66 = schema9.required((java.util.List<java.lang.String>) strList60);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema9.maximum(bigDecimal67);
        io.swagger.oas.models.media.Schema schema70 = schema68.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test03688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03688");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.readOnly((java.lang.Boolean) false);
        schema13.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03689");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        java.lang.Boolean boolean22 = schema21.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int27 = schema26.getMinLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema26.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test03690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03690");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str11 = schema10.getType();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03691");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        schema9.setMaximum(bigDecimal12);
        schema9.setMinLength((java.lang.Integer) 100);
        schema9.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03692");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = annotatedElementSchema0.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test03693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03693");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = annotatedElementSchema21.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema34.getExtensions();
        schema33.setExtensions(strMap40);
        schema29.setExtensions(strMap40);
        schema19.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema44.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.xml(xML55);
        java.lang.Boolean boolean57 = schema56.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        schema56.setDiscriminator(discriminator58);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema56.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema62 = schema19.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int68 = annotatedElementSchema63.getMinProperties();
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema63.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema73.setPattern("");
        annotatedElementSchema73.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int78 = annotatedElementSchema73.getMinProperties();
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema73.maximum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema63.example((java.lang.Object) schema82);
        schema82.setWriteOnly((java.lang.Boolean) true);
        schema62.setDefault((java.lang.Object) schema82);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test03694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03694");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        schema9.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema9.getNot();
        schema9.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
    }

    @Test
    public void test03695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03695");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str43 = annotatedElementSchema36.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        boolean boolean49 = annotatedElementSchema36.equals((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema36.setExternalDocs(externalDocumentation50);
        java.lang.String[] strArray53 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = schema35.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = schema23.additionalProperties(schema35);
        schema35.setMaxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema35.multipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = schema35.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = schema64.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str67 = schema64.getType();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test03696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03696");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.String str16 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.media.XML xML17 = null;
        annotatedElementSchema14.setXml(xML17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = annotatedElementSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.pattern("");
        io.swagger.oas.models.media.XML xML22 = schema21.getXml();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.addProperties("", schema21);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML26 = annotatedElementSchema0.getXml();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(xML22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML26);
    }

    @Test
    public void test03697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03697");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.XML xML8 = null;
        annotatedElementSchema0.setXml(xML8);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.maximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03698");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema21.example((java.lang.Object) annotatedElementSchema22);
        java.lang.String str26 = annotatedElementSchema22.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test03699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03699");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.lang.String str35 = annotatedElementSchema0.getName();
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test03700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03700");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema31.addProperties("no description", schema41);
        schema4.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema4.example((java.lang.Object) annotatedElementSchema47);
        io.swagger.oas.models.media.Schema schema66 = schema64.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema64.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int69 = schema68.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
    }

    @Test
    public void test03701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03701");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        annotatedElementSchema0.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
    }

    @Test
    public void test03702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03702");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema4.nullable((java.lang.Boolean) true);
        java.lang.String str11 = schema10.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03703");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.math.BigDecimal bigDecimal40 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal43 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema42.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean47 = schema46.getReadOnly();
        java.math.BigDecimal bigDecimal48 = null;
        schema46.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.additionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema52 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        java.math.BigDecimal bigDecimal53 = schema51.getMultipleOf();
        java.math.BigDecimal bigDecimal54 = schema51.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(bigDecimal54);
    }

    @Test
    public void test03704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03704");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.maximum(bigDecimal27);
        schema28.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03705");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema9.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema9.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) 100);
        schema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03706");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.String str15 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.media.XML xML16 = null;
        annotatedElementSchema13.setXml(xML16);
        java.lang.Boolean boolean18 = annotatedElementSchema13.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema20.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = schema12.additionalProperties(schema20);
        java.lang.Integer int23 = schema20.getMinLength();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test03707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03707");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.properties(strMap33);
        schema34.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema34.addProperties("hi!", schema38);
        java.lang.String[] strArray46 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional47 = io.swagger.jaxrs2.OperationParser.getTags(strArray46);
        io.swagger.oas.models.media.Schema schema48 = schema34.example((java.lang.Object) strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema12.addProperties("default", schema34);
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema53.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(tagSetOptional47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema54);
    }

    @Test
    public void test03708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03708");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        java.lang.Object obj12 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema14.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03709");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        java.lang.Object obj48 = schema38.getExample();
        io.swagger.oas.models.media.Schema schema50 = schema38.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03710");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = schema8.getWriteOnly();
        io.swagger.oas.models.media.Schema schema11 = schema8.maxItems((java.lang.Integer) 0);
        java.lang.String str12 = schema11.getPattern();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test03711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03711");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal11);
        java.lang.String str13 = annotatedElementSchema0.getName();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.discriminator(discriminator16);
        java.lang.Boolean boolean18 = schema17.getUniqueItems();
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.xml(xML19);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03712");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        java.math.BigDecimal bigDecimal28 = schema25.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test03713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03713");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        schema9.setMaxItems((java.lang.Integer) 100);
        schema9.setDeprecated((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03714");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        annotatedElementSchema7.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = annotatedElementSchema7.getWriteOnly();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema7.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str14 = annotatedElementSchema7.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        boolean boolean20 = annotatedElementSchema7.equals((java.lang.Object) annotatedElementSchema15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        annotatedElementSchema7.setExternalDocs(externalDocumentation21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        annotatedElementSchema7.setProperties(strMap23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema25.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setPattern("");
        annotatedElementSchema50.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int55 = annotatedElementSchema50.getMinProperties();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema50.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema50.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str61 = annotatedElementSchema60.getPattern();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema60.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema64.setPattern("");
        annotatedElementSchema64.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = annotatedElementSchema64.getExtensions();
        schema63.setExtensions(strMap70);
        annotatedElementSchema50.setExtensions(strMap70);
        schema49.setExtensions(strMap70);
        schema32.setExtensions(strMap70);
        annotatedElementSchema7.setExtensions(strMap70);
        schema6.setExtensions(strMap70);
        schema6.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test03715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03715");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.properties(strMap15);
        schema16.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03716");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema14.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.xml(xML18);
        io.swagger.oas.models.media.Schema schema20 = schema12.example((java.lang.Object) schema19);
        schema12.setMaxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList23 = schema12.getRequired();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema12.maximum(bigDecimal24);
        schema12.setName("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema12.getExternalDocs();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation28);
    }

    @Test
    public void test03717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03717");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        annotatedElementSchema0.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean16 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test03718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03718");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema40.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minLength((java.lang.Integer) (-1));
        schema48.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str51 = schema48.getPattern();
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema48.xml(xML52);
        io.swagger.oas.models.media.Schema schema54 = schema39.additionalProperties(schema53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        java.lang.Integer int63 = schema62.getMaxItems();
        io.swagger.oas.models.media.XML xML64 = null;
        schema62.setXml(xML64);
        java.math.BigDecimal bigDecimal66 = schema62.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema62.discriminator(discriminator67);
        schema68.setMaxItems((java.lang.Integer) (-1));
        schema68.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema68.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal75 = schema68.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = schema39.not(schema68);
        schema39.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema39.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test03719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03719");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str14 = annotatedElementSchema13.getPattern();
        annotatedElementSchema13.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = annotatedElementSchema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema20.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema20.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.pattern("");
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema7.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema31.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema31.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getExclusiveMaximum();
        schema28.setExample((java.lang.Object) boolean43);
        java.lang.Boolean boolean45 = schema28.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + boolean43 + "' != '" + true + "'", boolean43, true);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test03720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03720");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        schema9.setMultipleOf(bigDecimal10);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        schema9.set$ref("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
    }

    @Test
    public void test03721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03721");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema9.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        schema19.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema31 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema31.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = schema31.getNullable();
        java.lang.String str35 = schema31.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.Contact contact39 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional40 = io.swagger.jaxrs2.OperationParser.getContact(contact39);
        annotatedElementSchema36.setExample((java.lang.Object) contactOptional40);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.readOnly((java.lang.Boolean) false);
        java.lang.String str44 = annotatedElementSchema36.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema36.properties(strMap45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema36.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = annotatedElementSchema49.getWriteOnly();
        java.lang.Boolean boolean54 = annotatedElementSchema49.getExclusiveMinimum();
        annotatedElementSchema49.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean58 = annotatedElementSchema57.getReadOnly();
        java.lang.String str59 = annotatedElementSchema57.get$ref();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema57.title("hi!");
        java.math.BigDecimal bigDecimal62 = schema61.getMultipleOf();
        annotatedElementSchema49.setExample((java.lang.Object) schema61);
        java.lang.Object obj64 = null;
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema49.example(obj64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        io.swagger.oas.annotations.info.Contact contact69 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional70 = io.swagger.jaxrs2.OperationParser.getContact(contact69);
        annotatedElementSchema66.setExample((java.lang.Object) contactOptional70);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.readOnly((java.lang.Boolean) false);
        java.lang.String str74 = annotatedElementSchema66.getType();
        java.math.BigDecimal bigDecimal75 = null;
        annotatedElementSchema66.setMultipleOf(bigDecimal75);
        java.math.BigDecimal bigDecimal77 = null;
        annotatedElementSchema66.setMultipleOf(bigDecimal77);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema79 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema79.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        annotatedElementSchema79.setRequired((java.util.List<java.lang.String>) strList85);
        java.lang.Integer int88 = annotatedElementSchema79.getMinItems();
        annotatedElementSchema79.setType("hi!");
        java.util.List<java.lang.String> strList91 = annotatedElementSchema79.getRequired();
        annotatedElementSchema66.setRequired(strList91);
        annotatedElementSchema49.setRequired(strList91);
        io.swagger.oas.models.media.Schema schema94 = annotatedElementSchema36.required(strList91);
        schema31.setRequired(strList91);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(contactOptional40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(contactOptional70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test03722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03722");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        java.lang.Integer int13 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema15 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        schema11.setName("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema11.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema11.minLength((java.lang.Integer) 1);
        java.lang.String str24 = schema23.getPattern();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test03723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03723");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser44 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema40.addExtension("no description", (java.lang.Object) operationParser44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList52);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.maximum(bigDecimal56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema schema61 = schema57.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema24.example((java.lang.Object) schema61);
        java.lang.Boolean boolean63 = schema24.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test03724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03724");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        java.lang.String str11 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03725");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        java.lang.String str18 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.xml(xML19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03726");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03727");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        java.lang.Boolean boolean5 = annotatedElementSchema0.getExclusiveMaximum();
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
    }

    @Test
    public void test03728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03728");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.xml(xML9);
        java.lang.Integer int11 = schema10.getMinItems();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.minimum(bigDecimal12);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03729");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema8.getReadOnly();
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test03730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03730");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema11.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema27.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema41.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema27.not(schema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema41.getExtensions();
        schema26.setExtensions(strMap45);
        java.math.BigDecimal bigDecimal47 = null;
        schema26.setMultipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str51 = schema50.getName();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test03731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03731");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser31 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema27.addExtension("no description", (java.lang.Object) operationParser31);
        annotatedElementSchema27.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str35 = annotatedElementSchema27.getTitle();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.nullable((java.lang.Boolean) true);
        boolean boolean40 = schema10.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test03732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03732");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03733");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema14.minProperties((java.lang.Integer) (-1));
        java.lang.String str21 = schema20.toString();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03734");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = annotatedElementSchema10.getMinProperties();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.example((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03735");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation10);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test03736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03736");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema25.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03737");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03738");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema15.discriminator(discriminator37);
        schema15.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03739");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        java.lang.reflect.AnnotatedElement annotatedElement47 = annotatedElementSchema26.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray49 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces50 = null;
        javax.ws.rs.Produces produces51 = null;
        io.swagger.oas.models.Components components52 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional53 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces50, produces51, components52);
        javax.ws.rs.Produces produces54 = null;
        javax.ws.rs.Produces produces55 = null;
        io.swagger.oas.models.Components components56 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional57 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces54, produces55, components56);
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional61 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray49, produces58, produces59, components60);
        annotatedElementSchema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces58);
        java.lang.String str63 = annotatedElementSchema26.get$ref();
        annotatedElementSchema26.setUniqueItems((java.lang.Boolean) true);
        schema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema69.setPattern("");
        io.swagger.oas.annotations.info.Contact contact72 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional73 = io.swagger.jaxrs2.OperationParser.getContact(contact72);
        annotatedElementSchema69.setExample((java.lang.Object) contactOptional73);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema69.readOnly((java.lang.Boolean) false);
        java.lang.String str77 = annotatedElementSchema69.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema69.properties(strMap78);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema69.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema69.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema69.minimum(bigDecimal84);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema69.addRequiredItem("");
        java.lang.Boolean boolean88 = annotatedElementSchema69.getWriteOnly();
        java.util.List<java.lang.String> strList89 = annotatedElementSchema69.getRequired();
        annotatedElementSchema26.setRequired(strList89);
        io.swagger.oas.models.media.Discriminator discriminator91 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = annotatedElementSchema26.getExternalDocs();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(annotatedElement47);
        org.junit.Assert.assertNotNull(apiResponseArray49);
        org.junit.Assert.assertNotNull(apiResponsesOptional53);
        org.junit.Assert.assertNotNull(apiResponsesOptional57);
        org.junit.Assert.assertNotNull(apiResponsesOptional61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(contactOptional73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean88);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertNull(discriminator91);
        org.junit.Assert.assertNull(externalDocumentation92);
    }

    @Test
    public void test03740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03740");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema15.getExtensions();
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        java.lang.Boolean boolean33 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema schema35 = schema13.title("default");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema13.xml(xML36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03741");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal38 = null;
        schema36.setMultipleOf(bigDecimal38);
        schema4.setExample((java.lang.Object) schema36);
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = schema4.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema4.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema4.discriminator(discriminator46);
        schema47.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test03742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03742");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.XML xML3 = null;
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.xml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.Integer int7 = schema6.getMaxLength();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test03743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03743");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.name("*/*");
        java.lang.Integer int25 = schema24.getMinItems();
        java.lang.Boolean boolean26 = schema24.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
    }

    @Test
    public void test03744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03744");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03745");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray11 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        io.swagger.oas.models.media.Schema schema14 = schema7.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        java.lang.String str17 = schema14.getDescription();
        schema14.setMaxItems((java.lang.Integer) 100);
        schema14.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema14.minimum(bigDecimal22);
        java.lang.String str24 = schema23.get$ref();
        java.math.BigDecimal bigDecimal25 = null;
        schema23.setMinimum(bigDecimal25);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test03746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03746");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema34.not(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema49.getEnum();
        schema49.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
    }

    @Test
    public void test03747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03747");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.minProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.getTitle();
        annotatedElementSchema0.setAdditionalProperties(schema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser23 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema19.addExtension("no description", (java.lang.Object) operationParser23);
        annotatedElementSchema19.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str27 = annotatedElementSchema19.getTitle();
        java.lang.Integer int28 = annotatedElementSchema19.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.maximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema17.addExtension("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03748");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxLength((java.lang.Integer) (-1));
        schema37.set$ref("");
        schema37.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03749");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.lang.Integer int24 = schema23.getMaxItems();
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema23.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = annotatedElementSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator47 = annotatedElementSchema39.getDiscriminator();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema39.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean51 = annotatedElementSchema39.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema39.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema39.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema55.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema55.setNullable((java.lang.Boolean) false);
        annotatedElementSchema55.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema55.minItems((java.lang.Integer) 0);
        annotatedElementSchema55.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema70.setPattern("");
        annotatedElementSchema70.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int75 = annotatedElementSchema70.getMinProperties();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema70.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema70.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema70.$ref("*/*");
        java.lang.Boolean boolean82 = annotatedElementSchema70.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema55.example((java.lang.Object) boolean82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema83.getProperties();
        annotatedElementSchema39.setNot(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema83.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema83.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal90 = null;
        schema89.setMinimum(bigDecimal90);
        io.swagger.oas.models.media.Schema schema92 = schema23.example((java.lang.Object) bigDecimal90);
        schema23.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema54);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03750");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 0);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.minLength((java.lang.Integer) 100);
        java.lang.String str32 = schema31.getDescription();
        io.swagger.oas.models.media.Schema schema34 = schema31.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema34.setExternalDocs(externalDocumentation35);
        java.lang.Boolean boolean37 = schema34.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test03751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03751");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str52 = schema17.getTitle();
        io.swagger.oas.models.media.Schema schema54 = schema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema54.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test03752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03752");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema16.getEnum();
        annotatedElementSchema16.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = annotatedElementSchema24.getMinItems();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.XML xML37 = null;
        annotatedElementSchema16.setXml(xML37);
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        schema42.setExternalDocs(externalDocumentation46);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03753");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        annotatedElementSchema2.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.properties(strMap17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema2.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.maximum(bigDecimal23);
        schema22.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML27 = null;
        schema22.setXml(xML27);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03754");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str21 = annotatedElementSchema13.getDescription();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator32 = annotatedElementSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema13.not((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = annotatedElementSchema24.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema24.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.getNot();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal43 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal43);
        java.math.BigDecimal bigDecimal45 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal45);
        java.math.BigDecimal bigDecimal47 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal47);
        java.lang.String str49 = annotatedElementSchema42.toString();
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal55);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str49, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03755");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = annotatedElementSchema13.getExtensions();
        schema12.setExtensions(strMap19);
        schema8.setExtensions(strMap19);
        java.lang.String str22 = schema8.toString();
        io.swagger.oas.models.media.Schema schema23 = schema8.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = schema23.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test03756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03756");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str17 = annotatedElementSchema16.getPattern();
        annotatedElementSchema16.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = annotatedElementSchema16.getWriteOnly();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        schema25.setTitle("#/components/schemas/");
        java.lang.Integer int28 = schema25.getMinLength();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.minimum(bigDecimal29);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList31 = schema30.getEnum();
        annotatedElementSchema0.setNot(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.Integer int44 = annotatedElementSchema35.getMinItems();
        annotatedElementSchema35.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema35.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser53 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema49.addExtension("no description", (java.lang.Object) operationParser53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema55.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema49.required((java.util.List<java.lang.String>) strList61);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        annotatedElementSchema35.setProperties(strMap66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema35.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        io.swagger.oas.annotations.info.License license74 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional75 = io.swagger.jaxrs2.OperationParser.getLicense(license74);
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema71.example((java.lang.Object) licenseOptional75);
        schema76.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema35.addExtension("no description", (java.lang.Object) schema76);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = schema76.getExtensions();
        schema30.setExample((java.lang.Object) strMap80);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(annotatedElementList31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(licenseOptional75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strMap80);
    }

    @Test
    public void test03757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03757");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.deprecated((java.lang.Boolean) true);
        schema8.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: */*\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03758");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema11.setProperties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema32.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03759");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.XML xML8 = null;
        annotatedElementSchema0.setXml(xML8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        java.lang.String str40 = annotatedElementSchema32.getName();
        annotatedElementSchema11.setDefault((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema42 = null;
        annotatedElementSchema11.setNot(schema42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema11.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema47 = schema45.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        io.swagger.oas.models.media.Schema schema54 = schema52.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03760");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = schema12.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        schema29.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setDefault((java.lang.Object) schema29);
        java.lang.Boolean boolean33 = schema29.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test03761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03761");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.lang.String str25 = schema9.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema9.getDiscriminator();
        schema9.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema9.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema38 = schema9.required((java.util.List<java.lang.String>) strList35);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03762");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = schema18.getMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test03763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03763");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray11 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        io.swagger.oas.models.media.Schema schema14 = schema7.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema14.setExternalDocs(externalDocumentation15);
        java.lang.String str17 = schema14.getDescription();
        schema14.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema14.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03764");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.nullable((java.lang.Boolean) true);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema10.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass41 = schema38.getClass();
        schema30.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass41);
        io.swagger.oas.models.media.Schema schema44 = schema30.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema66.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean78 = schema77.getReadOnly();
        java.math.BigDecimal bigDecimal79 = null;
        schema77.setMaximum(bigDecimal79);
        schema52.setDefault((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema83 = schema77.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test03765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03765");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.externalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema25.getNullable();
        java.lang.Object obj27 = schema25.getExample();
        java.lang.Boolean boolean28 = schema25.getWriteOnly();
        schema25.setMinProperties((java.lang.Integer) 1);
        schema25.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int33 = schema25.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test03766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03766");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.maximum(bigDecimal19);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03767");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        schema8.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str11 = schema8.getPattern();
        java.lang.String str12 = schema8.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.Integer int22 = annotatedElementSchema13.getMinItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema13.minimum(bigDecimal23);
        annotatedElementSchema13.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema13.setMinLength((java.lang.Integer) 1);
        annotatedElementSchema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean31 = schema8.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean32 = schema8.getDeprecated();
        java.lang.String str33 = schema8.getName();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test03768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03768");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        schema8.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03769");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMinimum(bigDecimal16);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03770");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = annotatedElementSchema13.getExtensions();
        schema12.setExtensions(strMap19);
        schema8.setExtensions(strMap19);
        java.math.BigDecimal bigDecimal22 = null;
        schema8.setMultipleOf(bigDecimal22);
        java.lang.Boolean boolean24 = schema8.getNullable();
        io.swagger.oas.models.media.Schema schema26 = schema8.minProperties((java.lang.Integer) (-1));
        java.lang.String str27 = schema8.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test03771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03771");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        annotatedElementSchema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Object obj19 = null;
        annotatedElementSchema9.setExample(obj19);
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) annotatedElementSchema9);
        java.lang.Integer int22 = annotatedElementSchema0.getMinProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test03772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03772");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML28 = null;
        schema24.setXml(xML28);
        java.lang.Integer int30 = schema24.getMinItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test03773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03773");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        schema12.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema7.example((java.lang.Object) discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema7.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema7.getDiscriminator();
        java.lang.String str20 = schema7.getName();
        io.swagger.oas.models.media.Schema schema21 = schema7.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#/components/schemas/" + "'", str20, "#/components/schemas/");
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test03774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03774");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList35);
        schema27.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = schema27.get$ref();
        schema27.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema12.not(schema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema12.externalDocs(externalDocumentation43);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList45 = schema44.getEnum();
        io.swagger.oas.models.media.Schema schema47 = schema44.addRequiredItem("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(annotatedElementList45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test03775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03775");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        schema17.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03776");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema7.getNot();
        java.lang.Boolean boolean13 = schema7.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03777");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.String str14 = schema11.getFormat();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03778");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.addRequiredItem("default");
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) true);
        schema23.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03779");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int9 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03780");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.deprecated((java.lang.Boolean) true);
        schema12.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean15 = schema12.getNullable();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test03781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03781");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03782");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        java.math.BigDecimal bigDecimal15 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema17.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema17.xml(xML21);
        io.swagger.oas.models.media.Schema schema23 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.String str24 = schema23.get$ref();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test03783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03783");
        io.swagger.oas.models.media.Schema<java.io.Serializable> serializableSchema0 = new io.swagger.oas.models.media.Schema<java.io.Serializable>();
    }

    @Test
    public void test03784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03784");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema9.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema9.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema24.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
    }

    @Test
    public void test03785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03785");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        java.lang.reflect.AnnotatedElement annotatedElement37 = annotatedElementSchema16.getDefault();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema16.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.properties(strMap46);
        io.swagger.oas.models.media.Schema schema49 = schema47.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema52.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str59 = annotatedElementSchema52.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str61 = annotatedElementSchema60.getPattern();
        annotatedElementSchema60.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean64 = annotatedElementSchema60.getWriteOnly();
        boolean boolean65 = annotatedElementSchema52.equals((java.lang.Object) annotatedElementSchema60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        annotatedElementSchema52.setExternalDocs(externalDocumentation66);
        java.lang.String[] strArray69 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        annotatedElementSchema52.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema73 = schema51.required((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema39.additionalProperties(schema51);
        io.swagger.oas.models.media.Schema schema76 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj77 = schema76.getExample();
        io.swagger.oas.models.media.Schema schema79 = schema76.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean80 = schema76.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema76);
        io.swagger.oas.models.media.Schema schema83 = schema76.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema84 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal85 = null;
        annotatedElementSchema84.setMultipleOf(bigDecimal85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema84.nullable((java.lang.Boolean) false);
        annotatedElementSchema84.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema92 = annotatedElementSchema84.minProperties((java.lang.Integer) 1);
        schema83.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema84);
        java.math.BigDecimal bigDecimal94 = annotatedElementSchema84.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElement37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test03786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03786");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        schema16.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03787");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        java.lang.String str9 = schema4.getTitle();
        io.swagger.oas.models.media.Schema schema11 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = annotatedElementSchema12.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema12.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema12.addRequiredItem("");
        java.lang.Integer int31 = schema30.getMinLength();
        schema4.setAdditionalProperties(schema30);
        io.swagger.oas.models.media.XML xML33 = null;
        schema30.setXml(xML33);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test03788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03788");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema19 = schema16.addRequiredItem("default");
        java.lang.String str20 = schema19.toString();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03789");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test03790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03790");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        schema14.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("no description", schema24);
        io.swagger.oas.models.media.Schema schema30 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = annotatedElementSchema31.getProperties();
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema14.setMinProperties((java.lang.Integer) 1);
        annotatedElementSchema0.setAdditionalProperties(schema14);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.getNot();
        java.lang.Boolean boolean44 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test03791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03791");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema9.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema9.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.Integer int18 = annotatedElementSchema9.getMinItems();
        java.lang.Boolean boolean19 = annotatedElementSchema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMultipleOf();
        io.swagger.oas.models.media.Schema schema41 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean44 = annotatedElementSchema43.getReadOnly();
        java.lang.Boolean boolean45 = annotatedElementSchema43.getNullable();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList48);
        java.lang.String str51 = annotatedElementSchema43.getDescription();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema43.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema43.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMinimum((java.lang.Boolean) false);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema57);
        annotatedElementSchema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema61 = schema38.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList62 = schema38.getRequired();
        io.swagger.oas.models.media.Schema schema63 = schema24.not(schema38);
        java.lang.String str64 = schema63.getPattern();
        java.lang.String str65 = schema63.getType();
        io.swagger.oas.models.media.Schema schema67 = schema63.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = schema63.writeOnly((java.lang.Boolean) false);
        schema63.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test03792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03792");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema7.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minLength((java.lang.Integer) 10);
        java.lang.String str23 = schema22.getFormat();
        io.swagger.oas.models.media.Schema schema25 = schema22.addRequiredItem("");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.maximum(bigDecimal26);
        schema25.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema7.additionalProperties(schema33);
        java.lang.Boolean boolean35 = schema33.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test03793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03793");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        java.lang.String str16 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = annotatedElementSchema17.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        annotatedElementSchema17.setProperties(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        io.swagger.oas.annotations.info.Contact contact29 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional30 = io.swagger.jaxrs2.OperationParser.getContact(contact29);
        annotatedElementSchema26.setExample((java.lang.Object) contactOptional30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.readOnly((java.lang.Boolean) false);
        java.lang.String str34 = annotatedElementSchema26.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.properties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema26.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema26.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema26.minimum(bigDecimal41);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        schema42.setDiscriminator(discriminator43);
        java.lang.Boolean boolean45 = schema42.getExclusiveMaximum();
        annotatedElementSchema17.setNot(schema42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = annotatedElementSchema17.getProperties();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema17.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.example((java.lang.Object) schema49);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(contactOptional30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03794");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = annotatedElementSchema0.getReadOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
    }

    @Test
    public void test03795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03795");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean14 = schema13.getDeprecated();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean17 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.String str20 = annotatedElementSchema18.get$ref();
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema18.setXml(xML21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = annotatedElementSchema18.getExternalDocs();
        java.math.BigDecimal bigDecimal24 = null;
        annotatedElementSchema18.setMinimum(bigDecimal24);
        boolean boolean26 = schema16.equals((java.lang.Object) bigDecimal24);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test03796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03796");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.Boolean boolean6 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.String str9 = annotatedElementSchema7.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        annotatedElementSchema7.setXml(xML10);
        io.swagger.oas.models.media.XML xML12 = annotatedElementSchema7.getXml();
        java.lang.String str13 = annotatedElementSchema7.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        schema23.setType("#/components/schemas/");
        java.lang.String str29 = schema23.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        annotatedElementSchema31.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema31.minItems((java.lang.Integer) 0);
        java.lang.String str44 = schema43.getType();
        io.swagger.oas.models.media.XML xML45 = null;
        schema43.setXml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema23.getProperties();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema7.properties(strMap48);
        annotatedElementSchema0.setProperties(strMap48);
        java.util.List<java.lang.String> strList51 = annotatedElementSchema0.getRequired();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strList51);
    }

    @Test
    public void test03797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03797");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = annotatedElementSchema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema26.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str33 = annotatedElementSchema26.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        boolean boolean39 = annotatedElementSchema26.equals((java.lang.Object) annotatedElementSchema34);
        java.util.List<java.lang.String> strList40 = annotatedElementSchema26.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator49 = annotatedElementSchema41.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema41.setExternalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean55 = annotatedElementSchema54.getReadOnly();
        java.lang.Boolean boolean56 = annotatedElementSchema54.getNullable();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema54.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.String str62 = annotatedElementSchema54.getDescription();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema54.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema65.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator73 = annotatedElementSchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema54.not((io.swagger.oas.models.media.Schema) annotatedElementSchema65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = annotatedElementSchema65.getProperties();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema65.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema78 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema78.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser82 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema78.addExtension("no description", (java.lang.Object) operationParser82);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema84 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema84.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        annotatedElementSchema84.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema93 = annotatedElementSchema78.required((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema94 = annotatedElementSchema65.required((java.util.List<java.lang.String>) strList90);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema96 = annotatedElementSchema26.required((java.util.List<java.lang.String>) strList90);
        boolean boolean97 = schema25.equals((java.lang.Object) strList90);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test03798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03798");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Schema schema26 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        schema9.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema9.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal34 = null;
        annotatedElementSchema33.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        schema37.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema41 = schema37.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal42 = schema37.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList49);
        java.lang.Integer int52 = annotatedElementSchema43.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement53 = annotatedElementSchema43.getDefault();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema43.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema37.not(schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.name("#/components/schemas/");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        io.swagger.oas.annotations.info.Contact contact64 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional65 = io.swagger.jaxrs2.OperationParser.getContact(contact64);
        annotatedElementSchema61.setExample((java.lang.Object) contactOptional65);
        annotatedElementSchema61.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema61.type("");
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema61.minProperties((java.lang.Integer) 100);
        annotatedElementSchema61.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int80 = annotatedElementSchema75.getMinProperties();
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema75.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray86 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        io.swagger.oas.models.media.Schema schema89 = schema82.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema61.required((java.util.List<java.lang.String>) strList87);
        schema58.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema92 = schema32.required((java.util.List<java.lang.String>) strList87);
        schema92.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(annotatedElement53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(contactOptional65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03799");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        java.lang.Boolean boolean7 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxProperties((java.lang.Integer) (-1));
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        schema13.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03800");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema11.getFormat();
        java.lang.String str15 = schema11.get$ref();
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMultipleOf(bigDecimal16);
        java.lang.String str18 = schema11.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema11.$ref("*/*");
        schema20.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03801");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        schema13.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03802");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema38.xml(xML48);
        schema38.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean52 = schema38.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test03803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03803");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema13.getProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test03804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03804");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.multipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03805");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema7.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03806");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.maximum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03807");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.xml(xML24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema26.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = annotatedElementSchema26.getMinItems();
        annotatedElementSchema26.setType("hi!");
        java.util.List<java.lang.String> strList38 = annotatedElementSchema26.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema25.required(strList38);
        annotatedElementSchema0.setRequired(strList38);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema0.multipleOf(bigDecimal41);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03808");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        java.lang.Class<?> wildcardClass39 = annotatedElementSchema18.getClass();
        schema17.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList44 = schema43.getEnum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(annotatedElementList44);
    }

    @Test
    public void test03809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03809");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.minimum(bigDecimal31);
        java.util.List<java.lang.String> strList33 = schema32.getRequired();
        schema32.setTitle("");
        java.lang.String str36 = schema32.getType();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03810");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        java.util.List<java.lang.String> strList37 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema15.getAdditionalProperties();
        schema15.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03811");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean11 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.License license17 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional18 = io.swagger.jaxrs2.OperationParser.getLicense(license17);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema14.example((java.lang.Object) licenseOptional18);
        java.lang.String str20 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = annotatedElementSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        annotatedElementSchema14.setPattern("*/*");
        java.lang.Integer int26 = annotatedElementSchema14.getMinItems();
        java.math.BigDecimal bigDecimal27 = annotatedElementSchema14.getMultipleOf();
        java.lang.Boolean boolean28 = annotatedElementSchema14.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = annotatedElementSchema14.getProperties();
        boolean boolean30 = schema10.equals((java.lang.Object) strMap29);
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(licenseOptional18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test03812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03812");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = annotatedElementSchema0.getMaximum();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test03813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03813");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML9 = schema6.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(xML9);
    }

    @Test
    public void test03814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03814");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList16 = schema15.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.externalDocs(externalDocumentation17);
        java.lang.Boolean boolean19 = schema15.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = schema15.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test03815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03815");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        schema11.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test03816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03816");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema26.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.$ref("*/*");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema26.minimum(bigDecimal38);
        java.lang.String str40 = schema39.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        annotatedElementSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = annotatedElementSchema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema41.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str48 = annotatedElementSchema41.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = annotatedElementSchema49.getWriteOnly();
        boolean boolean54 = annotatedElementSchema41.equals((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        annotatedElementSchema41.setExternalDocs(externalDocumentation55);
        java.lang.String[] strArray58 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = schema39.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema64 = schema39.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.math.BigDecimal bigDecimal66 = null;
        schema22.setMultipleOf(bigDecimal66);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test03817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03817");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.properties(strMap22);
        java.lang.Integer int24 = schema23.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = annotatedElementSchema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema26.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema26.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info37 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional38 = io.swagger.jaxrs2.OperationParser.getInfo(info37);
        java.lang.Class<?> wildcardClass39 = infoOptional38.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray40 = new java.lang.reflect.AnnotatedElement[] { wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList41 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList41, annotatedElementArray40);
        schema36.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList41);
        schema23.addExtension("no description", (java.lang.Object) schema36);
        schema23.setFormat("*/*");
        annotatedElementSchema0.addExtension("hi!", (java.lang.Object) "*/*");
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass52 = annotatedElementSchema0.getClass();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(infoOptional38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(annotatedElementArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test03818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03818");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.$ref("");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        schema12.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03819");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        java.math.BigDecimal bigDecimal14 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.lang.Integer int23 = schema22.getMaxItems();
        io.swagger.oas.models.media.XML xML24 = null;
        schema22.setXml(xML24);
        java.math.BigDecimal bigDecimal26 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.discriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema22.maximum(bigDecimal29);
        schema22.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema22.setExternalDocs(externalDocumentation34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema22.minimum(bigDecimal36);
        java.lang.Boolean boolean38 = schema22.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test03820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03820");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minLength((java.lang.Integer) 10);
        schema9.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = schema9.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test03821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03821");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = annotatedElementSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser28 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema24.addExtension("no description", (java.lang.Object) operationParser28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean42 = annotatedElementSchema41.getReadOnly();
        java.lang.Boolean boolean43 = annotatedElementSchema41.getNullable();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.String str49 = annotatedElementSchema41.getDescription();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema52.setPattern("");
        annotatedElementSchema52.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema52.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator60 = annotatedElementSchema52.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema41.not((io.swagger.oas.models.media.Schema) annotatedElementSchema52);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.minProperties((java.lang.Integer) 10);
        java.lang.String str70 = annotatedElementSchema62.getName();
        annotatedElementSchema41.setDefault((java.lang.Object) annotatedElementSchema62);
        java.lang.Integer int72 = annotatedElementSchema62.getMinItems();
        java.lang.Boolean boolean73 = annotatedElementSchema62.getDeprecated();
        annotatedElementSchema62.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str77 = annotatedElementSchema76.getPattern();
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema76.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema80.setPattern("");
        annotatedElementSchema80.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = annotatedElementSchema80.getExtensions();
        schema79.setExtensions(strMap86);
        boolean boolean88 = annotatedElementSchema62.equals((java.lang.Object) schema79);
        schema79.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        boolean boolean91 = schema40.equals((java.lang.Object) schema79);
        java.lang.String str92 = schema40.getType();
        io.swagger.oas.models.media.Schema schema94 = schema40.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema96 = schema40.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test03822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03822");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema17.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = annotatedElementSchema17.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema34.minLength((java.lang.Integer) 10);
        schema36.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator39 = schema36.getDiscriminator();
        schema36.setType("#/components/schemas/");
        java.lang.String str42 = schema36.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema44.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema44.setNullable((java.lang.Boolean) false);
        annotatedElementSchema44.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema44.minItems((java.lang.Integer) 0);
        java.lang.String str57 = schema56.getType();
        io.swagger.oas.models.media.XML xML58 = null;
        schema56.setXml(xML58);
        io.swagger.oas.models.media.Schema schema60 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = schema36.getProperties();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema17.properties(strMap61);
        boolean boolean63 = schema16.equals((java.lang.Object) schema62);
        java.lang.Integer int64 = schema16.getMinLength();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(int64);
    }

    @Test
    public void test03823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03823");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = annotatedElementSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema5.$ref("*/*");
        schema16.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema16.getType();
        io.swagger.oas.models.media.Schema schema21 = schema16.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        java.lang.Boolean boolean34 = annotatedElementSchema32.getNullable();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.String str40 = annotatedElementSchema32.getDescription();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator51 = annotatedElementSchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        java.lang.String str61 = annotatedElementSchema53.getName();
        annotatedElementSchema32.setDefault((java.lang.Object) annotatedElementSchema53);
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema53.xml(xML63);
        annotatedElementSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        schema21.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = schema67.getProperties();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema67.maximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema67.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema67.discriminator(discriminator73);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03824");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        java.lang.String str37 = annotatedElementSchema29.getName();
        annotatedElementSchema8.setDefault((java.lang.Object) annotatedElementSchema29);
        io.swagger.oas.models.media.Schema schema39 = null;
        annotatedElementSchema8.setNot(schema39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema8.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList43 = annotatedElementSchema8.getRequired();
        annotatedElementSchema8.setMaxProperties((java.lang.Integer) 1);
        boolean boolean46 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test03825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03825");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test03826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03826");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int11 = schema10.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser16 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema12.addExtension("no description", (java.lang.Object) operationParser16);
        annotatedElementSchema12.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        annotatedElementSchema12.setDiscriminator(discriminator20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.multipleOf(bigDecimal22);
        schema23.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator45 = annotatedElementSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        java.lang.String str55 = annotatedElementSchema47.getName();
        annotatedElementSchema26.setDefault((java.lang.Object) annotatedElementSchema47);
        io.swagger.oas.models.media.Schema schema57 = null;
        annotatedElementSchema26.setNot(schema57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema26.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList61 = annotatedElementSchema26.getRequired();
        schema23.setRequired(strList61);
        schema23.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema23.getExclusiveMinimum();
        schema23.setTitle("");
        schema10.setDefault((java.lang.Object) schema23);
        schema23.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNull(boolean65);
    }

    @Test
    public void test03827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03827");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) (-1));
        java.lang.Integer int17 = schema16.getMinItems();
        io.swagger.oas.models.media.Schema schema19 = schema16.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        java.lang.String str22 = schema16.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03828");
        java.lang.String[] strArray6 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
    }

    @Test
    public void test03829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03829");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema10.properties(strMap20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int28 = annotatedElementSchema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema23.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema23.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        annotatedElementSchema23.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema23.discriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema10.addProperties("*/*", (io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        annotatedElementSchema0.setDefault((java.lang.Object) "*/*");
        annotatedElementSchema0.setName("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03830");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema9.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList23 = annotatedElementSchema18.getEnum();
        annotatedElementSchema18.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema26.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = annotatedElementSchema26.getMinItems();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.XML xML39 = null;
        annotatedElementSchema18.setXml(xML39);
        annotatedElementSchema18.setReadOnly((java.lang.Boolean) true);
        java.lang.String str43 = annotatedElementSchema18.getFormat();
        schema9.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema45.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema45.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(annotatedElementList23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03831");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray23 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces24 = null;
        javax.ws.rs.Produces produces25 = null;
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional27 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces24, produces25, components26);
        javax.ws.rs.Produces produces28 = null;
        javax.ws.rs.Produces produces29 = null;
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional31 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces28, produces29, components30);
        javax.ws.rs.Produces produces32 = null;
        javax.ws.rs.Produces produces33 = null;
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional35 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray23, produces32, produces33, components34);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces32);
        java.lang.Integer int37 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.XML xML38 = null;
        annotatedElementSchema0.setXml(xML38);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(apiResponseArray23);
        org.junit.Assert.assertNotNull(apiResponsesOptional27);
        org.junit.Assert.assertNotNull(apiResponsesOptional31);
        org.junit.Assert.assertNotNull(apiResponsesOptional35);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test03832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03832");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema8.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = schema8.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema14.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.$ref("*/*");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema14.minimum(bigDecimal26);
        java.lang.String str28 = schema27.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str30 = annotatedElementSchema29.getPattern();
        annotatedElementSchema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean33 = annotatedElementSchema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema29.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = annotatedElementSchema29.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        boolean boolean42 = annotatedElementSchema29.equals((java.lang.Object) annotatedElementSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        annotatedElementSchema29.setExternalDocs(externalDocumentation43);
        java.lang.String[] strArray46 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = schema27.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int56 = annotatedElementSchema51.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = annotatedElementSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema51.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = schema50.additionalProperties(schema59);
        io.swagger.oas.models.media.Schema schema62 = schema50.name("*/*");
        java.lang.String str63 = schema50.getTitle();
        schema13.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Discriminator discriminator65 = schema13.getDiscriminator();
        java.lang.String str66 = schema13.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(discriminator65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test03833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03833");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMultipleOf(bigDecimal16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema15.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
    }

    @Test
    public void test03834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03834");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) true);
        schema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        java.lang.reflect.AnnotatedElement annotatedElement33 = annotatedElementSchema12.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str35 = annotatedElementSchema34.getPattern();
        annotatedElementSchema34.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema12.setNot(schema40);
        java.lang.String str42 = schema40.getDescription();
        java.lang.String str43 = schema40.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        io.swagger.oas.annotations.info.Contact contact47 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional48 = io.swagger.jaxrs2.OperationParser.getContact(contact47);
        annotatedElementSchema44.setExample((java.lang.Object) contactOptional48);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema44.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList56 = annotatedElementSchema44.getRequired();
        boolean boolean57 = schema40.equals((java.lang.Object) strList56);
        schema7.setRequired(strList56);
        java.lang.Boolean boolean59 = schema7.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(annotatedElement33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(contactOptional48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test03835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03835");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal30 = null;
        annotatedElementSchema29.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema29.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean34 = schema33.getReadOnly();
        schema33.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = schema33.getType();
        schema33.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String[] strArray71 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        io.swagger.oas.models.media.Schema schema74 = schema33.required((java.util.List<java.lang.String>) strList72);
        java.math.BigDecimal bigDecimal75 = null;
        schema74.setMaximum(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = schema74.minItems((java.lang.Integer) 1);
        schema24.setExample((java.lang.Object) schema78);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test03836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03836");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.set$ref("default");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema15 = schema10.maxItems((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass16 = schema10.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test03837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03837");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        annotatedElementSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        io.swagger.oas.annotations.info.Contact contact15 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional16 = io.swagger.jaxrs2.OperationParser.getContact(contact15);
        annotatedElementSchema12.setExample((java.lang.Object) contactOptional16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.readOnly((java.lang.Boolean) false);
        java.lang.String str20 = annotatedElementSchema12.getType();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal21);
        java.math.BigDecimal bigDecimal23 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.Integer int26 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean27 = annotatedElementSchema0.getNullable();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(contactOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test03838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03838");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.type("");
        schema21.setMinLength((java.lang.Integer) 100);
        java.lang.String str24 = schema21.getFormat();
        schema21.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test03839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03839");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema12.getExtensions();
        schema11.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema11.minimum(bigDecimal22);
        schema11.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03840");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int12 = annotatedElementSchema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema7.getDiscriminator();
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema24.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03841");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema7.uniqueItems((java.lang.Boolean) false);
        schema11.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema11.getExternalDocs();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation14);
    }

    @Test
    public void test03842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03842");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Discriminator discriminator8 = schema7.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = schema7.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str13 = schema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = annotatedElementSchema15.getExtensions();
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema15.maximum(bigDecimal30);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema31);
        java.lang.String str33 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test03843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03843");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str30 = schema29.getType();
        java.lang.String str31 = schema29.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03844");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str43 = annotatedElementSchema36.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        boolean boolean49 = annotatedElementSchema36.equals((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema36.setExternalDocs(externalDocumentation50);
        java.lang.String[] strArray53 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = schema35.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = schema23.additionalProperties(schema35);
        schema58.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03845");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.Integer int6 = schema5.getMaxItems();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema5.multipleOf(bigDecimal7);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03846");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema25.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema9.example((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.pattern("hi!");
        schema53.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema58 = schema53.minProperties((java.lang.Integer) 0);
        boolean boolean59 = schema43.equals((java.lang.Object) schema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema53.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.xml(xML62);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test03847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03847");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.XML xML31 = null;
        schema28.setXml(xML31);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03848");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str11 = schema8.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03849");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxProperties((java.lang.Integer) 0);
        java.lang.String str14 = schema13.getFormat();
        java.lang.String str15 = schema13.getDescription();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03850");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema16.properties(strMap63);
        io.swagger.oas.models.media.Schema schema65 = schema16.getNot();
        java.lang.String str66 = schema16.getFormat();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test03851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03851");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str5 = annotatedElementSchema4.getPattern();
        annotatedElementSchema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = annotatedElementSchema4.getWriteOnly();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema4.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        schema13.setTitle("#/components/schemas/");
        java.lang.Integer int16 = schema13.getMinLength();
        java.lang.Integer int17 = schema13.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.Contact contact21 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional22 = io.swagger.jaxrs2.OperationParser.getContact(contact21);
        annotatedElementSchema18.setExample((java.lang.Object) contactOptional22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema18.setMinProperties((java.lang.Integer) 100);
        schema13.setExample((java.lang.Object) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema18.deprecated((java.lang.Boolean) false);
        schema32.setDescription("");
        java.lang.Boolean boolean35 = schema32.getDeprecated();
        annotatedElementSchema0.setDefault((java.lang.Object) boolean35);
        java.math.BigDecimal bigDecimal37 = annotatedElementSchema0.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(contactOptional22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test03852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03852");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        java.math.BigDecimal bigDecimal44 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema47.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = schema47.getUniqueItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
    }

    @Test
    public void test03853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03853");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        java.lang.String str8 = schema4.getType();
        schema4.setFormat("");
        schema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        schema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema14.multipleOf(bigDecimal24);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test03854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03854");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        schema7.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = annotatedElementSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema11.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema11.setMultipleOf(bigDecimal21);
        schema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema24.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema24.setNullable((java.lang.Boolean) false);
        annotatedElementSchema24.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema24.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema24.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.properties(strMap46);
        java.lang.Integer int48 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str51 = annotatedElementSchema50.getPattern();
        annotatedElementSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = annotatedElementSchema50.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema50.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema50.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema50.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info61 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional62 = io.swagger.jaxrs2.OperationParser.getInfo(info61);
        java.lang.Class<?> wildcardClass63 = infoOptional62.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray64 = new java.lang.reflect.AnnotatedElement[] { wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList65 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList65, annotatedElementArray64);
        schema60.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList65);
        schema47.addExtension("no description", (java.lang.Object) schema60);
        schema47.setFormat("*/*");
        annotatedElementSchema24.addExtension("hi!", (java.lang.Object) "*/*");
        annotatedElementSchema11.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.Discriminator discriminator73 = null;
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema11.discriminator(discriminator73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(infoOptional62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(annotatedElementArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03855");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.xml(xML50);
        schema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema49.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema49.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema49.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test03856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03856");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = null;
        schema10.setEnum(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03857");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
    }

    @Test
    public void test03858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03858");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal12 = schema9.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test03859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03859");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        java.lang.Integer int17 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        annotatedElementSchema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.nullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
    }

    @Test
    public void test03860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03860");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema48 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str60 = annotatedElementSchema59.getPattern();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema59.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = annotatedElementSchema63.getExtensions();
        schema62.setExtensions(strMap69);
        annotatedElementSchema49.setExtensions(strMap69);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema49.minProperties((java.lang.Integer) (-1));
        schema73.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema76.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema76.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal81 = annotatedElementSchema76.getMultipleOf();
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.format("default");
        io.swagger.oas.models.media.Schema schema84 = schema73.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema85 = schema48.not(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema85.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema87.not(schema88);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test03861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03861");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.maxLength((java.lang.Integer) (-1));
        java.lang.String str15 = schema11.toString();
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMaximum(bigDecimal16);
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03862");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03863");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        schema10.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str15 = schema14.getTitle();
        java.lang.String str16 = schema14.getType();
        io.swagger.oas.models.media.Schema schema18 = schema14.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = schema14.getProperties();
        java.lang.Integer int20 = schema14.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.Contact contact25 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional26 = io.swagger.jaxrs2.OperationParser.getContact(contact25);
        annotatedElementSchema22.setExample((java.lang.Object) contactOptional26);
        annotatedElementSchema22.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema34.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema34.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.Integer int43 = annotatedElementSchema34.getMinItems();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.minimum(bigDecimal44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = annotatedElementSchema34.getExtensions();
        java.lang.String str47 = annotatedElementSchema34.getName();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema33.additionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema51 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(contactOptional26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03864");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int10 = annotatedElementSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema5.$ref("*/*");
        schema16.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str19 = schema16.getType();
        io.swagger.oas.models.media.Schema schema21 = schema16.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema22.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        java.lang.Boolean boolean34 = annotatedElementSchema32.getNullable();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.String str40 = annotatedElementSchema32.getDescription();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator51 = annotatedElementSchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema32.not((io.swagger.oas.models.media.Schema) annotatedElementSchema43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        java.lang.String str61 = annotatedElementSchema53.getName();
        annotatedElementSchema32.setDefault((java.lang.Object) annotatedElementSchema53);
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema53.xml(xML63);
        annotatedElementSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        schema21.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        io.swagger.oas.annotations.info.Contact contact71 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional72 = io.swagger.jaxrs2.OperationParser.getContact(contact71);
        annotatedElementSchema68.setExample((java.lang.Object) contactOptional72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.readOnly((java.lang.Boolean) false);
        java.lang.Object obj80 = schema79.getExample();
        annotatedElementSchema0.setDefault(obj80);
        java.lang.String[] strArray94 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList95 = new java.util.ArrayList<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList95, strArray94);
        io.swagger.oas.models.media.Schema schema97 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList95);
        java.lang.Object obj98 = schema97.getExample();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(contactOptional72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "Optional.empty");
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test03865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03865");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Object obj7 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
    }

    @Test
    public void test03866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03866");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        java.lang.Boolean boolean10 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test03867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03867");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setNot(schema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema30.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.properties(strMap41);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = annotatedElementSchema35.getExtensions();
        annotatedElementSchema30.setExtensions(strMap43);
        schema8.setExtensions(strMap43);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test03868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03868");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.maximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03869");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.name("default");
        java.lang.Integer int30 = schema27.getMaxItems();
        io.swagger.oas.models.media.Schema schema32 = schema27.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema32.maxLength((java.lang.Integer) 0);
        schema36.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03870");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03871");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema26.getMaxItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test03872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03872");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema16.getDeprecated();
        schema16.set$ref("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean44 = annotatedElementSchema32.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema32.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema46.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema46.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema46.setDiscriminator(discriminator51);
        schema16.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema54 = schema46.getNot();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema54);
    }

    @Test
    public void test03873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03873");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        schema6.set$ref("*/*");
        java.lang.Integer int10 = schema6.getMaxLength();
        schema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema13.setNullable((java.lang.Boolean) false);
        annotatedElementSchema13.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema13.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 0);
        boolean boolean32 = schema6.equals((java.lang.Object) schema31);
        java.lang.String str33 = schema31.getPattern();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test03874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03874");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        java.lang.Boolean boolean14 = schema13.getNullable();
        java.lang.Boolean boolean15 = schema13.getUniqueItems();
        schema13.setFormat("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        java.lang.String str27 = annotatedElementSchema19.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema19.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema19.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema19.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        annotatedElementSchema38.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema19.example((java.lang.Object) false);
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = schema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema51 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = schema51.getExternalDocs();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation52);
    }

    @Test
    public void test03875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03875");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) (-1));
        java.lang.String str9 = schema8.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        java.lang.String str14 = schema13.getFormat();
        java.lang.String str15 = schema13.getFormat();
        java.lang.Object obj16 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.not(schema17);
        io.swagger.oas.models.media.Schema schema19 = schema8.example((java.lang.Object) schema13);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03876");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = annotatedElementSchema0.getExtensions();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema13.getProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test03877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03877");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.maxLength((java.lang.Integer) (-1));
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema4.getEnum();
        io.swagger.oas.models.media.Schema schema15 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03878");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        schema4.set$ref("default");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        schema4.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03879");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema16.setExternalDocs(externalDocumentation19);
        java.lang.Boolean boolean21 = schema16.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03880");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema4.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema4.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema4.name("");
        schema3.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema4);
        io.swagger.oas.models.media.Schema schema17 = schema3.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.set$ref("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03881");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema31.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03882");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean30 = annotatedElementSchema29.getReadOnly();
        java.lang.Boolean boolean31 = annotatedElementSchema29.getNullable();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str37 = annotatedElementSchema29.getDescription();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema29.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator48 = annotatedElementSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema29.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = annotatedElementSchema40.getProperties();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema40.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser57 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema53.addExtension("no description", (java.lang.Object) operationParser57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema59.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        annotatedElementSchema59.setRequired((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema53.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList65);
        schema13.setRequired((java.util.List<java.lang.String>) strList65);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema13.multipleOf(bigDecimal71);
        java.lang.String str73 = schema72.get$ref();
        io.swagger.oas.models.media.Schema schema75 = schema72.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03883");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        java.lang.Integer int17 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        annotatedElementSchema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.nullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal45 = schema44.getMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal45);
    }

    @Test
    public void test03884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03884");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 1);
        java.lang.String str18 = schema17.getDescription();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema17.getMaxItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03885");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        java.math.BigDecimal bigDecimal25 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList33);
        java.math.BigDecimal bigDecimal36 = annotatedElementSchema28.getMultipleOf();
        annotatedElementSchema28.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        io.swagger.oas.annotations.info.License license42 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional43 = io.swagger.jaxrs2.OperationParser.getLicense(license42);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema39.example((java.lang.Object) licenseOptional43);
        java.lang.String str45 = annotatedElementSchema39.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = annotatedElementSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema39.deprecated((java.lang.Boolean) false);
        schema48.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema48.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema48.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema28.example((java.lang.Object) schema56);
        schema27.setDefault((java.lang.Object) schema57);
        schema27.setUniqueItems((java.lang.Boolean) false);
        schema27.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(licenseOptional43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test03886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03886");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str21 = schema18.getDescription();
        java.lang.Boolean boolean22 = schema18.getWriteOnly();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03887");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.xml(xML31);
        io.swagger.oas.models.media.Schema schema33 = schema32.getNot();
        java.lang.Boolean boolean34 = schema32.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema36 = schema32.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03888");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema schema15 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML16 = null;
        schema12.setXml(xML16);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03889");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema15.toString();
        io.swagger.oas.models.media.Schema schema18 = schema15.maxProperties((java.lang.Integer) 10);
        schema15.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03890");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.multipleOf(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMaximum(bigDecimal16);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03891");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) annotatedElementSchema27);
        java.lang.Boolean boolean42 = annotatedElementSchema27.getNullable();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
    }

    @Test
    public void test03892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03892");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator36 = annotatedElementSchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        java.lang.String str46 = annotatedElementSchema38.getName();
        annotatedElementSchema17.setDefault((java.lang.Object) annotatedElementSchema38);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.xml(xML48);
        java.lang.String str50 = schema49.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.properties(strMap57);
        schema58.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema58.addProperties("hi!", schema62);
        java.lang.String[] strArray70 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional71 = io.swagger.jaxrs2.OperationParser.getTags(strArray70);
        io.swagger.oas.models.media.Schema schema72 = schema58.example((java.lang.Object) strArray70);
        schema72.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema75.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        annotatedElementSchema75.setRequired((java.util.List<java.lang.String>) strList81);
        java.lang.Integer int84 = annotatedElementSchema75.getMinItems();
        annotatedElementSchema75.setType("hi!");
        java.util.List<java.lang.String> strList87 = annotatedElementSchema75.getRequired();
        io.swagger.oas.models.media.Schema schema88 = schema72.required(strList87);
        boolean boolean89 = schema49.equals((java.lang.Object) schema88);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = schema88.getProperties();
        schema88.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.annotations.Parameter parameter93 = null;
        io.swagger.oas.models.Components components94 = null;
        java.util.Optional<io.swagger.oas.models.parameters.Parameter> parameterOptional95 = io.swagger.jaxrs2.OperationParser.getParameter(parameter93, components94);
        java.lang.Class<?> wildcardClass96 = parameterOptional95.getClass();
        schema88.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass96);
        schema16.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass96);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(tagSetOptional71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(parameterOptional95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test03893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03893");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03894");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setExclusiveMaximum((java.lang.Boolean) true);
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03895");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.annotations.Parameter[] parameterArray20 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray20, components23);
        java.lang.Class<?> wildcardClass25 = parameterListOptional24.getClass();
        schema16.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = schema16.getProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(parameterArray20);
        org.junit.Assert.assertNotNull(parameterListOptional22);
        org.junit.Assert.assertNotNull(parameterListOptional24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test03896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03896");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        schema8.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str11 = schema8.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        java.lang.Object obj20 = annotatedElementSchema12.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema12.getExtensions();
        schema8.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test03897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03897");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.set$ref("default");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        schema11.setDefault((java.lang.Object) annotatedElementSchema14);
        java.lang.String str18 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema20.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        annotatedElementSchema31.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema31.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema20.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema45.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema45.name("");
        io.swagger.oas.models.media.Discriminator discriminator56 = schema55.getDiscriminator();
        schema55.setPattern("*/*");
        boolean boolean59 = schema44.equals((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser64 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema60.addExtension("no description", (java.lang.Object) operationParser64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema66.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        annotatedElementSchema66.setRequired((java.util.List<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema60.required((java.util.List<java.lang.String>) strList72);
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.maximum(bigDecimal76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema77.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema82 = schema44.example((java.lang.Object) schema81);
        java.math.BigDecimal bigDecimal83 = null;
        schema44.setMinimum(bigDecimal83);
        annotatedElementSchema14.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) bigDecimal83);
        java.math.BigDecimal bigDecimal86 = annotatedElementSchema14.getMultipleOf();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal86);
    }

    @Test
    public void test03898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03898");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) (-1));
        java.lang.String str23 = schema22.getName();
        schema22.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test03899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03899");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        schema13.setMaxItems((java.lang.Integer) (-1));
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema13.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal20 = schema13.getMultipleOf();
        java.math.BigDecimal bigDecimal21 = null;
        schema13.setMinimum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test03900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03900");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema4.deprecated((java.lang.Boolean) true);
        java.lang.String str15 = schema14.getName();
        schema14.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03901");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        java.lang.String str16 = schema15.getFormat();
        java.lang.reflect.AnnotatedElement annotatedElement17 = null;
        schema15.addEnumItemObject(annotatedElement17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.String str21 = annotatedElementSchema19.get$ref();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema19.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = annotatedElementSchema19.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.Boolean boolean27 = annotatedElementSchema25.getNullable();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.format("no description");
        annotatedElementSchema19.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        annotatedElementSchema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = annotatedElementSchema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema33.not((io.swagger.oas.models.media.Schema) annotatedElementSchema40);
        schema42.setTitle("#/components/schemas/");
        java.lang.Integer int45 = schema42.getMinLength();
        java.lang.Integer int46 = schema42.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema47.setMinProperties((java.lang.Integer) 100);
        schema42.setExample((java.lang.Object) annotatedElementSchema47);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema47.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema19.not(schema61);
        java.math.BigDecimal bigDecimal63 = annotatedElementSchema19.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = annotatedElementSchema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema19.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = schema66.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema15.example((java.lang.Object) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test03902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03902");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser40 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema36.addExtension("no description", (java.lang.Object) operationParser40);
        annotatedElementSchema36.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str44 = annotatedElementSchema36.getTitle();
        java.lang.Integer int45 = annotatedElementSchema36.getMinProperties();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema36.minLength((java.lang.Integer) 100);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        schema54.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03903");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.Boolean boolean6 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.String str9 = annotatedElementSchema7.get$ref();
        io.swagger.oas.models.media.XML xML10 = null;
        annotatedElementSchema7.setXml(xML10);
        io.swagger.oas.models.media.XML xML12 = annotatedElementSchema7.getXml();
        java.lang.String str13 = annotatedElementSchema7.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        schema23.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        schema23.setType("#/components/schemas/");
        java.lang.String str29 = schema23.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        annotatedElementSchema31.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema31.minItems((java.lang.Integer) 0);
        java.lang.String str44 = schema43.getType();
        io.swagger.oas.models.media.XML xML45 = null;
        schema43.setXml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema23.getProperties();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema7.properties(strMap48);
        annotatedElementSchema0.setProperties(strMap48);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03904");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.get$ref();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03905");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        java.lang.Boolean boolean14 = schema13.getNullable();
        java.lang.Boolean boolean15 = schema13.getUniqueItems();
        schema13.setFormat("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        java.lang.String str27 = annotatedElementSchema19.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema19.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema19.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema19.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        annotatedElementSchema38.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema19.example((java.lang.Object) false);
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = schema13.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema51 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList52 = schema13.getRequired();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test03906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03906");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = schema15.getMinimum();
        schema15.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema15.getDiscriminator();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test03907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03907");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean20 = annotatedElementSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList23 = schema22.getEnum();
        io.swagger.oas.models.media.Schema schema25 = schema22.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(annotatedElementList23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03908");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.Boolean boolean11 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema4.uniqueItems((java.lang.Boolean) false);
        schema15.setPattern("*/*");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03909");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.format("");
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03910");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal28 = null;
        annotatedElementSchema27.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema27.minProperties((java.lang.Integer) 0);
        schema31.setFormat("*/*");
        schema31.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal38 = null;
        annotatedElementSchema37.setMultipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema37.minProperties((java.lang.Integer) 0);
        schema41.setFormat("*/*");
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema45 = schema31.addProperties("no description", schema41);
        schema4.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        io.swagger.oas.annotations.info.Contact contact50 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional51 = io.swagger.jaxrs2.OperationParser.getContact(contact50);
        annotatedElementSchema47.setExample((java.lang.Object) contactOptional51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.readOnly((java.lang.Boolean) false);
        java.lang.String str55 = annotatedElementSchema47.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema47.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema47.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema47.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema47.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema4.example((java.lang.Object) annotatedElementSchema47);
        annotatedElementSchema47.setMaxProperties((java.lang.Integer) 100);
        annotatedElementSchema47.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML69 = annotatedElementSchema47.getXml();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema47.description("default");
        java.lang.Boolean boolean72 = annotatedElementSchema47.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(contactOptional51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(xML69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test03911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03911");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        schema4.setXml(xML12);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema16.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema16.minimum(bigDecimal28);
        java.lang.String str30 = schema29.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema31.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str38 = annotatedElementSchema31.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str40 = annotatedElementSchema39.getPattern();
        annotatedElementSchema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean43 = annotatedElementSchema39.getWriteOnly();
        boolean boolean44 = annotatedElementSchema31.equals((java.lang.Object) annotatedElementSchema39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        annotatedElementSchema31.setExternalDocs(externalDocumentation45);
        java.lang.String[] strArray48 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema29.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int58 = annotatedElementSchema53.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = annotatedElementSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.additionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema52.name("*/*");
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema4.not(schema64);
        io.swagger.oas.models.media.Schema schema69 = schema64.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList70 = schema69.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(annotatedElementList70);
    }

    @Test
    public void test03912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03912");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03913");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema10.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        schema22.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema22.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser43 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema39.addExtension("no description", (java.lang.Object) operationParser43);
        annotatedElementSchema39.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        annotatedElementSchema39.setDiscriminator(discriminator47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema39.multipleOf(bigDecimal49);
        schema50.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean54 = annotatedElementSchema53.getReadOnly();
        java.lang.Boolean boolean55 = annotatedElementSchema53.getNullable();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        annotatedElementSchema53.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.String str61 = annotatedElementSchema53.getDescription();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema53.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema64.setPattern("");
        annotatedElementSchema64.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema64.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator72 = annotatedElementSchema64.getDiscriminator();
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema53.not((io.swagger.oas.models.media.Schema) annotatedElementSchema64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema74.setPattern("");
        annotatedElementSchema74.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema74.minProperties((java.lang.Integer) 10);
        java.lang.String str82 = annotatedElementSchema74.getName();
        annotatedElementSchema53.setDefault((java.lang.Object) annotatedElementSchema74);
        io.swagger.oas.models.media.Schema schema84 = null;
        annotatedElementSchema53.setNot(schema84);
        io.swagger.oas.models.media.Schema schema87 = annotatedElementSchema53.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList88 = annotatedElementSchema53.getRequired();
        schema50.setRequired(strList88);
        io.swagger.oas.models.media.Schema schema90 = schema37.required(strList88);
        schema10.setRequired(strList88);
        schema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema10.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal96 = schema10.getMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(bigDecimal96);
    }

    @Test
    public void test03914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03914");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        schema46.setExternalDocs(externalDocumentation47);
        schema46.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        schema46.setDiscriminator(discriminator53);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03915");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        java.lang.String str8 = schema6.getFormat();
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMaximum(bigDecimal9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        schema18.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema18.getDiscriminator();
        java.math.BigDecimal bigDecimal22 = null;
        schema18.setMultipleOf(bigDecimal22);
        java.math.BigDecimal bigDecimal24 = null;
        schema18.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema18.setXml(xML26);
        schema18.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int35 = annotatedElementSchema30.getMinProperties();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.$ref("*/*");
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.minimum(bigDecimal42);
        java.lang.String str44 = schema43.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str46 = annotatedElementSchema45.getPattern();
        annotatedElementSchema45.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean49 = annotatedElementSchema45.getWriteOnly();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema45.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str52 = annotatedElementSchema45.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str54 = annotatedElementSchema53.getPattern();
        annotatedElementSchema53.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean57 = annotatedElementSchema53.getWriteOnly();
        boolean boolean58 = annotatedElementSchema45.equals((java.lang.Object) annotatedElementSchema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        annotatedElementSchema45.setExternalDocs(externalDocumentation59);
        java.lang.String[] strArray62 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        annotatedElementSchema45.setRequired((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema66 = schema43.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int72 = annotatedElementSchema67.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = annotatedElementSchema67.getExternalDocs();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema67.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema66.additionalProperties(schema75);
        io.swagger.oas.models.media.Schema schema78 = schema66.name("*/*");
        io.swagger.oas.models.media.Schema schema80 = schema78.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema18.not(schema78);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema18);
        java.lang.Integer int83 = schema18.getMinItems();
        java.math.BigDecimal bigDecimal84 = schema18.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(externalDocumentation73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNull(bigDecimal84);
    }

    @Test
    public void test03916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03916");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.nullable((java.lang.Boolean) true);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema10.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass41 = schema38.getClass();
        schema30.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        schema30.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        io.swagger.oas.annotations.info.License license48 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional49 = io.swagger.jaxrs2.OperationParser.getLicense(license48);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema45.example((java.lang.Object) licenseOptional49);
        java.lang.String str51 = annotatedElementSchema45.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = annotatedElementSchema45.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema45.deprecated((java.lang.Boolean) false);
        schema54.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema54.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema58.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.maximum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema63 = schema30.additionalProperties(schema58);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(licenseOptional49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(externalDocumentation52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test03917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03917");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        java.lang.String str20 = schema17.getName();
        schema17.setExclusiveMaximum((java.lang.Boolean) false);
        schema17.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema17.getDiscriminator();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(discriminator25);
    }

    @Test
    public void test03918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03918");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = schema7.getTitle();
        java.math.BigDecimal bigDecimal9 = null;
        schema7.setMaximum(bigDecimal9);
        schema7.setType("");
        java.lang.String str13 = schema7.getFormat();
        schema7.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test03919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03919");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema10.format("#/components/schemas/");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema10.xml(xML22);
        io.swagger.oas.models.media.Schema schema25 = schema23.format("hi!");
        java.lang.String str26 = schema25.getDescription();
        java.lang.Object obj27 = schema25.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test03920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03920");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.minimum(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMinimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03921");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.String str17 = annotatedElementSchema11.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema11.getExternalDocs();
        annotatedElementSchema11.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema23.minProperties((java.lang.Integer) 0);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema22.additionalProperties(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema10.additionalProperties(schema22);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema10.maximum(bigDecimal30);
        java.lang.String str32 = schema10.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test03922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03922");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.String[] strArray17 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal26 = null;
        annotatedElementSchema25.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        schema29.setFormat("*/*");
        schema29.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal36 = null;
        annotatedElementSchema35.setMultipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema35.minProperties((java.lang.Integer) 0);
        schema39.setFormat("*/*");
        java.math.BigDecimal bigDecimal42 = schema39.getMinimum();
        io.swagger.oas.models.media.Schema schema43 = schema29.addProperties("no description", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema29.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str47 = annotatedElementSchema46.getPattern();
        annotatedElementSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = annotatedElementSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = annotatedElementSchema46.getProperties();
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema46);
        schema29.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal58 = null;
        annotatedElementSchema57.setMultipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema57.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema63 = schema61.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean64 = schema63.getExclusiveMinimum();
        schema63.set$ref("*/*");
        java.lang.Integer int67 = schema63.getMaxLength();
        io.swagger.oas.models.media.Schema schema68 = schema29.additionalProperties(schema63);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema63.minimum(bigDecimal69);
        schema24.setNot(schema63);
        java.lang.Boolean boolean72 = schema24.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + true + "'", boolean72, true);
    }

    @Test
    public void test03923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03923");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.nullable((java.lang.Boolean) true);
        java.lang.Integer int16 = schema15.getMinLength();
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str20 = annotatedElementSchema19.getPattern();
        annotatedElementSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = annotatedElementSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        schema28.setTitle("#/components/schemas/");
        java.lang.Integer int31 = schema28.getMinLength();
        java.lang.Integer int32 = schema28.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.Contact contact36 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional37 = io.swagger.jaxrs2.OperationParser.getContact(contact36);
        annotatedElementSchema33.setExample((java.lang.Object) contactOptional37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema33.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema33.setMinProperties((java.lang.Integer) 100);
        schema28.setExample((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema33.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema49.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList55);
        java.lang.Integer int58 = annotatedElementSchema49.getMinItems();
        annotatedElementSchema49.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema49.externalDocs(externalDocumentation61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema49.minimum(bigDecimal63);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.multipleOf(bigDecimal65);
        io.swagger.oas.models.media.Schema schema67 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        io.swagger.oas.models.media.Schema schema69 = schema67.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema71 = schema69.maxItems((java.lang.Integer) (-1));
        schema15.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema71.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(contactOptional37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03924");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 1);
        schema14.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema14.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema14.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema14.getUniqueItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test03925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03925");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = annotatedElementSchema10.getMinProperties();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.example((java.lang.Object) schema19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema20.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03926");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.xml(xML9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema10.getProperties();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test03927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03927");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema11.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03928");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.String[] strArray17 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        java.lang.Object obj25 = schema24.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test03929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03929");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList35);
        schema27.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = schema27.get$ref();
        schema27.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema12.not(schema27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema12.externalDocs(externalDocumentation43);
        schema12.setMinProperties((java.lang.Integer) 100);
        schema12.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03930");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.xml(xML10);
        schema11.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal14 = schema11.getMaximum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test03931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03931");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.xml(xML26);
        schema23.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03932");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int17 = schema12.getMaxProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test03933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03933");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.properties(strMap33);
        schema34.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema34.addProperties("hi!", schema38);
        java.lang.String[] strArray46 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional47 = io.swagger.jaxrs2.OperationParser.getTags(strArray46);
        io.swagger.oas.models.media.Schema schema48 = schema34.example((java.lang.Object) strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema12.addProperties("default", schema34);
        java.math.BigDecimal bigDecimal50 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal50);
        annotatedElementSchema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(tagSetOptional47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03934");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = annotatedElementSchema0.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03935");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.Integer int10 = annotatedElementSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str31 = schema30.getType();
        java.lang.Boolean boolean32 = schema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = schema30.minProperties((java.lang.Integer) 0);
        annotatedElementSchema0.setNot(schema34);
        schema34.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03936");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        java.lang.Object obj10 = schema4.getExample();
        java.lang.String str11 = schema4.get$ref();
        java.math.BigDecimal bigDecimal12 = null;
        schema4.setMinimum(bigDecimal12);
        java.lang.Boolean boolean14 = schema4.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = annotatedElementSchema29.getExtensions();
        schema28.setExtensions(strMap35);
        annotatedElementSchema15.setExtensions(strMap35);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema15.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.exclusiveMinimum((java.lang.Boolean) true);
        schema43.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean46 = schema43.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema48 = schema43.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass49 = schema48.getClass();
        schema4.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass49);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test03937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03937");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList15 = schema14.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(annotatedElementList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03938");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.math.BigDecimal bigDecimal5 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal5);
        java.lang.String str7 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        annotatedElementSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int13 = annotatedElementSchema8.getMinProperties();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema8.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.$ref("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema8.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.example((java.lang.Object) schema21);
        java.lang.Integer int23 = schema21.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj26 = schema21.getExample();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test03939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03939");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = annotatedElementSchema18.getMinItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema18.minimum(bigDecimal28);
        annotatedElementSchema18.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema18.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean34 = annotatedElementSchema18.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema18.getDiscriminator();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema38 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [default]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03940");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema6.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema6.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
    }

    @Test
    public void test03941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03941");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.String str23 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.title("hi!");
        schema20.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema31 = null;
        schema30.setAdditionalProperties(schema31);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03942");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.readOnly((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema15.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema12.example((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema41.getProperties();
        schema41.setDescription("");
        schema41.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema41.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema41.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean51 = schema41.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        io.swagger.oas.annotations.info.Contact contact56 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional57 = io.swagger.jaxrs2.OperationParser.getContact(contact56);
        annotatedElementSchema53.setExample((java.lang.Object) contactOptional57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema60.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema60.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema41.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema66);
        io.swagger.oas.models.media.Schema schema68 = schema32.addProperties("", schema66);
        java.lang.Boolean boolean69 = schema68.getUniqueItems();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(contactOptional57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test03943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03943");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement20 = annotatedElementSchema10.getDefault();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema4.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema22.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema33.required((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        java.lang.String str43 = schema40.getDescription();
        schema25.setDefault((java.lang.Object) str43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = schema25.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema46.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema46.setNullable((java.lang.Boolean) false);
        annotatedElementSchema46.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema46.minItems((java.lang.Integer) 0);
        java.lang.String str59 = schema58.getType();
        io.swagger.oas.models.media.Schema schema61 = schema58.maxItems((java.lang.Integer) 1);
        schema25.setAdditionalProperties(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema25.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema64.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(annotatedElement20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03944");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        schema4.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = schema22.getMultipleOf();
        io.swagger.oas.models.media.Schema schema25 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        schema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema41);
        annotatedElementSchema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema45 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema48 = schema4.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema4.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean51 = schema50.getUniqueItems();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema50.maximum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema53.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03945");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        schema4.setDeprecated((java.lang.Boolean) true);
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema4.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.Contact contact21 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional22 = io.swagger.jaxrs2.OperationParser.getContact(contact21);
        annotatedElementSchema18.setExample((java.lang.Object) contactOptional22);
        annotatedElementSchema18.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema18.type("");
        java.lang.String str28 = schema27.getPattern();
        io.swagger.oas.models.media.Schema schema30 = schema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean32 = annotatedElementSchema31.getReadOnly();
        java.lang.String str33 = annotatedElementSchema31.get$ref();
        io.swagger.oas.models.media.XML xML34 = null;
        annotatedElementSchema31.setXml(xML34);
        java.lang.Boolean boolean36 = annotatedElementSchema31.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema40 = schema30.additionalProperties(schema38);
        io.swagger.oas.models.media.Schema schema42 = schema38.deprecated((java.lang.Boolean) false);
        schema15.setExample((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = schema15.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03946");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str5 = annotatedElementSchema0.getDescription();
        java.lang.Integer int6 = annotatedElementSchema0.getMinLength();
        java.lang.String str7 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03947");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.name("hi!");
        schema13.setPattern("default");
        schema13.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03948");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        schema8.setFormat("");
        io.swagger.oas.models.media.XML xML11 = null;
        schema8.setXml(xML11);
        java.lang.Boolean boolean13 = schema8.getExclusiveMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03949");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        schema4.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema4.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test03950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03950");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema12.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = annotatedElementSchema12.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.minimum(bigDecimal22);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema12.getExtensions();
        java.lang.String str25 = annotatedElementSchema12.getName();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema11.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema28.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = schema28.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test03951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03951");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean8 = annotatedElementSchema0.getDeprecated();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test03952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03952");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.Object obj35 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = annotatedElementSchema38.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema38.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.title("#/components/schemas/");
        schema37.setNot(schema48);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema48.maximum(bigDecimal52);
        schema53.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema53.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03953");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.discriminator(discriminator24);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema28.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema28.setNullable((java.lang.Boolean) false);
        annotatedElementSchema28.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema28.minItems((java.lang.Integer) 0);
        java.lang.String str41 = schema40.getType();
        schema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema40);
        java.math.BigDecimal bigDecimal43 = null;
        schema40.setMaximum(bigDecimal43);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test03954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03954");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.xml(xML26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        java.lang.String str30 = schema27.toString();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str30, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: -1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03955");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = annotatedElementSchema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema26.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str34 = annotatedElementSchema33.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema26.not((io.swagger.oas.models.media.Schema) annotatedElementSchema33);
        schema35.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema35.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema35.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.multipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema25.not(schema41);
        java.lang.Class<?> wildcardClass45 = schema44.getClass();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test03956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03956");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        io.swagger.oas.annotations.info.Contact contact26 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional27 = io.swagger.jaxrs2.OperationParser.getContact(contact26);
        annotatedElementSchema23.setExample((java.lang.Object) contactOptional27);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.readOnly((java.lang.Boolean) false);
        java.lang.String str31 = annotatedElementSchema23.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema23.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        annotatedElementSchema23.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML40 = null;
        annotatedElementSchema23.setXml(xML40);
        io.swagger.oas.models.media.Schema schema42 = schema20.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal44 = null;
        annotatedElementSchema43.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        schema47.setFormat("*/*");
        schema47.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal54 = null;
        annotatedElementSchema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema53.minProperties((java.lang.Integer) 0);
        schema57.setFormat("*/*");
        java.math.BigDecimal bigDecimal60 = schema57.getMinimum();
        io.swagger.oas.models.media.Schema schema61 = schema47.addProperties("no description", schema57);
        schema20.setAdditionalProperties(schema61);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        io.swagger.oas.annotations.info.Contact contact66 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional67 = io.swagger.jaxrs2.OperationParser.getContact(contact66);
        annotatedElementSchema63.setExample((java.lang.Object) contactOptional67);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.readOnly((java.lang.Boolean) false);
        java.lang.String str71 = annotatedElementSchema63.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema63.properties(strMap72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema63.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema63.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema63.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema80 = schema20.example((java.lang.Object) annotatedElementSchema63);
        annotatedElementSchema63.setMaxProperties((java.lang.Integer) 100);
        annotatedElementSchema63.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema63.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean87 = schema86.getUniqueItems();
        schema15.setAdditionalProperties(schema86);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(contactOptional27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(contactOptional67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test03957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03957");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema27.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test03958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03958");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxItems((java.lang.Integer) 100);
        java.lang.String str20 = schema19.getFormat();
        java.lang.Integer int21 = schema19.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03959");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator13 = schema11.getDiscriminator();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList14 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxLength((java.lang.Integer) 1);
        java.lang.Boolean boolean17 = schema11.getUniqueItems();
        java.lang.Object obj18 = null;
        schema11.setDefault(obj18);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNull(annotatedElementList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test03960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03960");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = annotatedElementSchema31.getMinItems();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.minimum(bigDecimal41);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList43 = schema42.getEnum();
        io.swagger.oas.models.media.Schema schema45 = schema42.maxLength((java.lang.Integer) (-1));
        java.lang.Object obj46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema42.example(obj46);
        annotatedElementSchema5.setNot(schema47);
        java.lang.Boolean boolean49 = schema47.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(annotatedElementList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test03961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03961");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        annotatedElementSchema14.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema14.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        annotatedElementSchema34.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema34.nullable((java.lang.Boolean) false);
        schema33.setDefault((java.lang.Object) annotatedElementSchema34);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema34.discriminator(discriminator45);
        annotatedElementSchema14.setExample((java.lang.Object) annotatedElementSchema34);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema14.minimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema schema55 = schema53.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03962");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        schema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema21.deprecated((java.lang.Boolean) true);
        java.lang.String str28 = schema21.getTitle();
        schema21.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema21.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str33 = schema21.getPattern();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test03963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03963");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Object obj12 = schema11.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.Boolean boolean16 = annotatedElementSchema14.getNullable();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.format("no description");
        schema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema14.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema30 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "Optional.empty");
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test03964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03964");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema8.getExclusiveMinimum();
        java.lang.Boolean boolean12 = schema8.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = schema8.getNot();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test03965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03965");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        schema7.setType("no description");
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = schema7.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema23.getType();
        schema23.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema23.setDeprecated((java.lang.Boolean) true);
        schema23.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema7.additionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema37 = schema35.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(xML13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
    }

    @Test
    public void test03966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03966");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int16 = annotatedElementSchema0.getMaxLength();
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03967");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        annotatedElementSchema0.set$ref("");
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minimum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.minProperties((java.lang.Integer) 10);
        java.lang.String str17 = annotatedElementSchema9.getName();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj20 = annotatedElementSchema9.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema9.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        annotatedElementSchema0.setNot(schema22);
        io.swagger.oas.models.media.Schema schema26 = schema22.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test03968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03968");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        java.lang.Integer int13 = schema11.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema11.getProperties();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.xml(xML15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema11.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03969");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.maxLength((java.lang.Integer) 10);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03970");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        java.lang.String str17 = schema16.getType();
        io.swagger.oas.models.media.XML xML18 = schema16.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(xML18);
    }

    @Test
    public void test03971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03971");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        java.lang.String str24 = schema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema26.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        schema40.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03972");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.math.BigDecimal bigDecimal30 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test03973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03973");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        schema15.setProperties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema15.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03974");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        annotatedElementSchema0.setType("hi!");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.not(schema27);
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean31 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test03975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03975");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.getAdditionalProperties();
        java.lang.Boolean boolean8 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator9 = annotatedElementSchema0.getDiscriminator();
        java.util.List<java.lang.String> strList10 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNull(discriminator9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03976");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema19.getNullable();
        java.lang.Boolean boolean21 = schema19.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03977");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = schema29.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03978");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML16 = schema13.getXml();
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: 0\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test03979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03979");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        schema12.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema16 = schema7.example((java.lang.Object) discriminator15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test03980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03980");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema16.getEnum();
        annotatedElementSchema16.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = annotatedElementSchema24.getMinItems();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        io.swagger.oas.models.media.XML xML37 = null;
        annotatedElementSchema16.setXml(xML37);
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema42.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal48 = schema47.getMinimum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
    }

    @Test
    public void test03981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03981");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.pattern("#/components/schemas/");
        java.lang.Boolean boolean21 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal22 = null;
        schema18.setMaximum(bigDecimal22);
        schema7.setNot(schema18);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList25 = schema7.getEnum();
        java.lang.Boolean boolean26 = schema7.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(annotatedElementList25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test03982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03982");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str37 = schema36.getName();
        schema36.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test03983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03983");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema13.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList19);
        java.lang.Integer int22 = annotatedElementSchema13.getMinItems();
        annotatedElementSchema13.setType("hi!");
        java.util.List<java.lang.String> strList25 = annotatedElementSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema10.required(strList25);
        schema26.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj31 = schema26.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test03984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03984");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray25 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        io.swagger.oas.models.media.Schema schema28 = schema21.required((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03985");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("");
        java.lang.Integer int14 = schema13.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema15.setMultipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList20 = annotatedElementSchema15.getEnum();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.description("hi!");
        java.lang.Object obj23 = schema22.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        io.swagger.oas.annotations.info.License license27 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional28 = io.swagger.jaxrs2.OperationParser.getLicense(license27);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema24.example((java.lang.Object) licenseOptional28);
        java.lang.String str30 = annotatedElementSchema24.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = annotatedElementSchema24.getExternalDocs();
        annotatedElementSchema24.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema22.additionalProperties(schema35);
        schema13.setNot(schema35);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList38 = null;
        schema13.setEnum(annotatedElementList38);
        schema13.setDeprecated((java.lang.Boolean) true);
        schema13.setTitle("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(annotatedElementList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(licenseOptional28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03986");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = schema14.getMultipleOf();
        schema14.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test03987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03987");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03988");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema7.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03989");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        annotatedElementSchema0.setDiscriminator(discriminator6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.String str10 = schema9.getDescription();
        java.lang.String str11 = schema9.toString();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test03990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03990");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema33.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema33.setNullable((java.lang.Boolean) false);
        annotatedElementSchema33.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema33.minItems((java.lang.Integer) 0);
        schema45.setType("");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.multipleOf(bigDecimal48);
        annotatedElementSchema0.setExample((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema52 = schema45.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03991");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        java.lang.Class<?> wildcardClass17 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test03992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03992");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.String str11 = schema10.getDescription();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03993");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = schema40.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int51 = schema40.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test03994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03994");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) (-1));
        schema16.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03995");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.externalDocs(externalDocumentation15);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03996");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        schema9.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03997");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.externalDocs(externalDocumentation10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03998");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03999");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(schema8);
    }

    @Test
    public void test04000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test04000");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        io.swagger.oas.models.media.Schema schema15 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }
}

