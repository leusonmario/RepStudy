import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test01501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01501");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal6 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal6);
    }

    @Test
    public void test01502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01502");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.List<java.lang.String> strList12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.required(strList12);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema16.pattern("hi!");
        schema25.setMinProperties((java.lang.Integer) 10);
        schema13.addExtension("*/*", (java.lang.Object) schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema25.getProperties();
        java.lang.String str30 = schema25.toString();
        schema25.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str30, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01503");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema4.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML11 = schema10.getXml();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML11);
    }

    @Test
    public void test01504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01504");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.maximum(bigDecimal15);
        schema13.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01505");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema4.additionalProperties(schema8);
        schema4.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal12 = schema4.getMaximum();
        schema4.setUniqueItems((java.lang.Boolean) false);
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test01506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01506");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        schema15.setProperties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema15.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int20 = schema19.getMaxItems();
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test01507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01507");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.String[] strArray17 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        io.swagger.oas.annotations.info.Contact contact27 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional28 = io.swagger.jaxrs2.OperationParser.getContact(contact27);
        annotatedElementSchema24.setExample((java.lang.Object) contactOptional28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = schema31.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.xml(xML37);
        java.lang.Boolean boolean39 = schema38.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        java.lang.Integer int71 = annotatedElementSchema61.getMinItems();
        java.lang.Boolean boolean72 = annotatedElementSchema61.getDeprecated();
        annotatedElementSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema61.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema61.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema78.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList81 = schema78.getRequired();
        schema38.setRequired(strList81);
        annotatedElementSchema0.setRequired(strList81);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(contactOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strList81);
    }

    @Test
    public void test01508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01508");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal17 = schema16.getMultipleOf();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test01509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01509");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema17.setDiscriminator(discriminator18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        schema30.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema30.getReadOnly();
        java.lang.String str36 = schema30.getPattern();
        io.swagger.oas.models.media.Schema schema37 = schema17.example((java.lang.Object) schema30);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01510");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.lang.reflect.AnnotatedElement annotatedElement32 = annotatedElementSchema11.getDefault();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray34 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces35 = null;
        javax.ws.rs.Produces produces36 = null;
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional38 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray34, produces35, produces36, components37);
        javax.ws.rs.Produces produces39 = null;
        javax.ws.rs.Produces produces40 = null;
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional42 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray34, produces39, produces40, components41);
        javax.ws.rs.Produces produces43 = null;
        javax.ws.rs.Produces produces44 = null;
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional46 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray34, produces43, produces44, components45);
        annotatedElementSchema11.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces43);
        java.lang.Integer int48 = annotatedElementSchema11.getMaxProperties();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema11);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema0.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema0.getAdditionalProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(annotatedElement32);
        org.junit.Assert.assertNotNull(apiResponseArray34);
        org.junit.Assert.assertNotNull(apiResponsesOptional38);
        org.junit.Assert.assertNotNull(apiResponsesOptional42);
        org.junit.Assert.assertNotNull(apiResponsesOptional46);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
    }

    @Test
    public void test01511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01511");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema16.getExtensions();
        io.swagger.oas.models.media.Schema schema19 = schema16.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema22.setNullable((java.lang.Boolean) false);
        annotatedElementSchema22.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.minItems((java.lang.Integer) 0);
        schema34.setType("");
        java.math.BigDecimal bigDecimal37 = schema34.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str39 = annotatedElementSchema38.getPattern();
        annotatedElementSchema38.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = annotatedElementSchema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema38.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema38.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema38.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.properties(strMap48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str51 = annotatedElementSchema50.getPattern();
        annotatedElementSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = annotatedElementSchema50.getWriteOnly();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema50.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema50.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema50.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema50.properties(strMap60);
        java.lang.String str62 = schema61.getName();
        io.swagger.oas.annotations.info.Info info63 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional64 = io.swagger.jaxrs2.OperationParser.getInfo(info63);
        java.lang.Class<?> wildcardClass65 = infoOptional64.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema66.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        annotatedElementSchema66.setRequired((java.util.List<java.lang.String>) strList72);
        java.lang.Integer int75 = annotatedElementSchema66.getMinItems();
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema66.minimum(bigDecimal76);
        annotatedElementSchema66.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass80 = annotatedElementSchema66.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema81 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema81.setPattern("");
        annotatedElementSchema81.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = null;
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema81.properties(strMap87);
        io.swagger.oas.models.media.Schema schema90 = schema88.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass91 = schema88.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray92 = new java.lang.reflect.AnnotatedElement[] { wildcardClass65, wildcardClass80, wildcardClass91 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList93 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList93, annotatedElementArray92);
        schema61.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList93);
        schema49.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList93);
        schema34.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList93);
        schema21.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList93);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(infoOptional64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(annotatedElementArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test01512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01512");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.externalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maximum(bigDecimal12);
        schema13.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01513");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.discriminator(discriminator11);
        java.lang.String str13 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str16 = schema15.toString();
        schema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = schema15.getProperties();
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test01514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01514");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        java.lang.Class<?> wildcardClass39 = annotatedElementSchema18.getClass();
        schema17.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int44 = schema43.getMaxLength();
        schema43.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema43.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01515");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema64.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        annotatedElementSchema64.setRequired((java.util.List<java.lang.String>) strList70);
        java.lang.Integer int73 = annotatedElementSchema64.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement74 = annotatedElementSchema64.getDefault();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema76.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema16.not(schema76);
        java.lang.Class<?> wildcardClass80 = schema76.getClass();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(annotatedElement74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test01516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01516");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01517");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean31 = annotatedElementSchema0.equals((java.lang.Object) true);
        annotatedElementSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test01518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01518");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        java.lang.Boolean boolean8 = schema4.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test01519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01519");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        annotatedElementSchema0.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        java.lang.reflect.AnnotatedElement annotatedElement36 = annotatedElementSchema15.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema15.setNot(schema43);
        annotatedElementSchema15.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.addProperties("hi!", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = annotatedElementSchema15.getEnum();
        java.math.BigDecimal bigDecimal51 = null;
        annotatedElementSchema15.setMultipleOf(bigDecimal51);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(annotatedElement36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
    }

    @Test
    public void test01520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01520");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema17.setExclusiveMaximum((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test01521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01521");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        java.lang.Class<?> wildcardClass29 = annotatedElementSchema8.getClass();
        schema7.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass29);
        io.swagger.oas.models.media.Schema schema32 = schema7.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML35 = null;
        schema34.setXml(xML35);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01522");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.properties(strMap22);
        java.util.List<java.lang.String> strList24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.required(strList24);
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.pattern("hi!");
        schema37.setMinProperties((java.lang.Integer) 10);
        schema25.addExtension("*/*", (java.lang.Object) schema37);
        schema11.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.XML xML42 = null;
        schema11.setXml(xML42);
        java.math.BigDecimal bigDecimal44 = null;
        schema11.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema11.getDiscriminator();
        schema11.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator46);
    }

    @Test
    public void test01523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01523");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = annotatedElementSchema15.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema15.writeOnly((java.lang.Boolean) false);
        schema23.setFormat("");
        schema23.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema23.uniqueItems((java.lang.Boolean) true);
        schema12.addExtension("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01524");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.Boolean boolean9 = annotatedElementSchema7.getNullable();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema7.setRequired((java.util.List<java.lang.String>) strList12);
        java.lang.String str15 = annotatedElementSchema7.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int21 = annotatedElementSchema16.getMinProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray27 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema23.required((java.util.List<java.lang.String>) strList28);
        annotatedElementSchema7.setDefault((java.lang.Object) strList28);
        io.swagger.oas.models.media.Schema schema32 = schema6.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema34 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01525");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser19 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema15.addExtension("no description", (java.lang.Object) operationParser19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = null;
        schema22.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema29 = schema14.additionalProperties(schema22);
        schema29.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01526");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema64 = schema32.name("#/components/schemas/");
        schema64.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean67 = schema64.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setPattern("");
        io.swagger.oas.annotations.info.Contact contact71 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional72 = io.swagger.jaxrs2.OperationParser.getContact(contact71);
        annotatedElementSchema68.setExample((java.lang.Object) contactOptional72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.readOnly((java.lang.Boolean) false);
        java.lang.String str76 = annotatedElementSchema68.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema68.properties(strMap77);
        java.lang.String str79 = annotatedElementSchema68.getDescription();
        java.lang.reflect.AnnotatedElement annotatedElement80 = annotatedElementSchema68.getDefault();
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema68.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema68.exclusiveMaximum((java.lang.Boolean) false);
        schema64.setDefault((java.lang.Object) schema84);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema84.multipleOf(bigDecimal86);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(contactOptional72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(annotatedElement80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test01527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01527");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema7.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema7.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema7.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal14 = schema13.getMultipleOf();
        io.swagger.oas.models.media.Schema schema16 = schema13.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema18.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMinimum((java.lang.Boolean) false);
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema32);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema13);
        java.lang.Integer int35 = annotatedElementSchema0.getMaxProperties();
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test01528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01528");
        io.swagger.oas.models.media.Schema<io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>> annotatedElementSchemaSchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>>();
    }

    @Test
    public void test01529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01529");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int32 = annotatedElementSchema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser42 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema38.addExtension("no description", (java.lang.Object) operationParser42);
        annotatedElementSchema38.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        annotatedElementSchema38.setDiscriminator(discriminator46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.multipleOf(bigDecimal48);
        java.lang.Class<?> wildcardClass50 = schema49.getClass();
        annotatedElementSchema27.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass50);
        schema24.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass50);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test01530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01530");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.multipleOf(bigDecimal11);
        java.lang.Boolean boolean13 = schema10.getExclusiveMaximum();
        schema10.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str16 = schema10.getType();
        java.lang.Integer int17 = schema10.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test01531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01531");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser18 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema14.addExtension("no description", (java.lang.Object) operationParser18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema20.setRequired((java.util.List<java.lang.String>) strList26);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema14.required((java.util.List<java.lang.String>) strList26);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        annotatedElementSchema0.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        io.swagger.oas.annotations.info.License license39 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional40 = io.swagger.jaxrs2.OperationParser.getLicense(license39);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema36.example((java.lang.Object) licenseOptional40);
        schema41.setMaxProperties((java.lang.Integer) 10);
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) schema41);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        java.lang.String str47 = annotatedElementSchema0.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(licenseOptional40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test01532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01532");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        schema8.setFormat("");
        java.lang.Boolean boolean13 = schema8.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test01533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01533");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        java.math.BigDecimal bigDecimal48 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema47.setMultipleOf(bigDecimal48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
    }

    @Test
    public void test01534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01534");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema5.exclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema5.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean35 = annotatedElementSchema5.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test01535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01535");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNull(externalDocumentation13);
    }

    @Test
    public void test01536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01536");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        java.lang.Boolean boolean14 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01537");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema21.minItems((java.lang.Integer) 0);
        annotatedElementSchema21.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int38 = schema37.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test01538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01538");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str17 = annotatedElementSchema16.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema16.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema20.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.name("");
        schema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema schema33 = schema19.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema8.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        java.lang.Boolean boolean35 = schema34.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test01539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01539");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema schema16 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema13.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01540");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema11.xml(xML46);
        java.lang.Boolean boolean48 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema47.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01541");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        java.math.BigDecimal bigDecimal10 = null;
        annotatedElementSchema0.setMinimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        java.lang.Boolean boolean17 = schema15.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test01542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01542");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.util.List<java.lang.String> strList14 = null;
        schema13.setRequired(strList14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        io.swagger.oas.annotations.info.Contact contact20 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional21 = io.swagger.jaxrs2.OperationParser.getContact(contact20);
        annotatedElementSchema17.setExample((java.lang.Object) contactOptional21);
        annotatedElementSchema17.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.nullable((java.lang.Boolean) false);
        java.lang.Integer int27 = schema26.getMaxItems();
        java.lang.Boolean boolean28 = schema26.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contactOptional21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01543");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str30 = annotatedElementSchema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        annotatedElementSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = annotatedElementSchema31.getWriteOnly();
        boolean boolean36 = annotatedElementSchema23.equals((java.lang.Object) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal37 = null;
        annotatedElementSchema23.setMaximum(bigDecimal37);
        java.math.BigDecimal bigDecimal39 = null;
        annotatedElementSchema23.setMinimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        annotatedElementSchema23.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01544");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.discriminator(discriminator20);
        java.math.BigDecimal bigDecimal22 = schema21.getMinimum();
        java.lang.Boolean boolean23 = schema21.getReadOnly();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test01545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01545");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("hi!");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.multipleOf(bigDecimal16);
        schema17.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01546");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 10);
        schema19.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema19.addProperties("default", schema25);
        schema11.setExample((java.lang.Object) schema25);
        java.lang.Integer int28 = schema11.getMaxLength();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test01547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01547");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.lang.Integer int5 = annotatedElementSchema0.getMaxItems();
        org.junit.Assert.assertNull(int5);
    }

    @Test
    public void test01548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01548");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.maxLength((java.lang.Integer) (-1));
        java.lang.String str15 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML18 = null;
        schema11.setXml(xML18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01549");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema7.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema7.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema7.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01550");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.String str12 = annotatedElementSchema0.getDescription();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01551");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int15 = annotatedElementSchema10.getMinProperties();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.example((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.Contact contact24 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional25 = io.swagger.jaxrs2.OperationParser.getContact(contact24);
        annotatedElementSchema21.setExample((java.lang.Object) contactOptional25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int41 = annotatedElementSchema36.getMinProperties();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray47 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        io.swagger.oas.models.media.Schema schema50 = schema43.required((java.util.List<java.lang.String>) strList48);
        annotatedElementSchema27.setDefault((java.lang.Object) strList48);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema21.required((java.util.List<java.lang.String>) strList48);
        schema20.setRequired((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema55 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass56 = schema55.getClass();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(contactOptional25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test01552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01552");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setWriteOnly((java.lang.Boolean) true);
        schema10.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01553");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema34 = schema33.getNot();
        schema33.setDeprecated((java.lang.Boolean) false);
        java.lang.String str37 = schema33.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema33.discriminator(discriminator38);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        schema39.setDiscriminator(discriminator40);
        io.swagger.oas.models.media.Schema schema43 = schema39.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema43.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01554");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        annotatedElementSchema0.setDiscriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01555");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.Integer int24 = schema9.getMinProperties();
        io.swagger.oas.models.media.XML xML25 = null;
        schema9.setXml(xML25);
        java.math.BigDecimal bigDecimal27 = schema9.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test01556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01556");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean14 = annotatedElementSchema13.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema13.getNullable();
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        annotatedElementSchema13.setRequired((java.util.List<java.lang.String>) strList18);
        schema10.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.String str22 = schema10.get$ref();
        schema10.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.nullable((java.lang.Boolean) true);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema31.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.$ref("*/*");
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema31.minimum(bigDecimal43);
        java.lang.String str45 = schema44.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str47 = annotatedElementSchema46.getPattern();
        annotatedElementSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = annotatedElementSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str53 = annotatedElementSchema46.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str55 = annotatedElementSchema54.getPattern();
        annotatedElementSchema54.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = annotatedElementSchema54.getWriteOnly();
        boolean boolean59 = annotatedElementSchema46.equals((java.lang.Object) annotatedElementSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        annotatedElementSchema46.setExternalDocs(externalDocumentation60);
        java.lang.String[] strArray63 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = schema44.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema10.required((java.util.List<java.lang.String>) strList64);
        java.lang.Boolean boolean69 = schema68.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertEquals("'" + boolean69 + "' != '" + false + "'", boolean69, false);
    }

    @Test
    public void test01557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01557");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        io.swagger.oas.models.media.Schema schema9 = schema4.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.String str12 = annotatedElementSchema10.get$ref();
        io.swagger.oas.models.media.XML xML13 = null;
        annotatedElementSchema10.setXml(xML13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = annotatedElementSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema16.format("no description");
        annotatedElementSchema10.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str25 = annotatedElementSchema24.getPattern();
        annotatedElementSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = annotatedElementSchema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str32 = annotatedElementSchema31.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema24.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        schema33.setTitle("#/components/schemas/");
        java.lang.Integer int36 = schema33.getMinLength();
        java.lang.Integer int37 = schema33.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.Contact contact41 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional42 = io.swagger.jaxrs2.OperationParser.getContact(contact41);
        annotatedElementSchema38.setExample((java.lang.Object) contactOptional42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema38.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema38.setMinProperties((java.lang.Integer) 100);
        schema33.setExample((java.lang.Object) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema38.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema10.not(schema52);
        schema9.setAdditionalProperties(schema53);
        io.swagger.oas.models.media.Schema schema56 = schema53.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator57 = schema53.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(contactOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
    }

    @Test
    public void test01558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01558");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator16 = annotatedElementSchema0.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
    }

    @Test
    public void test01559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01559");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.lang.String str10 = schema4.getName();
        io.swagger.oas.models.media.Schema schema12 = schema4.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        schema4.setProperties(strMap13);
        java.lang.Integer int15 = schema4.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema4.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        io.swagger.oas.annotations.info.License license21 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional22 = io.swagger.jaxrs2.OperationParser.getLicense(license21);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema18.example((java.lang.Object) licenseOptional22);
        java.lang.String str24 = annotatedElementSchema18.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = annotatedElementSchema18.getExternalDocs();
        annotatedElementSchema18.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema17.not((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(licenseOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01560");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.minLength((java.lang.Integer) (-1));
        schema65.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test01561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01561");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.maximum(bigDecimal13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01562");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.maxLength((java.lang.Integer) (-1));
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01563");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        java.math.BigDecimal bigDecimal11 = annotatedElementSchema0.getMaximum();
        java.math.BigDecimal bigDecimal12 = annotatedElementSchema0.getMinimum();
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test01564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01564");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.addRequiredItem("no description");
        io.swagger.oas.models.media.XML xML18 = schema17.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(xML18);
    }

    @Test
    public void test01565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01565");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema4.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = schema4.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01566");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema31.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str43 = annotatedElementSchema36.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        boolean boolean49 = annotatedElementSchema36.equals((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema36.setExternalDocs(externalDocumentation50);
        java.lang.String[] strArray53 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = schema35.required((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = schema23.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema60 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj61 = schema60.getExample();
        io.swagger.oas.models.media.Schema schema63 = schema60.exclusiveMaximum((java.lang.Boolean) false);
        schema60.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01567");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema7.maxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema7.getEnum();
        schema7.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str15 = schema7.getDescription();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01568");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList25 = schema9.getEnum();
        schema9.setMinProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema9.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(annotatedElementList25);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test01569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01569");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String str13 = schema12.getTitle();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test01570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01570");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01571");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        schema13.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test01572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01572");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.xml(xML8);
        java.lang.String str10 = schema9.getTitle();
        java.lang.Integer int11 = schema9.getMaxLength();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test01573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01573");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        java.util.List<java.lang.String> strList25 = annotatedElementSchema11.getRequired();
        annotatedElementSchema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.getAdditionalProperties();
        java.math.BigDecimal bigDecimal29 = annotatedElementSchema11.getMinimum();
        annotatedElementSchema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean32 = annotatedElementSchema11.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01574");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema78 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema78.setPattern("");
        annotatedElementSchema78.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int83 = annotatedElementSchema78.getMinProperties();
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema78.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema78.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema78.$ref("*/*");
        java.lang.Boolean boolean90 = annotatedElementSchema78.getExclusiveMinimum();
        schema77.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema78);
        schema77.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal94 = schema77.getMultipleOf();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test01575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01575");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        schema9.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema9.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema9.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01576");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setTitle("");
        java.lang.reflect.AnnotatedElement annotatedElement17 = null;
        annotatedElementSchema0.addEnumItemObject(annotatedElement17);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01577");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMaxProperties((java.lang.Integer) 1);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int22 = schema17.getMaxItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test01578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01578");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal15 = null;
        annotatedElementSchema14.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        annotatedElementSchema14.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema14.getType();
        io.swagger.oas.models.media.Schema schema24 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema14);
        java.lang.String str25 = annotatedElementSchema14.get$ref();
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01579");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        java.math.BigDecimal bigDecimal44 = annotatedElementSchema0.getMultipleOf();
        java.lang.Boolean boolean45 = annotatedElementSchema0.getDeprecated();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema0.setTitle("");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test01580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01580");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema64.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        annotatedElementSchema64.setRequired((java.util.List<java.lang.String>) strList70);
        java.lang.Integer int73 = annotatedElementSchema64.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement74 = annotatedElementSchema64.getDefault();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema64.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema76.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema16.not(schema76);
        io.swagger.oas.models.media.Schema schema81 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(annotatedElement74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test01581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01581");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        annotatedElementSchema5.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.minProperties((java.lang.Integer) 10);
        java.lang.String str13 = annotatedElementSchema5.getName();
        annotatedElementSchema5.setMinItems((java.lang.Integer) 0);
        schema2.setExample((java.lang.Object) annotatedElementSchema5);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema5.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = annotatedElementSchema5.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test01582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01582");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMaxProperties();
        java.lang.Integer int13 = schema9.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.discriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test01583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01583");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = schema22.pattern("*/*");
        io.swagger.oas.models.media.Schema schema27 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setNullable((java.lang.Boolean) true);
        java.lang.String str30 = schema27.getType();
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.discriminator(discriminator31);
        annotatedElementSchema0.setNot(schema32);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01584");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        schema8.setDiscriminator(discriminator9);
        io.swagger.oas.models.media.Schema schema11 = schema8.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema8.getProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test01585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01585");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.xml(xML50);
        schema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema49.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema49.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test01586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01586");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal21 = null;
        annotatedElementSchema20.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema20.minProperties((java.lang.Integer) 0);
        schema24.setFormat("*/*");
        schema24.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal31 = null;
        annotatedElementSchema30.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        schema34.setFormat("*/*");
        java.math.BigDecimal bigDecimal37 = schema34.getMinimum();
        io.swagger.oas.models.media.Schema schema38 = schema24.addProperties("no description", schema34);
        java.math.BigDecimal bigDecimal39 = schema34.getMultipleOf();
        io.swagger.oas.models.media.Schema schema40 = schema19.not(schema34);
        io.swagger.oas.models.media.XML xML41 = schema34.getXml();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
    }

    @Test
    public void test01587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01587");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str27 = annotatedElementSchema26.getPattern();
        annotatedElementSchema26.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.properties(strMap36);
        java.lang.Integer int38 = schema37.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info51 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional52 = io.swagger.jaxrs2.OperationParser.getInfo(info51);
        java.lang.Class<?> wildcardClass53 = infoOptional52.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray54 = new java.lang.reflect.AnnotatedElement[] { wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList55 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList55, annotatedElementArray54);
        schema50.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList55);
        schema37.addExtension("no description", (java.lang.Object) schema50);
        java.lang.String str59 = schema50.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        io.swagger.oas.annotations.info.Contact contact64 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional65 = io.swagger.jaxrs2.OperationParser.getContact(contact64);
        annotatedElementSchema61.setExample((java.lang.Object) contactOptional65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.pattern("#/components/schemas/");
        schema50.addExtension("no description", (java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema26.additionalProperties(schema50);
        java.lang.Boolean boolean73 = schema72.getDeprecated();
        java.lang.Boolean boolean74 = schema72.getReadOnly();
        io.swagger.oas.models.media.Schema schema75 = schema24.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema77 = schema72.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(infoOptional52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(annotatedElementArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str59, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test01588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01588");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        java.math.BigDecimal bigDecimal16 = null;
        annotatedElementSchema0.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.xml(xML18);
        java.lang.Boolean boolean20 = annotatedElementSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + true + "'", boolean20, true);
    }

    @Test
    public void test01589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01589");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema13.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test01590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01590");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.lang.String str5 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test01591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01591");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean13 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 100);
        schema17.setMaxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        schema17.setMinimum(bigDecimal20);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01592");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        schema10.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema10.getDiscriminator();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
    }

    @Test
    public void test01593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01593");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.xml(xML43);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.properties(strMap52);
        schema53.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema53.addProperties("hi!", schema57);
        java.lang.String[] strArray65 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        io.swagger.oas.models.media.Schema schema67 = schema53.example((java.lang.Object) strArray65);
        schema67.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema70.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        annotatedElementSchema70.setRequired((java.util.List<java.lang.String>) strList76);
        java.lang.Integer int79 = annotatedElementSchema70.getMinItems();
        annotatedElementSchema70.setType("hi!");
        java.util.List<java.lang.String> strList82 = annotatedElementSchema70.getRequired();
        io.swagger.oas.models.media.Schema schema83 = schema67.required(strList82);
        boolean boolean84 = schema44.equals((java.lang.Object) schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema83.getProperties();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema0.properties(strMap85);
        java.lang.Boolean boolean87 = schema86.getExclusiveMaximum();
        schema86.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test01594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01594");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = null;
        schema9.setNot(schema12);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01595");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = annotatedElementSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser28 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema24.addExtension("no description", (java.lang.Object) operationParser28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int41 = annotatedElementSchema11.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test01596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01596");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.format("");
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test01597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01597");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        java.lang.Object obj12 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema14.title("");
        io.swagger.oas.models.media.Schema schema18 = schema14.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01598");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Integer int13 = schema12.getMinItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test01599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01599");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
    }

    @Test
    public void test01600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01600");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.lang.String str14 = schema13.getTitle();
        schema13.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean28 = schema13.getExclusiveMinimum();
        java.lang.Boolean boolean29 = schema13.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test01601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01601");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        schema10.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.String str15 = schema14.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema16.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema32.setFormat("*/*");
        annotatedElementSchema32.setMaxLength((java.lang.Integer) (-1));
        annotatedElementSchema32.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.addExtension("", (java.lang.Object) annotatedElementSchema32);
        java.math.BigDecimal bigDecimal45 = annotatedElementSchema32.getMinimum();
        java.lang.Class<?> wildcardClass46 = annotatedElementSchema32.getClass();
        schema14.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass46);
        schema14.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test01602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01602");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema3 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str4 = annotatedElementSchema3.getPattern();
        annotatedElementSchema3.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = annotatedElementSchema3.getWriteOnly();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema3.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema3.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema3.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema3.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        io.swagger.oas.models.media.Schema schema46 = null;
        annotatedElementSchema15.setNot(schema46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema15.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList50 = annotatedElementSchema15.getRequired();
        annotatedElementSchema3.setRequired(strList50);
        annotatedElementSchema0.setRequired(strList50);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean55 = annotatedElementSchema54.getReadOnly();
        java.lang.Boolean boolean56 = annotatedElementSchema54.getNullable();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema54.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.String str62 = annotatedElementSchema54.getDescription();
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema54.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema65.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator73 = annotatedElementSchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema54.not((io.swagger.oas.models.media.Schema) annotatedElementSchema65);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema75.minProperties((java.lang.Integer) 10);
        java.lang.String str83 = annotatedElementSchema75.getName();
        annotatedElementSchema54.setDefault((java.lang.Object) annotatedElementSchema75);
        io.swagger.oas.models.media.Schema schema85 = null;
        annotatedElementSchema54.setNot(schema85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema54.addRequiredItem("*/*");
        java.lang.String str89 = annotatedElementSchema54.getName();
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        java.lang.Integer int91 = annotatedElementSchema54.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
    }

    @Test
    public void test01603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01603");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        schema17.setNullable((java.lang.Boolean) false);
        java.lang.Integer int20 = schema17.getMaxItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test01604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01604");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        java.lang.String str17 = schema8.toString();
        io.swagger.oas.models.media.Schema schema19 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01605");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) 1);
        schema14.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01606");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema24.title("no description");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01607");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        java.lang.Integer int10 = annotatedElementSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
    }

    @Test
    public void test01608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01608");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean6 = annotatedElementSchema5.getReadOnly();
        java.lang.Boolean boolean7 = annotatedElementSchema5.getNullable();
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        annotatedElementSchema5.setRequired((java.util.List<java.lang.String>) strList10);
        java.lang.String str13 = annotatedElementSchema5.getDescription();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator24 = annotatedElementSchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema5.not((io.swagger.oas.models.media.Schema) annotatedElementSchema16);
        java.lang.reflect.AnnotatedElement annotatedElement26 = annotatedElementSchema5.getDefault();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema5.minimum(bigDecimal27);
        annotatedElementSchema0.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema5);
        java.lang.String str30 = annotatedElementSchema5.getPattern();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema5.getNot();
        annotatedElementSchema5.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(annotatedElement26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01609");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        schema7.setMaxLength((java.lang.Integer) 1);
        java.lang.String str14 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema7.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = annotatedElementSchema17.getProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean27 = schema26.getWriteOnly();
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema26.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.String str37 = annotatedElementSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        java.lang.String str46 = schema45.getTitle();
        annotatedElementSchema32.setAdditionalProperties(schema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setPattern("");
        annotatedElementSchema50.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema50.properties(strMap56);
        io.swagger.oas.models.media.Schema schema59 = schema57.minLength((java.lang.Integer) 10);
        schema59.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator62 = schema59.getDiscriminator();
        schema59.setType("#/components/schemas/");
        java.lang.String str65 = schema59.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema67 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema67.setPattern("");
        annotatedElementSchema67.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema67.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema67.setNullable((java.lang.Boolean) false);
        annotatedElementSchema67.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema67.minItems((java.lang.Integer) 0);
        java.lang.String str80 = schema79.getType();
        io.swagger.oas.models.media.XML xML81 = null;
        schema79.setXml(xML81);
        io.swagger.oas.models.media.Schema schema83 = schema59.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema59.getProperties();
        io.swagger.oas.models.media.Schema schema85 = schema49.properties(strMap84);
        io.swagger.oas.models.media.Schema schema86 = schema26.properties(strMap84);
        schema7.setProperties(strMap84);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test01610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01610");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        schema30.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        io.swagger.oas.annotations.info.License license36 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional37 = io.swagger.jaxrs2.OperationParser.getLicense(license36);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema33.example((java.lang.Object) licenseOptional37);
        java.lang.Boolean boolean39 = schema38.getReadOnly();
        io.swagger.oas.models.media.Schema schema41 = schema38.nullable((java.lang.Boolean) true);
        schema30.setDefault((java.lang.Object) schema41);
        java.lang.String str43 = schema30.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(licenseOptional37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "*/*" + "'", str43, "*/*");
    }

    @Test
    public void test01611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01611");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal12);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test01612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01612");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema13.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMultipleOf(bigDecimal22);
        java.lang.String[] strArray25 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray25);
        schema21.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional26);
        java.math.BigDecimal bigDecimal28 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema30.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        java.math.BigDecimal bigDecimal37 = annotatedElementSchema30.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.$ref("*/*");
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema38.format("default");
        java.lang.Boolean boolean52 = schema51.getNullable();
        java.lang.Boolean boolean53 = schema51.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser58 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema54.addExtension("no description", (java.lang.Object) operationParser58);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        annotatedElementSchema60.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema54.required((java.util.List<java.lang.String>) strList66);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.maximum(bigDecimal70);
        java.util.List<java.lang.String> strList72 = schema71.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema51.required(strList72);
        annotatedElementSchema30.setRequired(strList72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema0.required(strList72);
        java.lang.Integer int76 = schema75.getMaxItems();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional26);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test01613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01613");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema11.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01614");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.lang.String str24 = annotatedElementSchema12.get$ref();
        java.lang.Integer int25 = annotatedElementSchema12.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.properties(strMap33);
        schema34.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema34.addProperties("hi!", schema38);
        java.lang.String[] strArray46 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional47 = io.swagger.jaxrs2.OperationParser.getTags(strArray46);
        io.swagger.oas.models.media.Schema schema48 = schema34.example((java.lang.Object) strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema12.addProperties("default", schema34);
        java.math.BigDecimal bigDecimal50 = null;
        annotatedElementSchema12.setMultipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema12.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(tagSetOptional47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test01615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01615");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        schema12.setType("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.String str17 = annotatedElementSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema15.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.String str24 = annotatedElementSchema22.get$ref();
        io.swagger.oas.models.media.XML xML25 = null;
        annotatedElementSchema22.setXml(xML25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = annotatedElementSchema22.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal29 = null;
        annotatedElementSchema28.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int37 = schema36.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.Contact contact41 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional42 = io.swagger.jaxrs2.OperationParser.getContact(contact41);
        annotatedElementSchema38.setExample((java.lang.Object) contactOptional42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema45.maxProperties((java.lang.Integer) 100);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema45.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal52 = null;
        annotatedElementSchema51.setMultipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema51.nullable((java.lang.Boolean) false);
        annotatedElementSchema51.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema51.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str61 = annotatedElementSchema60.getPattern();
        annotatedElementSchema60.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean64 = annotatedElementSchema60.getWriteOnly();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema60.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema60.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema60.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info71 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional72 = io.swagger.jaxrs2.OperationParser.getInfo(info71);
        java.lang.Class<?> wildcardClass73 = infoOptional72.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray74 = new java.lang.reflect.AnnotatedElement[] { wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList75 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList75, annotatedElementArray74);
        schema70.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        annotatedElementSchema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        schema45.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        schema36.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        annotatedElementSchema22.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        schema21.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        schema12.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList75);
        java.math.BigDecimal bigDecimal84 = schema12.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema12.getExtensions();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(contactOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(infoOptional72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(annotatedElementArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNull(strMap85);
    }

    @Test
    public void test01616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01616");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        java.lang.String str17 = schema8.toString();
        schema8.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01617");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.minProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema9.getType();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        io.swagger.oas.models.media.Schema schema24 = schema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str26 = annotatedElementSchema25.getPattern();
        annotatedElementSchema25.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = annotatedElementSchema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema25.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema35 = schema24.not(schema34);
        schema24.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema24.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema41.addExtension("no description", (java.lang.Object) operationParser45);
        annotatedElementSchema41.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        annotatedElementSchema41.setDiscriminator(discriminator49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.multipleOf(bigDecimal51);
        schema52.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.minProperties((java.lang.Integer) 10);
        java.lang.String str84 = annotatedElementSchema76.getName();
        annotatedElementSchema55.setDefault((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.media.Schema schema86 = null;
        annotatedElementSchema55.setNot(schema86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema55.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList90 = annotatedElementSchema55.getRequired();
        schema52.setRequired(strList90);
        io.swagger.oas.models.media.Schema schema92 = schema39.required(strList90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema39.properties(strMap93);
        java.lang.Class<?> wildcardClass95 = schema39.getClass();
        schema9.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass95);
        io.swagger.oas.models.media.Schema schema98 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str99 = schema9.getType();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test01618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01618");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.set$ref("*/*");
        java.lang.Integer int42 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema43 = schema4.additionalProperties(schema38);
        schema38.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01619");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str10 = schema6.getType();
        io.swagger.oas.models.media.Schema schema12 = schema6.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = schema6.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
    }

    @Test
    public void test01620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01620");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema0.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test01621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01621");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        java.lang.String str18 = annotatedElementSchema10.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema10.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema10.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema10.addRequiredItem("");
        java.lang.Boolean boolean29 = annotatedElementSchema10.getWriteOnly();
        java.util.List<java.lang.String> strList30 = annotatedElementSchema10.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema31.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.$ref("*/*");
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema31.minimum(bigDecimal43);
        java.lang.String str45 = schema44.getTitle();
        io.swagger.oas.models.media.Schema schema47 = schema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema10.not(schema44);
        java.util.List<java.lang.String> strList49 = schema48.getRequired();
        schema6.setRequired(strList49);
        schema6.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01622");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema22.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema41.addExtension("no description", (java.lang.Object) operationParser45);
        annotatedElementSchema41.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        annotatedElementSchema41.setDiscriminator(discriminator49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.multipleOf(bigDecimal51);
        schema52.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.minProperties((java.lang.Integer) 10);
        java.lang.String str84 = annotatedElementSchema76.getName();
        annotatedElementSchema55.setDefault((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.media.Schema schema86 = null;
        annotatedElementSchema55.setNot(schema86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema55.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList90 = annotatedElementSchema55.getRequired();
        schema52.setRequired(strList90);
        schema52.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean94 = schema52.getExclusiveMinimum();
        java.util.List<java.lang.String> strList95 = schema52.getRequired();
        schema40.setRequired(strList95);
        io.swagger.oas.models.media.Schema schema97 = schema15.required(strList95);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01623");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser15 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema11.addExtension("no description", (java.lang.Object) operationParser15);
        annotatedElementSchema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        annotatedElementSchema11.setDiscriminator(discriminator19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.multipleOf(bigDecimal21);
        java.lang.Class<?> wildcardClass23 = schema22.getClass();
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass23);
        java.lang.reflect.AnnotatedElement annotatedElement25 = annotatedElementSchema0.getDefault();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(annotatedElement25);
    }

    @Test
    public void test01624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01624");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.required(strList22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema28.title("");
        java.lang.String str33 = schema28.getTitle();
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema23.not(schema28);
        java.math.BigDecimal bigDecimal37 = null;
        schema36.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        schema36.setPattern("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01625");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Object obj7 = annotatedElementSchema0.getExample();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test01626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01626");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        annotatedElementSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = annotatedElementSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema28);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = annotatedElementSchema0.getUniqueItems();
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test01627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01627");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        schema19.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean24 = annotatedElementSchema23.getReadOnly();
        java.lang.Boolean boolean25 = annotatedElementSchema23.getNullable();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema23.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.String str31 = annotatedElementSchema23.getDescription();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator42 = annotatedElementSchema34.getDiscriminator();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean46 = annotatedElementSchema34.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema34.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema34.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = annotatedElementSchema34.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema19.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01628");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML12 = schema9.getXml();
        java.lang.Boolean boolean13 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
    }

    @Test
    public void test01629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01629");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean9 = annotatedElementSchema0.getWriteOnly();
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        annotatedElementSchema0.setExtensions(strMap12);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test01630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01630");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMaxItems();
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str36 = schema35.getPattern();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test01631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01631");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.lang.String str13 = annotatedElementSchema0.getDescription();
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getReadOnly();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01632");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema9.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema9.writeOnly((java.lang.Boolean) true);
        schema20.setFormat("#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01633");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        schema25.setProperties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema40.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.properties(strMap50);
        java.lang.String str52 = schema51.getName();
        io.swagger.oas.annotations.info.Info info53 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional54 = io.swagger.jaxrs2.OperationParser.getInfo(info53);
        java.lang.Class<?> wildcardClass55 = infoOptional54.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema56.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema56.setRequired((java.util.List<java.lang.String>) strList62);
        java.lang.Integer int65 = annotatedElementSchema56.getMinItems();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema56.minimum(bigDecimal66);
        annotatedElementSchema56.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass70 = annotatedElementSchema56.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema71.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema78.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass81 = schema78.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray82 = new java.lang.reflect.AnnotatedElement[] { wildcardClass55, wildcardClass70, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList83 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList83, annotatedElementArray82);
        schema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema39.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema25.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema13.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema13.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str91 = schema13.toString();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(infoOptional54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotatedElementArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str91, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01634");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema15.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema26.name("");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 0);
        schema28.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal34 = null;
        annotatedElementSchema33.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema33.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxItems((java.lang.Integer) (-1));
        schema28.setExample((java.lang.Object) (-1));
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema28.multipleOf(bigDecimal41);
        java.lang.Class<?> wildcardClass43 = schema42.getClass();
        schema14.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass43);
        java.lang.Integer int45 = schema14.getMinItems();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test01635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01635");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = null;
        schema7.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema7.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema7.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = schema7.getUniqueItems();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test01636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01636");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList12 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema14 = schema11.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(annotatedElementList12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01637");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema9.$ref("*/*");
        schema14.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int19 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema schema21 = schema18.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01638");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.util.List<java.lang.String> strList12 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        io.swagger.oas.annotations.info.Contact contact18 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional19 = io.swagger.jaxrs2.OperationParser.getContact(contact18);
        annotatedElementSchema15.setExample((java.lang.Object) contactOptional19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.readOnly((java.lang.Boolean) false);
        java.lang.String str23 = annotatedElementSchema15.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema15.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema15.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema15.minimum(bigDecimal30);
        annotatedElementSchema15.setMaxItems((java.lang.Integer) (-1));
        schema14.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema14.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator36 = schema14.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(contactOptional19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNull(discriminator36);
    }

    @Test
    public void test01639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01639");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        java.lang.String str29 = schema20.toString();
        io.swagger.oas.models.media.Schema schema31 = schema20.minProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema20.getExclusiveMinimum();
        schema20.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str29, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01640");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01641");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML16 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.XML xML17 = null;
        annotatedElementSchema0.setXml(xML17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.minProperties((java.lang.Integer) 10);
        java.lang.String str48 = annotatedElementSchema40.getName();
        annotatedElementSchema19.setDefault((java.lang.Object) annotatedElementSchema40);
        io.swagger.oas.models.media.Schema schema50 = null;
        annotatedElementSchema19.setNot(schema50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema19.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema53.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema57 = schema53.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.maxItems((java.lang.Integer) 100);
        schema57.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema57.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01642");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 1);
        java.lang.Boolean boolean9 = schema6.getDeprecated();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test01643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01643");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema14.getName();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01644");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema28);
        schema30.setTitle("#/components/schemas/");
        java.lang.Integer int33 = schema30.getMinLength();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.minimum(bigDecimal34);
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray36 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray36, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray36, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray36, produces45, produces46, components47);
        java.lang.Class<?> wildcardClass49 = apiResponseArray36.getClass();
        schema35.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass49);
        schema35.setReadOnly((java.lang.Boolean) false);
        schema35.setMinProperties((java.lang.Integer) 1);
        schema14.setNot(schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean57 = annotatedElementSchema56.getReadOnly();
        java.lang.String str58 = annotatedElementSchema56.get$ref();
        io.swagger.oas.models.media.XML xML59 = null;
        annotatedElementSchema56.setXml(xML59);
        io.swagger.oas.models.media.XML xML61 = annotatedElementSchema56.getXml();
        java.lang.String str62 = annotatedElementSchema56.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        annotatedElementSchema63.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema63.properties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 10);
        schema72.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator75 = schema72.getDiscriminator();
        schema72.setType("#/components/schemas/");
        java.lang.String str78 = schema72.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema80 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema80.setPattern("");
        annotatedElementSchema80.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema80.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema80.setNullable((java.lang.Boolean) false);
        annotatedElementSchema80.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema92 = annotatedElementSchema80.minItems((java.lang.Integer) 0);
        java.lang.String str93 = schema92.getType();
        io.swagger.oas.models.media.XML xML94 = null;
        schema92.setXml(xML94);
        io.swagger.oas.models.media.Schema schema96 = schema72.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema92);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap97 = schema72.getProperties();
        io.swagger.oas.models.media.Schema schema98 = annotatedElementSchema56.properties(strMap97);
        schema14.setProperties(strMap97);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(apiResponseArray36);
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(xML61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator75);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test01645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01645");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = schema4.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML13 = null;
        schema4.setXml(xML13);
        schema4.setPattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01646");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean25 = annotatedElementSchema21.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = annotatedElementSchema21.getProperties();
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.set$ref("*/*");
        java.lang.Integer int42 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema43 = schema4.additionalProperties(schema38);
        schema4.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01647");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        java.lang.Integer int42 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema44.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info55 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional56 = io.swagger.jaxrs2.OperationParser.getInfo(info55);
        java.lang.Class<?> wildcardClass57 = infoOptional56.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray58 = new java.lang.reflect.AnnotatedElement[] { wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList59 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList59, annotatedElementArray58);
        schema54.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList59);
        schema41.addExtension("no description", (java.lang.Object) schema54);
        java.lang.String str63 = schema54.toString();
        io.swagger.oas.models.media.Schema schema64 = schema11.not(schema54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema11.getProperties();
        io.swagger.oas.models.media.Schema schema67 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser72 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema68.addExtension("no description", (java.lang.Object) operationParser72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.properties(strMap74);
        annotatedElementSchema68.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema68.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema80 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema68);
        schema80.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(infoOptional56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(annotatedElementArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test01648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01648");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        java.lang.String str24 = annotatedElementSchema11.getType();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.discriminator(discriminator25);
        schema26.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01649");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema13.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01650");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal12);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01651");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = annotatedElementSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal20 = null;
        annotatedElementSchema19.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema19.minProperties((java.lang.Integer) 0);
        schema23.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        java.math.BigDecimal bigDecimal27 = null;
        schema23.setMultipleOf(bigDecimal27);
        annotatedElementSchema0.setNot(schema23);
        io.swagger.oas.models.media.Schema schema31 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        schema36.setFormat("*/*");
        schema36.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        schema36.setProperties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = schema36.maxLength((java.lang.Integer) (-1));
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList45 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema47 = schema36.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal49 = null;
        annotatedElementSchema48.setMultipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema48.nullable((java.lang.Boolean) false);
        annotatedElementSchema48.setMaxLength((java.lang.Integer) 1);
        java.lang.String str55 = annotatedElementSchema48.getName();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal57 = null;
        annotatedElementSchema56.setMultipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema56.nullable((java.lang.Boolean) false);
        annotatedElementSchema56.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema56.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str66 = annotatedElementSchema65.getPattern();
        annotatedElementSchema65.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean69 = annotatedElementSchema65.getWriteOnly();
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema65.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema65.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema65.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info76 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional77 = io.swagger.jaxrs2.OperationParser.getInfo(info76);
        java.lang.Class<?> wildcardClass78 = infoOptional77.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray79 = new java.lang.reflect.AnnotatedElement[] { wildcardClass78 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList80 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList80, annotatedElementArray79);
        schema75.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList80);
        annotatedElementSchema56.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList80);
        annotatedElementSchema48.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList80);
        schema47.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList80);
        schema31.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList80);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(annotatedElementList45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(infoOptional77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(annotatedElementArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test01652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01652");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.xml(xML43);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.properties(strMap52);
        schema53.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema53.addProperties("hi!", schema57);
        java.lang.String[] strArray65 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        io.swagger.oas.models.media.Schema schema67 = schema53.example((java.lang.Object) strArray65);
        schema67.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema70.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        annotatedElementSchema70.setRequired((java.util.List<java.lang.String>) strList76);
        java.lang.Integer int79 = annotatedElementSchema70.getMinItems();
        annotatedElementSchema70.setType("hi!");
        java.util.List<java.lang.String> strList82 = annotatedElementSchema70.getRequired();
        io.swagger.oas.models.media.Schema schema83 = schema67.required(strList82);
        boolean boolean84 = schema44.equals((java.lang.Object) schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema83.getProperties();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema0.properties(strMap85);
        java.lang.String str87 = schema86.get$ref();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test01653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01653");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.XML xML10 = null;
        schema7.setXml(xML10);
        java.math.BigDecimal bigDecimal12 = null;
        schema7.setMultipleOf(bigDecimal12);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01654");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.externalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01655");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema20.minLength((java.lang.Integer) 100);
        java.lang.String str32 = annotatedElementSchema20.getType();
        java.lang.String str33 = annotatedElementSchema20.getPattern();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = annotatedElementSchema20.getEnum();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(annotatedElementList34);
    }

    @Test
    public void test01656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01656");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        io.swagger.oas.annotations.info.Contact contact17 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional18 = io.swagger.jaxrs2.OperationParser.getContact(contact17);
        annotatedElementSchema14.setExample((java.lang.Object) contactOptional18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema14.setMinProperties((java.lang.Integer) 100);
        schema9.setExample((java.lang.Object) annotatedElementSchema14);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema14.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema30.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = annotatedElementSchema30.getMinItems();
        annotatedElementSchema30.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema30.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema30.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema48 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        schema28.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema28.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(contactOptional18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01657");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = schema28.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema33 = schema28.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML34 = schema33.getXml();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
    }

    @Test
    public void test01658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01658");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        schema9.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema9.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int22 = annotatedElementSchema17.getMinProperties();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.maximum(bigDecimal23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean36 = annotatedElementSchema35.getReadOnly();
        java.lang.Boolean boolean37 = annotatedElementSchema35.getNullable();
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        annotatedElementSchema35.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.String str43 = annotatedElementSchema35.getDescription();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema35.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator54 = annotatedElementSchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema35.not((io.swagger.oas.models.media.Schema) annotatedElementSchema46);
        java.lang.Class<?> wildcardClass56 = annotatedElementSchema35.getClass();
        schema34.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass56);
        annotatedElementSchema17.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass56);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema17.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int61 = schema60.getMaxLength();
        schema60.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema60.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test01659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01659");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal5 = schema4.getMaximum();
        java.lang.String str6 = schema4.getDescription();
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test01660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01660");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema10.description("");
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema10.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema15.setExclusiveMaximum((java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test01661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01661");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        java.lang.reflect.AnnotatedElement annotatedElement29 = annotatedElementSchema8.getDefault();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema8.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str51 = annotatedElementSchema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        boolean boolean57 = annotatedElementSchema44.equals((java.lang.Object) annotatedElementSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        annotatedElementSchema44.setExternalDocs(externalDocumentation58);
        java.lang.String[] strArray61 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema31.additionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema67 = schema4.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.String str70 = annotatedElementSchema68.get$ref();
        io.swagger.oas.models.media.XML xML71 = null;
        annotatedElementSchema68.setXml(xML71);
        java.lang.Boolean boolean73 = annotatedElementSchema68.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema31.not(schema75);
        io.swagger.oas.models.media.Schema schema78 = schema75.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema75.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElement29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test01662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01662");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        annotatedElementSchema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.additionalProperties(schema20);
        java.lang.String[] strArray34 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema7.required((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = schema7.getMaxLength();
        io.swagger.oas.models.media.Schema schema39 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema7.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01663");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        java.util.List<java.lang.String> strList49 = schema45.getRequired();
        java.math.BigDecimal bigDecimal50 = null;
        schema45.setMultipleOf(bigDecimal50);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNull(strList49);
    }

    @Test
    public void test01664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01664");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int19 = schema16.getMaxLength();
        java.lang.String str20 = schema16.getDescription();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01665");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema8 = schema6.addRequiredItem("hi!");
        java.lang.String str9 = schema6.getDescription();
        schema6.set$ref("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01666");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.XML xML22 = null;
        annotatedElementSchema0.setXml(xML22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = annotatedElementSchema26.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        schema34.setExtensions(strMap45);
        schema25.setNot(schema34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema34.getProperties();
        java.lang.Boolean boolean50 = schema34.getWriteOnly();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
    }

    @Test
    public void test01667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01667");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema23.setExternalDocs(externalDocumentation24);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01668");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        javax.ws.rs.Produces produces7 = null;
        javax.ws.rs.Produces produces8 = null;
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces7, produces8, components9);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces11, produces12, components13);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional14);
    }

    @Test
    public void test01669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01669");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test01670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01670");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getFormat();
        schema16.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML20 = schema16.getXml();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(xML20);
    }

    @Test
    public void test01671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01671");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList25 = schema9.getEnum();
        java.lang.Boolean boolean26 = schema9.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator27 = schema9.getDiscriminator();
        java.math.BigDecimal bigDecimal28 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema9.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(annotatedElementList25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01672");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema16.properties(strMap63);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.minimum(bigDecimal65);
        schema64.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test01673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01673");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        schema9.setType("#/components/schemas/");
        java.lang.String str15 = schema9.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema17.setNullable((java.lang.Boolean) false);
        annotatedElementSchema17.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema17.minItems((java.lang.Integer) 0);
        java.lang.String str30 = schema29.getType();
        io.swagger.oas.models.media.XML xML31 = null;
        schema29.setXml(xML31);
        io.swagger.oas.models.media.Schema schema33 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema schema35 = schema29.format("default");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01674");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.xml(xML31);
        java.lang.String str33 = schema32.getFormat();
        schema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean38 = annotatedElementSchema37.getReadOnly();
        java.lang.Boolean boolean39 = annotatedElementSchema37.getNullable();
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        annotatedElementSchema37.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.String str45 = annotatedElementSchema37.getDescription();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema37.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator56 = annotatedElementSchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema37.not((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema48.setMaxProperties((java.lang.Integer) 0);
        schema32.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema48);
        annotatedElementSchema48.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema48.name("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema48.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema48.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.reflect.AnnotatedElement annotatedElement72 = null;
        schema71.addEnumItemObject(annotatedElement72);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test01675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01675");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean43 = annotatedElementSchema42.getReadOnly();
        java.lang.String str44 = annotatedElementSchema42.get$ref();
        io.swagger.oas.models.media.XML xML45 = null;
        annotatedElementSchema42.setXml(xML45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema42.readOnly((java.lang.Boolean) false);
        annotatedElementSchema27.setAdditionalProperties(schema48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema27.setExternalDocs(externalDocumentation50);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01676");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean9 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test01677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01677");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema27.getDeprecated();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01678");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01679");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.discriminator(discriminator8);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01680");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        io.swagger.oas.annotations.info.Contact contact11 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional12 = io.swagger.jaxrs2.OperationParser.getContact(contact11);
        annotatedElementSchema8.setExample((java.lang.Object) contactOptional12);
        annotatedElementSchema8.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema8.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.uniqueItems((java.lang.Boolean) false);
        schema7.setDefault((java.lang.Object) annotatedElementSchema8);
        annotatedElementSchema8.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal23 = annotatedElementSchema8.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(contactOptional12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01681");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        schema7.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = schema7.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema14.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema14.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.Integer int23 = annotatedElementSchema14.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement24 = annotatedElementSchema14.getDefault();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema14.maxItems((java.lang.Integer) 1);
        schema7.setNot(schema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = annotatedElementSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator47 = annotatedElementSchema39.getDiscriminator();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        java.lang.String str57 = annotatedElementSchema49.getName();
        annotatedElementSchema28.setDefault((java.lang.Object) annotatedElementSchema49);
        java.lang.Integer int59 = annotatedElementSchema49.getMinItems();
        java.lang.Boolean boolean60 = annotatedElementSchema49.getDeprecated();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = annotatedElementSchema49.getExtensions();
        schema7.setExtensions(strMap63);
        java.lang.Integer int65 = schema7.getMaxLength();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(annotatedElement24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(int65);
    }

    @Test
    public void test01682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01682");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema50.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        annotatedElementSchema50.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = schema49.required((java.util.List<java.lang.String>) strList56);
        java.lang.String str60 = schema59.getTitle();
        io.swagger.oas.models.media.Schema schema61 = schema31.not(schema59);
        schema61.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test01683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01683");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema6.setRequired((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.math.BigDecimal bigDecimal18 = null;
        schema15.setMultipleOf(bigDecimal18);
        schema15.setMaxItems((java.lang.Integer) 10);
        java.lang.Integer int22 = schema15.getMinProperties();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test01684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01684");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator17 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test01685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01685");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        java.lang.Boolean boolean12 = annotatedElementSchema0.getNullable();
        java.lang.Boolean boolean13 = annotatedElementSchema0.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test01686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01686");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        schema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = schema10.getNullable();
        java.lang.Boolean boolean14 = schema10.getNullable();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test01687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01687");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.lang.String str12 = schema11.getName();
        io.swagger.oas.annotations.info.Info info13 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional14 = io.swagger.jaxrs2.OperationParser.getInfo(info13);
        java.lang.Class<?> wildcardClass15 = infoOptional14.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = annotatedElementSchema16.getMinItems();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema16.minimum(bigDecimal26);
        annotatedElementSchema16.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass30 = annotatedElementSchema16.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass41 = schema38.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray42 = new java.lang.reflect.AnnotatedElement[] { wildcardClass15, wildcardClass30, wildcardClass41 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList43 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList43, annotatedElementArray42);
        schema11.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList43);
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(infoOptional14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(annotatedElementArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test01688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01688");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.properties(strMap22);
        java.util.List<java.lang.String> strList24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.required(strList24);
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.pattern("hi!");
        schema37.setMinProperties((java.lang.Integer) 10);
        schema25.addExtension("*/*", (java.lang.Object) schema37);
        schema11.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema43 = schema37.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema37.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01689");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean29 = annotatedElementSchema28.getReadOnly();
        java.lang.Boolean boolean30 = annotatedElementSchema28.getNullable();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = annotatedElementSchema28.getDescription();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema28.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator47 = annotatedElementSchema39.getDiscriminator();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema28.not((io.swagger.oas.models.media.Schema) annotatedElementSchema39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.minProperties((java.lang.Integer) 10);
        java.lang.String str57 = annotatedElementSchema49.getName();
        annotatedElementSchema28.setDefault((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema59.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal70 = null;
        annotatedElementSchema69.setMultipleOf(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema69.readOnly((java.lang.Boolean) false);
        java.lang.Integer int74 = annotatedElementSchema69.getMaxProperties();
        schema68.setExample((java.lang.Object) int74);
        annotatedElementSchema28.setAdditionalProperties(schema68);
        io.swagger.oas.models.media.Schema schema78 = schema68.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int79 = schema78.getMinProperties();
        schema24.setExample((java.lang.Object) schema78);
        io.swagger.oas.models.media.Schema schema82 = schema78.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema78.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01690");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        io.swagger.oas.models.media.Schema schema19 = schema10.title("hi!");
        io.swagger.oas.models.media.Schema schema21 = schema10.format("#/components/schemas/");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema10.xml(xML22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal25 = null;
        annotatedElementSchema24.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList29 = annotatedElementSchema24.getEnum();
        annotatedElementSchema24.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.Integer int41 = annotatedElementSchema32.getMinItems();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema24.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        annotatedElementSchema24.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema24.properties(strMap47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema48.getExternalDocs();
        io.swagger.oas.models.media.Schema schema51 = schema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema23.example((java.lang.Object) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema56.setPattern("");
        io.swagger.oas.annotations.info.License license59 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional60 = io.swagger.jaxrs2.OperationParser.getLicense(license59);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema56.example((java.lang.Object) licenseOptional60);
        java.lang.String str62 = annotatedElementSchema56.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = annotatedElementSchema56.getExternalDocs();
        annotatedElementSchema56.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema56.deprecated((java.lang.Boolean) false);
        schema67.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean70 = schema67.getUniqueItems();
        io.swagger.oas.models.media.Schema schema72 = schema67.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema74 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean75 = annotatedElementSchema74.getReadOnly();
        java.lang.String str76 = annotatedElementSchema74.get$ref();
        io.swagger.oas.models.media.XML xML77 = null;
        annotatedElementSchema74.setXml(xML77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = annotatedElementSchema74.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema74.properties(strMap80);
        schema72.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema74);
        java.lang.reflect.AnnotatedElement annotatedElement83 = annotatedElementSchema74.getDefault();
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        annotatedElementSchema74.setDiscriminator(discriminator84);
        io.swagger.oas.models.media.Schema schema86 = schema54.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema74);
        schema54.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElementList29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(licenseOptional60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(externalDocumentation79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(annotatedElement83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test01691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01691");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser44 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema40.addExtension("no description", (java.lang.Object) operationParser44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList52);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.maximum(bigDecimal56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema schema61 = schema57.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema24.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema64 = schema24.uniqueItems((java.lang.Boolean) true);
        schema64.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal67 = null;
        schema64.setMultipleOf(bigDecimal67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01692");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.math.BigDecimal bigDecimal8 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML15 = schema10.getXml();
        io.swagger.oas.models.media.Schema schema17 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = schema10.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test01693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01693");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minLength((java.lang.Integer) 100);
        java.lang.String str16 = schema15.toString();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01694");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        schema10.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int15 = schema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema10.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema10.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01695");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema17.writeOnly((java.lang.Boolean) true);
        java.lang.String str23 = schema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema25.required((java.util.List<java.lang.String>) strList37);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema25.writeOnly((java.lang.Boolean) true);
        schema44.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str47 = schema44.getName();
        io.swagger.oas.models.media.Schema schema48 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "#/components/schemas/" + "'", str47, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01696");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        schema5.setMaxItems((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList8 = null;
        schema5.setRequired(strList8);
        java.lang.String str10 = schema5.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test01697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01697");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getTitle();
        java.lang.String str47 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        schema49.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test01698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01698");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList6 = schema5.getEnum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
    }

    @Test
    public void test01699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01699");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.math.BigDecimal bigDecimal18 = schema17.getMaximum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test01700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01700");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal41 = null;
        annotatedElementSchema40.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        schema44.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema48 = schema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema35.not(schema52);
        java.math.BigDecimal bigDecimal54 = null;
        schema35.setMinimum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema35.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test01701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01701");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema19.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList30);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser40 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema36.addExtension("no description", (java.lang.Object) operationParser40);
        annotatedElementSchema36.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str44 = annotatedElementSchema36.getTitle();
        java.lang.Integer int45 = annotatedElementSchema36.getMinProperties();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema36.minLength((java.lang.Integer) 100);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = annotatedElementSchema36.getExtensions();
        annotatedElementSchema36.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap53);
    }

    @Test
    public void test01702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01702");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        annotatedElementSchema0.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema18.minProperties((java.lang.Integer) 0);
        java.lang.Integer int21 = annotatedElementSchema18.getMinLength();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.properties(strMap29);
        java.lang.Object obj31 = annotatedElementSchema23.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = annotatedElementSchema23.getExtensions();
        annotatedElementSchema18.setExtensions(strMap32);
        schema15.setExtensions(strMap32);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test01703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01703");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema26.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.$ref("*/*");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema26.minimum(bigDecimal38);
        java.lang.String str40 = schema39.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str42 = annotatedElementSchema41.getPattern();
        annotatedElementSchema41.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean45 = annotatedElementSchema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema41.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str48 = annotatedElementSchema41.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = annotatedElementSchema49.getWriteOnly();
        boolean boolean54 = annotatedElementSchema41.equals((java.lang.Object) annotatedElementSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        annotatedElementSchema41.setExternalDocs(externalDocumentation55);
        java.lang.String[] strArray58 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        annotatedElementSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = schema39.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema64 = schema39.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema67 = schema22.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema22.xml(xML68);
        schema69.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test01704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01704");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.media.Content[] contentArray16 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray16, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray16, components23);
        boolean boolean25 = schema13.equals((java.lang.Object) components23);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contentArray16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test01705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01705");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML4 = null;
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.xml(xML4);
        java.lang.String str6 = schema5.getPattern();
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema5.setMinItems((java.lang.Integer) 100);
        schema5.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test01706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01706");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.externalDocs(externalDocumentation7);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int16 = annotatedElementSchema11.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        annotatedElementSchema19.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema19.nullable((java.lang.Boolean) false);
        schema18.setDefault((java.lang.Object) annotatedElementSchema19);
        annotatedElementSchema0.setExample((java.lang.Object) schema18);
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01707");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test01708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01708");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema schema28 = schema25.nullable((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getType();
        io.swagger.oas.models.media.Schema schema31 = schema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean33 = annotatedElementSchema32.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        io.swagger.oas.annotations.info.Contact contact37 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional38 = io.swagger.jaxrs2.OperationParser.getContact(contact37);
        annotatedElementSchema34.setExample((java.lang.Object) contactOptional38);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.readOnly((java.lang.Boolean) false);
        java.lang.String str42 = annotatedElementSchema34.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema34.properties(strMap43);
        boolean boolean45 = annotatedElementSchema32.equals((java.lang.Object) annotatedElementSchema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        java.lang.Integer int49 = annotatedElementSchema46.getMinLength();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.properties(strMap57);
        java.lang.Object obj59 = annotatedElementSchema51.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = annotatedElementSchema51.getExtensions();
        annotatedElementSchema46.setExtensions(strMap60);
        annotatedElementSchema32.setExample((java.lang.Object) strMap60);
        schema28.setExtensions(strMap60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(contactOptional38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test01709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01709");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        schema13.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test01710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01710");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        schema9.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.maximum(bigDecimal12);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML16 = schema9.getXml();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test01711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01711");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        schema4.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean7 = schema4.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema4.getExtensions();
        java.lang.String str9 = schema4.getDescription();
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean11 = schema10.getExclusiveMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test01712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01712");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema33.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        schema37.setDiscriminator(discriminator38);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01713");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.lang.reflect.AnnotatedElement annotatedElement9 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.getNot();
        io.swagger.oas.models.media.Discriminator discriminator11 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(annotatedElement9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
    }

    @Test
    public void test01714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01714");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int22 = annotatedElementSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray28 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        io.swagger.oas.models.media.Schema schema31 = schema24.required((java.util.List<java.lang.String>) strList29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        java.lang.String str34 = schema31.getType();
        io.swagger.oas.models.media.Schema schema35 = schema11.example((java.lang.Object) schema31);
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01715");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean5 = annotatedElementSchema0.getWriteOnly();
        org.junit.Assert.assertNull(boolean5);
    }

    @Test
    public void test01716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01716");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.math.BigDecimal bigDecimal40 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal43 = null;
        annotatedElementSchema42.setMultipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema42.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean47 = schema46.getReadOnly();
        java.math.BigDecimal bigDecimal48 = null;
        schema46.setMaximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.additionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema52 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        schema51.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj55 = schema51.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test01717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01717");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass21 = schema11.getClass();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test01718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01718");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        java.lang.String str10 = schema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int18 = annotatedElementSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema13.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema13.$ref("*/*");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema13.minimum(bigDecimal25);
        java.lang.String str27 = schema26.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str35 = annotatedElementSchema28.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        boolean boolean41 = annotatedElementSchema28.equals((java.lang.Object) annotatedElementSchema36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        annotatedElementSchema28.setExternalDocs(externalDocumentation42);
        java.lang.String[] strArray45 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        annotatedElementSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = schema26.required((java.util.List<java.lang.String>) strList46);
        schema9.setExample((java.lang.Object) schema26);
        io.swagger.oas.models.media.Schema schema52 = schema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema26.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01719");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.Integer int10 = schema9.getMaxItems();
        java.lang.Boolean boolean11 = schema9.getUniqueItems();
        io.swagger.oas.models.media.Schema schema13 = schema9.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.String str16 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.media.XML xML17 = null;
        annotatedElementSchema14.setXml(xML17);
        java.lang.Boolean boolean19 = annotatedElementSchema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema21.setExternalDocs(externalDocumentation22);
        schema21.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean26 = schema13.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema13.maxItems((java.lang.Integer) (-1));
        java.lang.String str29 = schema28.getDescription();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test01720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01720");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema14.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = schema21.getMaxProperties();
        schema21.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema21.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) (-1));
        schema26.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01721");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList35 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01722");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser30 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema26.addExtension("no description", (java.lang.Object) operationParser30);
        annotatedElementSchema26.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        annotatedElementSchema26.setDiscriminator(discriminator34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema26.multipleOf(bigDecimal36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean41 = annotatedElementSchema40.getReadOnly();
        java.lang.Boolean boolean42 = annotatedElementSchema40.getNullable();
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        annotatedElementSchema40.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.String str48 = annotatedElementSchema40.getDescription();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema40.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema40.not((io.swagger.oas.models.media.Schema) annotatedElementSchema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        annotatedElementSchema61.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.minProperties((java.lang.Integer) 10);
        java.lang.String str69 = annotatedElementSchema61.getName();
        annotatedElementSchema40.setDefault((java.lang.Object) annotatedElementSchema61);
        io.swagger.oas.models.media.Schema schema71 = null;
        annotatedElementSchema40.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema40.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList75 = annotatedElementSchema40.getRequired();
        schema37.setRequired(strList75);
        io.swagger.oas.models.media.Schema schema77 = schema24.required(strList75);
        schema24.setMinLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean80 = schema24.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean80);
    }

    @Test
    public void test01723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01723");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = annotatedElementSchema19.getWriteOnly();
        java.lang.String str32 = annotatedElementSchema19.getType();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.discriminator(discriminator33);
        schema7.setNot(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = schema34.getReadOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test01724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01724");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        schema7.setMinLength((java.lang.Integer) 10);
        java.lang.Integer int12 = schema7.getMaxProperties();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema14.setDiscriminator(discriminator15);
        schema14.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01725");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        schema10.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = schema10.getReadOnly();
        schema10.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
    }

    @Test
    public void test01726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01726");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser22 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema18.addExtension("no description", (java.lang.Object) operationParser22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema18.required((java.util.List<java.lang.String>) strList30);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList34 = annotatedElementSchema18.getEnum();
        io.swagger.oas.models.media.Schema schema35 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema37 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMinimum(bigDecimal38);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(annotatedElementList34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01727");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        schema7.setDiscriminator(discriminator10);
        schema7.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01728");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        java.math.BigDecimal bigDecimal15 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema8.minItems((java.lang.Integer) 0);
        java.lang.String str18 = schema8.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int29 = schema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema8.example((java.lang.Object) false);
        java.math.BigDecimal bigDecimal33 = null;
        schema8.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema8.maximum(bigDecimal37);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test01729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01729");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getTitle();
        java.lang.String str47 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema50.addExtension("no description", (java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema57.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema57.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema57.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal64 = schema63.getMultipleOf();
        io.swagger.oas.models.media.Schema schema66 = schema63.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.Boolean boolean70 = annotatedElementSchema68.getNullable();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        annotatedElementSchema68.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.String str76 = annotatedElementSchema68.getDescription();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema68.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema68.multipleOf(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema80.exclusiveMinimum((java.lang.Boolean) false);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema82);
        annotatedElementSchema50.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema50);
        io.swagger.oas.models.media.Schema schema86 = schema85.getNot();
        java.lang.Boolean boolean87 = schema86.getWriteOnly();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test01730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01730");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.discriminator(discriminator9);
        java.lang.Integer int11 = schema8.getMaxItems();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test01731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01731");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema7.getExclusiveMinimum();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema7.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema12.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema12.setNullable((java.lang.Boolean) false);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema12.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema12.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema31.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema31.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema31.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema12.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean49 = annotatedElementSchema48.getReadOnly();
        java.lang.Boolean boolean50 = annotatedElementSchema48.getNullable();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        annotatedElementSchema48.setRequired((java.util.List<java.lang.String>) strList53);
        java.math.BigDecimal bigDecimal56 = annotatedElementSchema48.getMultipleOf();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema48.maxProperties((java.lang.Integer) 0);
        java.lang.String str59 = annotatedElementSchema48.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.properties(strMap66);
        io.swagger.oas.models.media.Schema schema69 = schema67.minLength((java.lang.Integer) 10);
        schema69.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator72 = schema69.getDiscriminator();
        schema69.setType("#/components/schemas/");
        java.lang.String str75 = schema69.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema77.setPattern("");
        annotatedElementSchema77.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema77.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema77.setNullable((java.lang.Boolean) false);
        annotatedElementSchema77.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema77.minItems((java.lang.Integer) 0);
        java.lang.String str90 = schema89.getType();
        io.swagger.oas.models.media.XML xML91 = null;
        schema89.setXml(xML91);
        io.swagger.oas.models.media.Schema schema93 = schema69.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema69.getProperties();
        io.swagger.oas.models.media.Schema schema95 = annotatedElementSchema48.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema47.properties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema7.properties(strMap94);
        schema97.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01732");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema15.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01733");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal9 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Integer int19 = annotatedElementSchema10.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement20 = annotatedElementSchema10.getDefault();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema4.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema22.name("#/components/schemas/");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList28 = schema25.getEnum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(annotatedElement20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(annotatedElementList28);
    }

    @Test
    public void test01734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01734");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema21.minItems((java.lang.Integer) 0);
        annotatedElementSchema21.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = schema37.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test01735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01735");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean41 = schema38.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean43 = annotatedElementSchema42.getReadOnly();
        java.lang.Boolean boolean44 = annotatedElementSchema42.getNullable();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema42.setRequired((java.util.List<java.lang.String>) strList47);
        java.lang.String str50 = annotatedElementSchema42.getDescription();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema42.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator61 = annotatedElementSchema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema42.not((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = annotatedElementSchema53.getProperties();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema53.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser70 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema66.addExtension("no description", (java.lang.Object) operationParser70);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema72.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        annotatedElementSchema72.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema66.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema53.required((java.util.List<java.lang.String>) strList78);
        schema38.setRequired((java.util.List<java.lang.String>) strList78);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01736");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList7 = schema6.getEnum();
        io.swagger.oas.models.media.Schema schema9 = schema6.deprecated((java.lang.Boolean) true);
        java.lang.String str10 = schema9.get$ref();
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = schema9.getEnum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(annotatedElementList7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(annotatedElementList11);
    }

    @Test
    public void test01737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01737");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema4 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema4.setPattern("");
        annotatedElementSchema4.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema4.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema4.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema4.name("");
        schema3.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema4);
        java.lang.Boolean boolean16 = annotatedElementSchema4.getNullable();
        java.lang.String str17 = annotatedElementSchema4.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01738");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = schema32.getReadOnly();
        java.math.BigDecimal bigDecimal34 = null;
        schema32.setMaximum(bigDecimal34);
        schema7.setDefault((java.lang.Object) schema32);
        java.lang.String str37 = schema7.getFormat();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test01739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01739");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info21 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional22 = io.swagger.jaxrs2.OperationParser.getInfo(info21);
        java.lang.Class<?> wildcardClass23 = infoOptional22.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray24 = new java.lang.reflect.AnnotatedElement[] { wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList25 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList25, annotatedElementArray24);
        schema20.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList25);
        schema7.addExtension("no description", (java.lang.Object) schema20);
        schema7.setFormat("*/*");
        schema7.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.minimum(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema7.addProperties("", schema49);
        io.swagger.oas.models.media.Schema schema51 = schema49.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        schema49.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(infoOptional22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(annotatedElementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test01740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01740");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        schema21.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = schema29.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test01741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01741");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.set$ref("");
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test01742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01742");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String[] strArray12 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray12);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not(schema34);
        schema8.setDefault((java.lang.Object) schema34);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema34.getDiscriminator();
        java.lang.String str38 = schema34.getTitle();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test01743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01743");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        io.swagger.oas.annotations.info.License license24 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional25 = io.swagger.jaxrs2.OperationParser.getLicense(license24);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema21.example((java.lang.Object) licenseOptional25);
        java.lang.String str27 = annotatedElementSchema21.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = annotatedElementSchema21.getExternalDocs();
        annotatedElementSchema21.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.deprecated((java.lang.Boolean) false);
        java.lang.String str33 = annotatedElementSchema21.toString();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema8.example((java.lang.Object) str33);
        java.lang.Integer int35 = schema34.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema34.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema38 = schema34.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
    }

    @Test
    public void test01744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01744");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Object obj11 = annotatedElementSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.properties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = schema15.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01745");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str5 = annotatedElementSchema0.getDescription();
        java.lang.Integer int6 = annotatedElementSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = schema14.getExclusiveMinimum();
        java.lang.Boolean boolean16 = schema14.getExclusiveMinimum();
        schema14.setMinProperties((java.lang.Integer) 0);
        annotatedElementSchema0.setDefault((java.lang.Object) schema14);
        schema14.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01746");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.math.BigDecimal bigDecimal5 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal5);
        java.lang.String str7 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = schema9.getExtensions();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test01747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01747");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.lang.Integer int5 = schema4.getMinLength();
        schema4.setMaxLength((java.lang.Integer) (-1));
        schema4.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMinimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = annotatedElementSchema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema12.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema22.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = annotatedElementSchema26.getExtensions();
        schema25.setExtensions(strMap32);
        annotatedElementSchema12.setExtensions(strMap32);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema12.minProperties((java.lang.Integer) (-1));
        schema36.setDescription("");
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinProperties();
        java.lang.Integer int50 = schema48.getMinProperties();
        java.lang.Boolean boolean51 = schema48.getExclusiveMaximum();
        schema36.setExample((java.lang.Object) schema48);
        boolean boolean53 = schema4.equals((java.lang.Object) schema48);
        schema4.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test01748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01748");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01749");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema7.getNot();
        java.lang.Integer int11 = schema7.getMaxLength();
        schema7.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test01750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01750");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces1, produces2, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional4);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
    }

    @Test
    public void test01751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01751");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        annotatedElementSchema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.additionalProperties(schema20);
        java.lang.String[] strArray34 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema7.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema7.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMinProperties();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray52 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        io.swagger.oas.models.media.Schema schema55 = schema48.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        schema55.setExternalDocs(externalDocumentation56);
        java.lang.String str58 = schema55.getDescription();
        schema55.setMaxItems((java.lang.Integer) 100);
        schema55.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema55.minimum(bigDecimal63);
        schema7.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema64);
        java.lang.Integer int66 = schema64.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        schema64.setDiscriminator(discriminator67);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int66);
    }

    @Test
    public void test01752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01752");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        io.swagger.oas.models.media.Schema schema20 = schema14.description("no description");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema20.exclusiveMaximum((java.lang.Boolean) true);
        schema24.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema24.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01753");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        schema4.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean8 = annotatedElementSchema7.getReadOnly();
        java.lang.Boolean boolean9 = annotatedElementSchema7.getNullable();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        annotatedElementSchema7.setRequired((java.util.List<java.lang.String>) strList12);
        java.lang.String str15 = annotatedElementSchema7.getDescription();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator26 = annotatedElementSchema18.getDiscriminator();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema7.not((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        java.lang.String str36 = annotatedElementSchema28.getName();
        annotatedElementSchema7.setDefault((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.xml(xML38);
        java.lang.String str40 = schema39.getFormat();
        io.swagger.oas.models.media.Schema schema41 = schema4.example((java.lang.Object) schema39);
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01754");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema7.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01755");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        java.math.BigDecimal bigDecimal25 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema29.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema29.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = annotatedElementSchema40.getMinProperties();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray51 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = schema47.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema29.required((java.util.List<java.lang.String>) strList52);
        schema27.setRequired((java.util.List<java.lang.String>) strList52);
        schema27.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01756");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.xml(xML8);
        java.lang.String str10 = schema9.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser15 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema11.addExtension("no description", (java.lang.Object) operationParser15);
        annotatedElementSchema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        annotatedElementSchema11.setDiscriminator(discriminator19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.multipleOf(bigDecimal21);
        annotatedElementSchema11.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        java.lang.Integer int28 = schema9.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal30 = null;
        annotatedElementSchema29.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema29.minProperties((java.lang.Integer) 0);
        schema33.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema33.getDiscriminator();
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMultipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema schema39 = schema33.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema40.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = annotatedElementSchema44.getExtensions();
        schema43.setExtensions(strMap50);
        schema33.setExtensions(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator53 = schema33.getDiscriminator();
        java.math.BigDecimal bigDecimal54 = schema33.getMultipleOf();
        schema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean57 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema33.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema33.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = schema9.additionalProperties(schema61);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test01757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01757");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        schema18.setDescription("#/components/schemas/");
        schema18.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.example((java.lang.Object) schema18);
        schema23.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean28 = schema23.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test01758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01758");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal9);
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = annotatedElementSchema0.getMinimum();
        java.lang.Boolean boolean14 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema0.getReadOnly();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
    }

    @Test
    public void test01759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01759");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema31.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema31.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test01760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01760");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        java.lang.String str17 = schema8.toString();
        io.swagger.oas.models.media.Schema schema19 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        java.lang.String str21 = schema19.getPattern();
        java.lang.Object obj22 = schema19.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test01761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01761");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) annotatedElementSchema27);
        java.lang.String str42 = schema41.getFormat();
        java.lang.String str43 = schema41.getName();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "default" + "'", str42, "default");
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test01762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01762");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        schema7.setDescription("");
        schema7.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        io.swagger.oas.annotations.info.Contact contact20 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional21 = io.swagger.jaxrs2.OperationParser.getContact(contact20);
        annotatedElementSchema17.setExample((java.lang.Object) contactOptional21);
        annotatedElementSchema17.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema29.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema29.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = annotatedElementSchema29.getMinItems();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema29.minimum(bigDecimal39);
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = annotatedElementSchema29.getExtensions();
        java.lang.String str42 = annotatedElementSchema29.getName();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema29.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema28.additionalProperties(schema44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        schema28.setProperties(strMap46);
        io.swagger.oas.models.media.Schema schema49 = schema28.minProperties((java.lang.Integer) 0);
        java.lang.String str50 = schema49.getDescription();
        io.swagger.oas.models.media.Schema schema51 = schema7.example((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema53 = schema7.writeOnly((java.lang.Boolean) true);
        schema53.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(contactOptional21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test01763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01763");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        annotatedElementSchema0.setDiscriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 100);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01764");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = schema12.getMultipleOf();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test01765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01765");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal9 = null;
        annotatedElementSchema0.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema23.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema23.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema33 = schema22.not(schema32);
        schema22.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema22.$ref("default");
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.additionalProperties(schema37);
        java.lang.String str39 = schema38.getName();
        java.lang.String str40 = schema38.getType();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test01766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01766");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema11.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.Integer int18 = annotatedElementSchema15.getMaxItems();
        java.lang.Integer int19 = annotatedElementSchema15.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        schema20.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01767");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema7.addProperties("default", schema13);
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema17.setNullable((java.lang.Boolean) false);
        annotatedElementSchema17.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema17.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema17.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema17.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema36.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema36.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema36.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema17.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema51 = schema14.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema schema53 = schema51.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema54.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList59 = annotatedElementSchema54.getEnum();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema54.description("hi!");
        java.lang.Object obj62 = schema61.getExample();
        io.swagger.oas.models.media.Schema schema64 = schema61.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema61.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema67 = schema51.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema68.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser72 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema68.addExtension("no description", (java.lang.Object) operationParser72);
        annotatedElementSchema68.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema68.setReadOnly((java.lang.Boolean) true);
        schema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema68);
        java.math.BigDecimal bigDecimal79 = schema51.getMaximum();
        java.lang.Integer int80 = schema51.getMinProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(annotatedElementList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNull(int80);
    }

    @Test
    public void test01768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01768");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>> strListSchema22 = new io.swagger.oas.models.media.Schema<java.util.ArrayList<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = schema21.example((java.lang.Object) strListSchema22);
        schema23.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01769");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        java.lang.String str11 = annotatedElementSchema0.getPattern();
        java.lang.String str12 = annotatedElementSchema0.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01770");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        annotatedElementSchema12.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema12.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema29.getExternalDocs();
        schema29.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(externalDocumentation31);
    }

    @Test
    public void test01771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01771");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema13.getExternalDocs();
        java.lang.Integer int15 = schema13.getMinProperties();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01772");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList41 = schema38.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.properties(strMap48);
        schema49.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema49.addProperties("hi!", schema53);
        java.lang.String[] strArray61 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional62 = io.swagger.jaxrs2.OperationParser.getTags(strArray61);
        io.swagger.oas.models.media.Schema schema63 = schema49.example((java.lang.Object) strArray61);
        schema63.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema63.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema63.deprecated((java.lang.Boolean) true);
        java.lang.String str70 = schema63.getTitle();
        schema63.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Class<?> wildcardClass73 = schema63.getClass();
        schema38.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass73);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(annotatedElementList41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(tagSetOptional62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test01773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01773");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        io.swagger.oas.models.media.Schema schema6 = schema3.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema15 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01774");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = schema21.getType();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.minimum(bigDecimal34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.xml(xML36);
        java.lang.Boolean boolean38 = schema37.getDeprecated();
        java.lang.Boolean boolean39 = schema37.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        io.swagger.oas.annotations.info.Contact contact43 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional44 = io.swagger.jaxrs2.OperationParser.getContact(contact43);
        annotatedElementSchema40.setExample((java.lang.Object) contactOptional44);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal55 = null;
        annotatedElementSchema54.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema54.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList59 = annotatedElementSchema54.getEnum();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema54.description("hi!");
        java.lang.Object obj62 = schema61.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema63 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema63.setPattern("");
        io.swagger.oas.annotations.info.License license66 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional67 = io.swagger.jaxrs2.OperationParser.getLicense(license66);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema63.example((java.lang.Object) licenseOptional67);
        java.lang.String str69 = annotatedElementSchema63.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = annotatedElementSchema63.getExternalDocs();
        annotatedElementSchema63.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema63.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = schema61.additionalProperties(schema74);
        java.lang.String[] strArray88 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema61.required((java.util.List<java.lang.String>) strList89);
        schema53.setRequired((java.util.List<java.lang.String>) strList89);
        schema37.setRequired((java.util.List<java.lang.String>) strList89);
        schema21.setRequired((java.util.List<java.lang.String>) strList89);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList89);
        java.lang.Class<?> wildcardClass96 = strList89.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
        org.junit.Assert.assertNotNull(contactOptional44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(annotatedElementList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(licenseOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(externalDocumentation70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test01775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01775");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.multipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.multipleOf(bigDecimal8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = schema9.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getExclusiveMinimum();
        java.lang.Boolean boolean20 = schema18.getExclusiveMinimum();
        schema18.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema25.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema25.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = annotatedElementSchema25.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement35 = annotatedElementSchema25.getDefault();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema25.maxItems((java.lang.Integer) 1);
        schema18.setNot(schema37);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int44 = annotatedElementSchema39.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema39.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.maximum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema39.example((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        io.swagger.oas.annotations.info.Contact contact63 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional64 = io.swagger.jaxrs2.OperationParser.getContact(contact63);
        annotatedElementSchema60.setExample((java.lang.Object) contactOptional64);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean67 = annotatedElementSchema66.getReadOnly();
        java.lang.Boolean boolean68 = annotatedElementSchema66.getNullable();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        annotatedElementSchema66.setRequired((java.util.List<java.lang.String>) strList71);
        java.lang.String str74 = annotatedElementSchema66.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int80 = annotatedElementSchema75.getMinProperties();
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema75.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray86 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        io.swagger.oas.models.media.Schema schema89 = schema82.required((java.util.List<java.lang.String>) strList87);
        annotatedElementSchema66.setDefault((java.lang.Object) strList87);
        io.swagger.oas.models.media.Schema schema91 = annotatedElementSchema60.required((java.util.List<java.lang.String>) strList87);
        schema59.setRequired((java.util.List<java.lang.String>) strList87);
        schema18.setRequired((java.util.List<java.lang.String>) strList87);
        schema9.setRequired((java.util.List<java.lang.String>) strList87);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(annotatedElement35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(contactOptional64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test01776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01776");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList35 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str38 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.String str49 = annotatedElementSchema41.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.properties(strMap50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema41.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema41.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema41.addRequiredItem("");
        schema59.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str62 = schema59.getDescription();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema0.additionalProperties(schema59);
        java.lang.Boolean boolean64 = schema59.getExclusiveMaximum();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
    }

    @Test
    public void test01777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01777");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        java.lang.String str8 = schema6.getType();
        java.lang.Boolean boolean9 = schema6.getExclusiveMaximum();
        java.lang.Boolean boolean10 = schema6.getUniqueItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test01778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01778");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema8.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema8.getExtensions();
        java.lang.String str17 = schema8.toString();
        io.swagger.oas.models.media.Discriminator discriminator18 = schema8.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema8.setExternalDocs(externalDocumentation19);
        java.lang.String str21 = schema8.getType();
        schema8.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01779");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str7 = annotatedElementSchema6.getPattern();
        annotatedElementSchema6.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean10 = annotatedElementSchema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema6.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema6.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema6.properties(strMap16);
        java.lang.String str18 = schema17.getName();
        io.swagger.oas.annotations.info.Info info19 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional20 = io.swagger.jaxrs2.OperationParser.getInfo(info19);
        java.lang.Class<?> wildcardClass21 = infoOptional20.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema22.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList28);
        java.lang.Integer int31 = annotatedElementSchema22.getMinItems();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.minimum(bigDecimal32);
        annotatedElementSchema22.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass36 = annotatedElementSchema22.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.properties(strMap43);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray48 = new java.lang.reflect.AnnotatedElement[] { wildcardClass21, wildcardClass36, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList49 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList49, annotatedElementArray48);
        schema17.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        schema5.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList49);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setPattern("");
        io.swagger.oas.annotations.info.License license57 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional58 = io.swagger.jaxrs2.OperationParser.getLicense(license57);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema54.example((java.lang.Object) licenseOptional58);
        java.lang.String str60 = annotatedElementSchema54.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = annotatedElementSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = schema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema54);
        io.swagger.oas.models.media.XML xML63 = annotatedElementSchema54.getXml();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema54.maxLength((java.lang.Integer) 1);
        java.lang.String str66 = schema65.getFormat();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(infoOptional20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotatedElementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(licenseOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test01780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01780");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        annotatedElementSchema11.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.String str19 = annotatedElementSchema11.getDescription();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema11.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = annotatedElementSchema22.getWriteOnly();
        java.lang.String str35 = annotatedElementSchema22.getType();
        java.util.List<java.lang.String> strList36 = annotatedElementSchema22.getRequired();
        annotatedElementSchema22.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema22.getAdditionalProperties();
        java.math.BigDecimal bigDecimal40 = annotatedElementSchema22.getMinimum();
        boolean boolean41 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01781");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator14 = schema12.getDiscriminator();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(discriminator14);
    }

    @Test
    public void test01782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01782");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema schema10 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema10.title("no description");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01783");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        java.math.BigDecimal bigDecimal7 = schema4.getMinimum();
        io.swagger.oas.models.media.Schema schema9 = schema4.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema14.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.minimum(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.xml(xML25);
        java.lang.Object obj27 = schema24.getExample();
        java.math.BigDecimal bigDecimal28 = schema24.getMinimum();
        java.math.BigDecimal bigDecimal29 = null;
        schema24.setMultipleOf(bigDecimal29);
        java.lang.Integer int31 = schema24.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = annotatedElementSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        annotatedElementSchema41.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema41.nullable((java.lang.Boolean) false);
        schema40.setDefault((java.lang.Object) annotatedElementSchema41);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema schema54 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema53);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        java.lang.Object obj63 = annotatedElementSchema55.getExample();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.format("#/components/schemas/");
        java.lang.Class<?> wildcardClass66 = annotatedElementSchema55.getClass();
        schema53.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass66);
        schema13.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass66);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test01784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01784");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal10 = annotatedElementSchema0.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema13.getUniqueItems();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test01785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01785");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        schema4.setDescription("no description");
        io.swagger.oas.models.media.Schema schema13 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01786");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema14.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 1);
        schema14.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema14.deprecated((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getFormat();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01787");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = annotatedElementSchema19.getWriteOnly();
        java.lang.String str32 = annotatedElementSchema19.getType();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.discriminator(discriminator33);
        schema7.setNot(schema34);
        schema34.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema34.setExternalDocs(externalDocumentation38);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01788");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema8.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema14 = schema12.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = schema14.getExample();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test01789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01789");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxProperties((java.lang.Integer) (-1));
        java.lang.String str12 = schema9.getName();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test01790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01790");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList35 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str38 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.String str49 = annotatedElementSchema41.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.properties(strMap50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema41.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema41.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema41.minimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema41.addRequiredItem("");
        schema59.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str62 = schema59.getDescription();
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema0.additionalProperties(schema59);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema64 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema64.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser68 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema64.addExtension("no description", (java.lang.Object) operationParser68);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema70.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        annotatedElementSchema70.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema64.required((java.util.List<java.lang.String>) strList76);
        schema79.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str82 = schema79.getTitle();
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema79.multipleOf(bigDecimal83);
        io.swagger.oas.models.media.Schema schema85 = schema63.example((java.lang.Object) schema79);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema86 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal87 = null;
        annotatedElementSchema86.setMultipleOf(bigDecimal87);
        io.swagger.oas.models.media.Schema schema90 = annotatedElementSchema86.minProperties((java.lang.Integer) 0);
        schema90.setFormat("*/*");
        java.lang.Boolean boolean93 = schema90.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal94 = null;
        io.swagger.oas.models.media.Schema schema95 = schema90.multipleOf(bigDecimal94);
        io.swagger.oas.models.media.Schema schema96 = schema90.getAdditionalProperties();
        schema90.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema99 = schema85.additionalProperties(schema90);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str82, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(schema96);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test01791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01791");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        java.lang.String str7 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        annotatedElementSchema8.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 10);
        annotatedElementSchema0.setNot(schema17);
        io.swagger.oas.models.media.Schema schema22 = schema17.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01792");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
    }

    @Test
    public void test01793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01793");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str20 = annotatedElementSchema19.getPattern();
        annotatedElementSchema19.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = annotatedElementSchema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema19.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.properties(strMap29);
        java.util.List<java.lang.String> strList31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.required(strList31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = annotatedElementSchema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema43.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList49);
        java.lang.Integer int52 = annotatedElementSchema43.getMinItems();
        annotatedElementSchema43.setType("hi!");
        java.util.List<java.lang.String> strList55 = annotatedElementSchema43.getRequired();
        io.swagger.oas.models.media.Schema schema56 = schema42.required(strList55);
        schema30.setRequired(strList55);
        io.swagger.oas.models.media.Schema schema58 = schema14.required(strList55);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test01794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01794");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema9.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema21.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = schema24.getNullable();
        java.lang.Object obj26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.example(obj26);
        io.swagger.oas.models.media.Discriminator discriminator28 = schema24.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.externalDocs(externalDocumentation29);
        schema20.setNot(schema24);
        io.swagger.oas.models.media.Schema schema33 = schema24.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01795");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        annotatedElementSchema49.setProperties(strMap61);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap61);
        io.swagger.oas.models.media.Schema schema65 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal66 = schema65.getMultipleOf();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
    }

    @Test
    public void test01796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01796");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        java.lang.String str8 = schema6.getType();
        java.lang.Boolean boolean9 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema11 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01797");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema8 = schema4.exclusiveMaximum((java.lang.Boolean) false);
        schema8.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema8.setMultipleOf(bigDecimal11);
        java.util.List<java.lang.String> strList13 = schema8.getRequired();
        java.lang.String str14 = schema8.getTitle();
        java.lang.Integer int15 = schema8.getMaxItems();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01798");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema3 = annotatedElementSchema0.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean4 = schema3.getNullable();
        java.lang.Object obj5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema3.example(obj5);
        java.lang.Boolean boolean7 = schema3.getNullable();
        schema3.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test01799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01799");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str10 = annotatedElementSchema9.getPattern();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = annotatedElementSchema13.getExtensions();
        schema12.setExtensions(strMap19);
        schema8.setExtensions(strMap19);
        java.math.BigDecimal bigDecimal22 = null;
        schema8.setMultipleOf(bigDecimal22);
        java.lang.Boolean boolean24 = schema8.getNullable();
        schema8.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema8.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema8.getNullable();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test01800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01800");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean21 = annotatedElementSchema20.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator30 = annotatedElementSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema22.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema20.not((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser45 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema41.addExtension("no description", (java.lang.Object) operationParser45);
        annotatedElementSchema41.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        annotatedElementSchema41.setDiscriminator(discriminator49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema41.multipleOf(bigDecimal51);
        schema52.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean56 = annotatedElementSchema55.getReadOnly();
        java.lang.Boolean boolean57 = annotatedElementSchema55.getNullable();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        annotatedElementSchema55.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.String str63 = annotatedElementSchema55.getDescription();
        io.swagger.oas.models.media.Schema schema65 = annotatedElementSchema55.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema73 = annotatedElementSchema66.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator74 = annotatedElementSchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema55.not((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema76.minProperties((java.lang.Integer) 10);
        java.lang.String str84 = annotatedElementSchema76.getName();
        annotatedElementSchema55.setDefault((java.lang.Object) annotatedElementSchema76);
        io.swagger.oas.models.media.Schema schema86 = null;
        annotatedElementSchema55.setNot(schema86);
        io.swagger.oas.models.media.Schema schema89 = annotatedElementSchema55.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList90 = annotatedElementSchema55.getRequired();
        schema52.setRequired(strList90);
        schema52.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean94 = schema52.getExclusiveMinimum();
        java.util.List<java.lang.String> strList95 = schema52.getRequired();
        schema40.setRequired(strList95);
        io.swagger.oas.models.media.Schema schema97 = schema15.required(strList95);
        io.swagger.oas.models.media.Schema schema99 = schema97.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test01801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01801");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator14 = annotatedElementSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal15 = annotatedElementSchema0.getMultipleOf();
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        annotatedElementSchema0.setDiscriminator(discriminator19);
        java.lang.String str21 = annotatedElementSchema0.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01802");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = annotatedElementSchema0.getWriteOnly();
        java.lang.String str11 = annotatedElementSchema0.get$ref();
        java.lang.Boolean boolean12 = annotatedElementSchema0.getDeprecated();
        java.lang.Boolean boolean13 = annotatedElementSchema0.getExclusiveMaximum();
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test01803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01803");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("*/*");
        java.lang.String str9 = annotatedElementSchema0.getType();
        io.swagger.oas.models.media.XML xML10 = annotatedElementSchema0.getXml();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(xML10);
    }

    @Test
    public void test01804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01804");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        schema15.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01805");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getTitle();
        java.lang.String str47 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema50.addExtension("no description", (java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema57.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema57.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema57.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal64 = schema63.getMultipleOf();
        io.swagger.oas.models.media.Schema schema66 = schema63.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.Boolean boolean70 = annotatedElementSchema68.getNullable();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        annotatedElementSchema68.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.String str76 = annotatedElementSchema68.getDescription();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema68.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema68.multipleOf(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema80.exclusiveMinimum((java.lang.Boolean) false);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema82);
        annotatedElementSchema50.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema50);
        schema85.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str88 = schema85.getDescription();
        schema85.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str88, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test01806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01806");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        schema12.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01807");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        schema21.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01808");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) annotatedElementSchema27);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList42 = schema15.getEnum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(annotatedElementList42);
    }

    @Test
    public void test01809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01809");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        java.lang.String str37 = annotatedElementSchema29.getName();
        annotatedElementSchema8.setDefault((java.lang.Object) annotatedElementSchema29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.properties(strMap45);
        io.swagger.oas.models.media.Schema schema48 = schema46.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal50 = null;
        annotatedElementSchema49.setMultipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema49.readOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMaxProperties();
        schema48.setExample((java.lang.Object) int54);
        annotatedElementSchema8.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema58 = schema48.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int59 = schema58.getMinProperties();
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema0.not(schema58);
        schema60.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema60.setExternalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema65 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema65.setPattern("");
        annotatedElementSchema65.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema65.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema65.setNullable((java.lang.Boolean) false);
        annotatedElementSchema65.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema65.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema79 = annotatedElementSchema65.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema65.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = annotatedElementSchema65.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema84 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema84.setPattern("");
        annotatedElementSchema84.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema84.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema84.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray94 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList95 = new java.util.ArrayList<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList95, strArray94);
        io.swagger.oas.models.media.Schema schema97 = annotatedElementSchema84.required((java.util.List<java.lang.String>) strList95);
        io.swagger.oas.models.media.Schema schema98 = annotatedElementSchema65.required((java.util.List<java.lang.String>) strList95);
        io.swagger.oas.models.media.Schema schema99 = schema60.required((java.util.List<java.lang.String>) strList95);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test01810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01810");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        schema13.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01811");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        annotatedElementSchema22.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = annotatedElementSchema22.getWriteOnly();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema22.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema0.setNot(schema28);
        java.lang.String str30 = schema28.getDescription();
        schema28.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test01812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01812");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        java.lang.Boolean boolean5 = annotatedElementSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test01813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01813");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        schema4.set$ref("#/components/schemas/");
        java.lang.String str9 = schema4.getTitle();
        schema4.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema4.multipleOf(bigDecimal12);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01814");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        java.math.BigDecimal bigDecimal3 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal3);
        java.math.BigDecimal bigDecimal5 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal5);
        java.lang.String str7 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        annotatedElementSchema8.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int13 = annotatedElementSchema8.getMinProperties();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema8.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema8.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.$ref("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema8.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema0.example((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList25 = annotatedElementSchema0.getEnum();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(annotatedElementList25);
    }

    @Test
    public void test01815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01815");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setType("no description");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        schema15.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01816");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema11.getFormat();
        java.lang.String str15 = schema11.get$ref();
        java.math.BigDecimal bigDecimal16 = null;
        schema11.setMultipleOf(bigDecimal16);
        java.lang.String str18 = schema11.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema11.$ref("*/*");
        schema20.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: 1\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: {hi!=null}\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01817");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.minimum(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema16.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema20.getNot();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test01818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01818");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setExample((java.lang.Object) 10.0d);
        java.lang.String str14 = schema4.getPattern();
        java.lang.String str15 = schema4.getType();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01819");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        java.lang.String str24 = schema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema26.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: \n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean45 = annotatedElementSchema26.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test01820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01820");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema7.toString();
        java.lang.Integer int11 = schema7.getMaxProperties();
        java.lang.String str12 = schema7.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01821");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        java.util.List<java.lang.String> strList24 = schema21.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        io.swagger.oas.annotations.info.License license28 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional29 = io.swagger.jaxrs2.OperationParser.getLicense(license28);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema25.example((java.lang.Object) licenseOptional29);
        java.lang.String str31 = annotatedElementSchema25.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = annotatedElementSchema25.getExternalDocs();
        annotatedElementSchema25.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema37.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema37.properties(strMap47);
        java.util.List<java.lang.String> strList49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.required(strList49);
        io.swagger.oas.models.media.Schema schema51 = schema50.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema53.setPattern("");
        annotatedElementSchema53.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema53.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema53.pattern("hi!");
        schema62.setMinProperties((java.lang.Integer) 10);
        schema50.addExtension("*/*", (java.lang.Object) schema62);
        schema36.setDefault((java.lang.Object) schema62);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList67 = schema62.getEnum();
        boolean boolean68 = schema21.equals((java.lang.Object) annotatedElementList67);
        io.swagger.oas.models.media.XML xML69 = schema21.getXml();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(licenseOptional29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(annotatedElementList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(xML69);
    }

    @Test
    public void test01822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01822");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01823");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces3, produces4, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces9, produces10, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces15, produces16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces19, produces20, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContent(contentArray0, produces29, produces30, components31);
        org.junit.Assert.assertNotNull(contentArray0);
        org.junit.Assert.assertNotNull(contentOptional2);
        org.junit.Assert.assertNotNull(contentOptional6);
        org.junit.Assert.assertNotNull(contentOptional8);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentOptional32);
    }

    @Test
    public void test01824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01824");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema4.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema4.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setExample((java.lang.Object) 10.0d);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.String str17 = annotatedElementSchema15.get$ref();
        io.swagger.oas.models.media.XML xML18 = null;
        annotatedElementSchema15.setXml(xML18);
        java.lang.Boolean boolean20 = annotatedElementSchema15.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal23 = null;
        annotatedElementSchema22.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema22.nullable((java.lang.Boolean) false);
        annotatedElementSchema22.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        io.swagger.oas.models.media.Schema schema30 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema15.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        io.swagger.oas.annotations.info.Contact contact35 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional36 = io.swagger.jaxrs2.OperationParser.getContact(contact35);
        annotatedElementSchema32.setExample((java.lang.Object) contactOptional36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema32.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema32.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema32.maxLength((java.lang.Integer) 0);
        annotatedElementSchema15.setExample((java.lang.Object) annotatedElementSchema32);
        io.swagger.oas.models.media.XML xML47 = null;
        annotatedElementSchema15.setXml(xML47);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(contactOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01825");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        schema7.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj10 = schema7.getExample();
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = schema7.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test01826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01826");
        io.swagger.oas.models.media.Schema<java.lang.reflect.GenericDeclaration> genericDeclarationSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test01827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01827");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.name("");
        io.swagger.oas.models.media.Discriminator discriminator11 = schema10.getDiscriminator();
        schema10.setPattern("*/*");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema10.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema15.getPattern();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "*/*" + "'", str16, "*/*");
    }

    @Test
    public void test01828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01828");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal7 = null;
        annotatedElementSchema6.setMultipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = annotatedElementSchema6.getEnum();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.description("hi!");
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema13);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.maximum(bigDecimal18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema15.setDiscriminator(discriminator20);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01829");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        schema9.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("");
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema16.getEnum();
        annotatedElementSchema16.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = annotatedElementSchema24.getMinItems();
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema24.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema24);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList37 = annotatedElementSchema16.getEnum();
        io.swagger.oas.models.media.XML xML38 = null;
        annotatedElementSchema16.setXml(xML38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema16.externalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int47 = annotatedElementSchema42.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = annotatedElementSchema42.getExternalDocs();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str52 = annotatedElementSchema51.getPattern();
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema51.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = annotatedElementSchema55.getExtensions();
        schema54.setExtensions(strMap61);
        schema50.setExtensions(strMap61);
        schema41.setNot(schema50);
        io.swagger.oas.models.media.Schema schema66 = schema41.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema13.not(schema66);
        java.lang.Boolean boolean68 = schema66.getReadOnly();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElementList37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
    }

    @Test
    public void test01830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01830");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema0.xml(xML31);
        io.swagger.oas.models.media.Schema schema33 = schema32.getNot();
        java.lang.Boolean boolean34 = schema32.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema35 = schema32.getAdditionalProperties();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(schema35);
    }

    @Test
    public void test01831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01831");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.xml(xML17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser23 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema19.addExtension("no description", (java.lang.Object) operationParser23);
        annotatedElementSchema19.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        annotatedElementSchema19.setDiscriminator(discriminator27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.multipleOf(bigDecimal29);
        annotatedElementSchema19.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema19.externalDocs(externalDocumentation33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        schema34.setProperties(strMap35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        io.swagger.oas.annotations.info.Contact contact41 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional42 = io.swagger.jaxrs2.OperationParser.getContact(contact41);
        annotatedElementSchema38.setExample((java.lang.Object) contactOptional42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList50 = schema49.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema49);
        io.swagger.oas.models.media.Schema schema52 = schema16.example((java.lang.Object) schema34);
        java.lang.String str53 = schema16.getTitle();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(contactOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(annotatedElementList50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test01832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01832");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation14);
        java.lang.Boolean boolean16 = annotatedElementSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal17 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal17);
        annotatedElementSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01833");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema36.minProperties((java.lang.Integer) 10);
        java.lang.String str44 = annotatedElementSchema36.getName();
        annotatedElementSchema15.setDefault((java.lang.Object) annotatedElementSchema36);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema36.xml(xML46);
        java.lang.String str48 = schema47.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.properties(strMap55);
        schema56.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema56.addProperties("hi!", schema60);
        java.lang.String[] strArray68 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional69 = io.swagger.jaxrs2.OperationParser.getTags(strArray68);
        io.swagger.oas.models.media.Schema schema70 = schema56.example((java.lang.Object) strArray68);
        schema70.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema73 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema73.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        annotatedElementSchema73.setRequired((java.util.List<java.lang.String>) strList79);
        java.lang.Integer int82 = annotatedElementSchema73.getMinItems();
        annotatedElementSchema73.setType("hi!");
        java.util.List<java.lang.String> strList85 = annotatedElementSchema73.getRequired();
        io.swagger.oas.models.media.Schema schema86 = schema70.required(strList85);
        boolean boolean87 = schema47.equals((java.lang.Object) schema86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema86.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema13.properties(strMap88);
        java.math.BigDecimal bigDecimal90 = null;
        schema89.setMultipleOf(bigDecimal90);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(tagSetOptional69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test01834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01834");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.lang.Boolean boolean27 = annotatedElementSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.example((java.lang.Object) boolean27);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxItems((java.lang.Integer) (-1));
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.properties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema40.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal43 = schema40.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = schema28.example((java.lang.Object) bigDecimal43);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test01835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01835");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.XML xML8 = schema4.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = schema4.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = schema4.getExternalDocs();
        java.lang.String str11 = schema4.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema4.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema4.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema4.discriminator(discriminator15);
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int19 = schema4.getMaxProperties();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(xML8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(externalDocumentation10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test01836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01836");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        annotatedElementSchema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Object obj19 = null;
        annotatedElementSchema9.setExample(obj19);
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass24 = annotatedElementSchema0.getClass();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test01837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01837");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int9 = schema8.getMinProperties();
        io.swagger.oas.models.media.Schema schema11 = schema8.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.xml(xML43);
        java.lang.String str45 = schema44.getFormat();
        schema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean50 = annotatedElementSchema49.getReadOnly();
        java.lang.Boolean boolean51 = annotatedElementSchema49.getNullable();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema49.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.String str57 = annotatedElementSchema49.getDescription();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema49.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema60.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema49.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema60.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema60.setMaxProperties((java.lang.Integer) 0);
        schema44.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema schema75 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        java.math.BigDecimal bigDecimal76 = schema75.getMinimum();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(bigDecimal76);
    }

    @Test
    public void test01838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01838");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema22.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema0.example((java.lang.Object) annotatedElementSchema22);
        java.lang.Integer int36 = annotatedElementSchema0.getMinLength();
        annotatedElementSchema0.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test01839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01839");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str9 = annotatedElementSchema8.getPattern();
        annotatedElementSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = annotatedElementSchema8.getWriteOnly();
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema8);
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.xml(xML16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.maximum(bigDecimal20);
        java.util.List<java.lang.String> strList22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.required(strList22);
        io.swagger.oas.models.media.XML xML24 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.properties(strMap36);
        io.swagger.oas.models.media.Schema schema39 = schema37.minLength((java.lang.Integer) 10);
        java.lang.String str40 = schema39.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean43 = annotatedElementSchema42.getReadOnly();
        java.lang.Boolean boolean44 = annotatedElementSchema42.getNullable();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        annotatedElementSchema42.setRequired((java.util.List<java.lang.String>) strList47);
        java.lang.String str50 = annotatedElementSchema42.getDescription();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema42.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema39.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = schema57.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema28.addProperties("", schema57);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test01840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01840");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean10 = annotatedElementSchema9.getReadOnly();
        java.lang.Boolean boolean11 = annotatedElementSchema9.getNullable();
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema9.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.String str17 = annotatedElementSchema9.getDescription();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator28 = annotatedElementSchema20.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema9.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        java.lang.String str38 = annotatedElementSchema30.getName();
        annotatedElementSchema9.setDefault((java.lang.Object) annotatedElementSchema30);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.xml(xML40);
        java.lang.String str42 = schema41.getFormat();
        schema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean47 = annotatedElementSchema46.getReadOnly();
        java.lang.Boolean boolean48 = annotatedElementSchema46.getNullable();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList51);
        java.lang.String str54 = annotatedElementSchema46.getDescription();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema46.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator65 = annotatedElementSchema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema46.not((io.swagger.oas.models.media.Schema) annotatedElementSchema57);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema57.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema57.setMaxProperties((java.lang.Integer) 0);
        schema41.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema57);
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        schema72.setExternalDocs(externalDocumentation73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(discriminator65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test01841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01841");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema34.not(schema46);
        io.swagger.oas.annotations.media.Content[] contentArray48 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContent(contentArray48, produces49, produces50, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray48, components53);
        schema34.setDefault((java.lang.Object) contentArray48);
        io.swagger.oas.models.Components components56 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional57 = io.swagger.jaxrs2.OperationParser.getContents(contentArray48, components56);
        javax.ws.rs.Produces produces58 = null;
        javax.ws.rs.Produces produces59 = null;
        io.swagger.oas.models.Components components60 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional61 = io.swagger.jaxrs2.OperationParser.getContent(contentArray48, produces58, produces59, components60);
        javax.ws.rs.Produces produces62 = null;
        javax.ws.rs.Produces produces63 = null;
        io.swagger.oas.models.Components components64 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional65 = io.swagger.jaxrs2.OperationParser.getContent(contentArray48, produces62, produces63, components64);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(contentArray48);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentOptional54);
        org.junit.Assert.assertNotNull(contentOptional57);
        org.junit.Assert.assertNotNull(contentOptional61);
        org.junit.Assert.assertNotNull(contentOptional65);
    }

    @Test
    public void test01842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01842");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.lang.String str8 = annotatedElementSchema0.getName();
        java.lang.Integer int9 = annotatedElementSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.String str12 = annotatedElementSchema10.get$ref();
        io.swagger.oas.models.media.XML xML13 = null;
        annotatedElementSchema10.setXml(xML13);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema10.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = annotatedElementSchema10.getProperties();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema10.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema10);
        java.lang.Boolean boolean20 = annotatedElementSchema10.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test01843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01843");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.xml(xML8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.minimum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.maximum(bigDecimal12);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01844");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal38 = null;
        schema36.setMultipleOf(bigDecimal38);
        schema4.setExample((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal41 = null;
        schema4.setMinimum(bigDecimal41);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test01845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01845");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        schema4.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.XML xML9 = null;
        schema4.setXml(xML9);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test01846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01846");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        java.lang.Boolean boolean40 = schema24.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema41.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema41.required((java.util.List<java.lang.String>) strList52);
        annotatedElementSchema41.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.minProperties((java.lang.Integer) 10);
        java.lang.String str65 = annotatedElementSchema57.getName();
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema57.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = annotatedElementSchema41.not(schema69);
        schema70.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str73 = schema70.getType();
        io.swagger.oas.models.media.Schema schema75 = schema70.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema24.additionalProperties(schema75);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList77 = schema24.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(annotatedElementList77);
    }

    @Test
    public void test01847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01847");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        schema10.setDefault((java.lang.Object) schema16);
        java.math.BigDecimal bigDecimal19 = null;
        schema10.setMaximum(bigDecimal19);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList21 = schema10.getEnum();
        java.lang.Boolean boolean22 = schema10.getWriteOnly();
        schema10.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(annotatedElementList21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test01848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01848");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema20.properties(strMap30);
        java.lang.Object obj32 = schema31.getExample();
        io.swagger.oas.models.media.Schema schema34 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema31.minProperties((java.lang.Integer) (-1));
        java.lang.Integer int37 = schema31.getMaxLength();
        java.lang.Object obj38 = schema31.getExample();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test01849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01849");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser13 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema9.addExtension("no description", (java.lang.Object) operationParser13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.required((java.util.List<java.lang.String>) strList21);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.not(schema24);
        io.swagger.oas.models.media.Schema schema29 = schema24.type("default");
        io.swagger.oas.models.media.Schema schema31 = schema29.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema32.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        io.swagger.oas.annotations.info.Contact contact46 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional47 = io.swagger.jaxrs2.OperationParser.getContact(contact46);
        annotatedElementSchema43.setExample((java.lang.Object) contactOptional47);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.readOnly((java.lang.Boolean) false);
        java.lang.String str51 = annotatedElementSchema43.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema43.properties(strMap52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema43.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema43.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema43.minimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema43.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int67 = annotatedElementSchema62.getMinProperties();
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema62.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema72 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str73 = annotatedElementSchema72.getPattern();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema72.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = annotatedElementSchema76.getExtensions();
        schema75.setExtensions(strMap82);
        annotatedElementSchema62.setExtensions(strMap82);
        schema61.setExtensions(strMap82);
        schema42.setExtensions(strMap82);
        schema31.setExtensions(strMap82);
        schema31.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(contactOptional47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test01850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01850");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        annotatedElementSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.externalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minimum(bigDecimal14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        schema15.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test01851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01851");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        schema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01852");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema27.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema15.example((java.lang.Object) annotatedElementSchema27);
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01853");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        schema10.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01854");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int20 = annotatedElementSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema15.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.$ref("*/*");
        java.lang.Boolean boolean27 = annotatedElementSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.example((java.lang.Object) boolean27);
        java.lang.Integer int29 = annotatedElementSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema0.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str32 = annotatedElementSchema0.getFormat();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test01855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01855");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        annotatedElementSchema0.setDescription("no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = annotatedElementSchema0.getDiscriminator();
        java.lang.String str11 = annotatedElementSchema0.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.discriminator(discriminator12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01856");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.type("*/*");
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01857");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Boolean boolean13 = schema12.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema12.setDiscriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.minimum(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean31 = annotatedElementSchema30.getReadOnly();
        java.lang.Boolean boolean32 = annotatedElementSchema30.getNullable();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        annotatedElementSchema30.setRequired((java.util.List<java.lang.String>) strList35);
        schema27.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = schema27.get$ref();
        schema27.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema12.not(schema27);
        java.math.BigDecimal bigDecimal43 = null;
        schema12.setMaximum(bigDecimal43);
        java.lang.Integer int45 = schema12.getMinItems();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test01858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01858");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 1);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean12 = annotatedElementSchema11.getReadOnly();
        java.lang.Boolean boolean13 = annotatedElementSchema11.getNullable();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        io.swagger.oas.annotations.info.Contact contact19 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional20 = io.swagger.jaxrs2.OperationParser.getContact(contact19);
        annotatedElementSchema16.setExample((java.lang.Object) contactOptional20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean23 = annotatedElementSchema22.getReadOnly();
        java.lang.Boolean boolean24 = annotatedElementSchema22.getNullable();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        annotatedElementSchema22.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = annotatedElementSchema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int36 = annotatedElementSchema31.getMinProperties();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema38.required((java.util.List<java.lang.String>) strList43);
        annotatedElementSchema22.setDefault((java.lang.Object) strList43);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema16.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema16.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setPattern("");
        annotatedElementSchema50.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema50.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema50.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema50.name("");
        io.swagger.oas.models.media.Discriminator discriminator61 = schema60.getDiscriminator();
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema60.xml(xML62);
        java.lang.Class<?> wildcardClass64 = schema60.getClass();
        schema49.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass64);
        annotatedElementSchema11.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass64);
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass64);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(contactOptional20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test01859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01859");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.Boolean boolean6 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = schema5.nullable((java.lang.Boolean) true);
        java.lang.Integer int9 = schema5.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema5.nullable((java.lang.Boolean) false);
        java.lang.Integer int12 = schema11.getMaxItems();
        java.lang.Boolean boolean13 = schema11.getDeprecated();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test01860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01860");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema33.required((java.util.List<java.lang.String>) strList38);
        annotatedElementSchema17.setDefault((java.lang.Object) strList38);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList38);
        java.lang.Boolean boolean43 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema11.not(schema44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str47 = annotatedElementSchema46.getPattern();
        annotatedElementSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = annotatedElementSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str53 = annotatedElementSchema46.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str55 = annotatedElementSchema54.getPattern();
        annotatedElementSchema54.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = annotatedElementSchema54.getWriteOnly();
        boolean boolean59 = annotatedElementSchema46.equals((java.lang.Object) annotatedElementSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        annotatedElementSchema46.setExternalDocs(externalDocumentation60);
        java.lang.String[] strArray63 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList64);
        schema45.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema10.required((java.util.List<java.lang.String>) strList64);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.maximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 0);
        schema70.setMaxItems((java.lang.Integer) 1);
        schema70.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test01861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01861");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean15 = annotatedElementSchema14.getReadOnly();
        java.lang.String str16 = annotatedElementSchema14.get$ref();
        io.swagger.oas.models.media.XML xML17 = null;
        annotatedElementSchema14.setXml(xML17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = annotatedElementSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.pattern("");
        io.swagger.oas.models.media.XML xML22 = schema21.getXml();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.addProperties("", schema21);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema0.xml(xML26);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(xML22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01862");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        annotatedElementSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean17 = annotatedElementSchema16.getReadOnly();
        java.lang.Boolean boolean18 = annotatedElementSchema16.getNullable();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.String str24 = annotatedElementSchema16.getDescription();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        annotatedElementSchema27.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator35 = annotatedElementSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema16.not((io.swagger.oas.models.media.Schema) annotatedElementSchema27);
        java.lang.reflect.AnnotatedElement annotatedElement37 = annotatedElementSchema16.getDefault();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema16.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.properties(strMap46);
        io.swagger.oas.models.media.Schema schema49 = schema47.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema52.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str59 = annotatedElementSchema52.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str61 = annotatedElementSchema60.getPattern();
        annotatedElementSchema60.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean64 = annotatedElementSchema60.getWriteOnly();
        boolean boolean65 = annotatedElementSchema52.equals((java.lang.Object) annotatedElementSchema60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        annotatedElementSchema52.setExternalDocs(externalDocumentation66);
        java.lang.String[] strArray69 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        annotatedElementSchema52.setRequired((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema73 = schema51.required((java.util.List<java.lang.String>) strList70);
        io.swagger.oas.models.media.Schema schema74 = schema39.additionalProperties(schema51);
        io.swagger.oas.models.media.Schema schema76 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj77 = schema76.getExample();
        io.swagger.oas.models.media.Schema schema79 = schema76.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean80 = schema76.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = annotatedElementSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema76);
        io.swagger.oas.models.media.Schema schema82 = annotatedElementSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = schema82.get$ref();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(annotatedElement37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + false + "'", boolean80, false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(schema82);
    }

    @Test
    public void test01863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01863");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        java.lang.reflect.AnnotatedElement annotatedElement21 = annotatedElementSchema0.getDefault();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema0.minimum(bigDecimal22);
        java.lang.Boolean boolean24 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.discriminator(discriminator25);
        java.lang.Boolean boolean27 = annotatedElementSchema0.getDeprecated();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(annotatedElement21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test01864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01864");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema13.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMultipleOf(bigDecimal22);
        java.lang.String[] strArray25 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray25);
        schema21.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) tagSetOptional26);
        java.math.BigDecimal bigDecimal28 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema30.xml(xML34);
        io.swagger.oas.models.media.Schema schema36 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        java.math.BigDecimal bigDecimal37 = annotatedElementSchema30.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int43 = annotatedElementSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema38.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema38.$ref("*/*");
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema38.format("default");
        java.lang.Boolean boolean52 = schema51.getNullable();
        java.lang.Boolean boolean53 = schema51.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema54.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser58 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema54.addExtension("no description", (java.lang.Object) operationParser58);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema60.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        annotatedElementSchema60.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema54.required((java.util.List<java.lang.String>) strList66);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.maximum(bigDecimal70);
        java.util.List<java.lang.String> strList72 = schema71.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema51.required(strList72);
        annotatedElementSchema30.setRequired(strList72);
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema0.required(strList72);
        java.math.BigDecimal bigDecimal76 = schema75.getMaximum();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(tagSetOptional26);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + false + "'", boolean53, false);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(bigDecimal76);
    }

    @Test
    public void test01865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01865");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.minimum(bigDecimal9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.lang.Object obj13 = schema10.getExample();
        java.math.BigDecimal bigDecimal14 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMultipleOf(bigDecimal15);
        java.lang.Integer int17 = schema10.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = annotatedElementSchema19.getMinProperties();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        annotatedElementSchema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema27.nullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) annotatedElementSchema27);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema40 = schema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        schema39.setDiscriminator(discriminator41);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01866");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        schema10.setDefault((java.lang.Object) schema16);
        io.swagger.oas.models.media.Schema schema20 = schema10.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema10.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01867");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema13.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema33.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema19.not(schema33);
        io.swagger.oas.models.media.Schema schema38 = schema33.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema39.properties(strMap45);
        io.swagger.oas.models.media.Schema schema48 = schema46.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str50 = annotatedElementSchema49.getPattern();
        annotatedElementSchema49.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = annotatedElementSchema49.getWriteOnly();
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema49.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str57 = annotatedElementSchema56.getPattern();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema49.not((io.swagger.oas.models.media.Schema) annotatedElementSchema56);
        io.swagger.oas.models.media.Schema schema59 = schema48.not(schema58);
        io.swagger.oas.models.media.Discriminator discriminator60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.discriminator(discriminator60);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema62 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema62.setPattern("");
        annotatedElementSchema62.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema62.properties(strMap68);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = annotatedElementSchema62.getExtensions();
        schema59.setExtensions(strMap70);
        schema33.setExtensions(strMap70);
        schema13.setExtensions(strMap70);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test01868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01868");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        schema9.setTitle("#/components/schemas/");
        java.lang.Integer int12 = schema9.getMinLength();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser19 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema15.addExtension("no description", (java.lang.Object) operationParser19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema15.properties(strMap21);
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema22.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = null;
        schema22.setMinimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema29 = schema14.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema30.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema30.setNullable((java.lang.Boolean) false);
        annotatedElementSchema30.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema30.minItems((java.lang.Integer) 0);
        schema42.setType("");
        io.swagger.oas.models.media.Schema schema45 = schema29.not(schema42);
        io.swagger.oas.models.media.Schema schema47 = schema42.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test01869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01869");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        io.swagger.oas.annotations.info.Contact contact13 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional14 = io.swagger.jaxrs2.OperationParser.getContact(contact13);
        annotatedElementSchema10.setExample((java.lang.Object) contactOptional14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema29 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema29.setPattern("");
        annotatedElementSchema29.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema29.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator37 = annotatedElementSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema18.not((io.swagger.oas.models.media.Schema) annotatedElementSchema29);
        java.lang.Class<?> wildcardClass39 = annotatedElementSchema18.getClass();
        schema17.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        annotatedElementSchema0.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass39);
        io.swagger.oas.models.media.XML xML42 = annotatedElementSchema0.getXml();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(contactOptional14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNull(xML42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01870");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema17.setPattern("");
        annotatedElementSchema17.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema17.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean28 = annotatedElementSchema27.getReadOnly();
        java.lang.Boolean boolean29 = annotatedElementSchema27.getNullable();
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        annotatedElementSchema27.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str35 = annotatedElementSchema27.getDescription();
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema38 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema38.setPattern("");
        annotatedElementSchema38.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema38.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator46 = annotatedElementSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema27.not((io.swagger.oas.models.media.Schema) annotatedElementSchema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema48 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema48.setPattern("");
        annotatedElementSchema48.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema48.minProperties((java.lang.Integer) 10);
        java.lang.String str56 = annotatedElementSchema48.getName();
        annotatedElementSchema27.setDefault((java.lang.Object) annotatedElementSchema48);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema48.xml(xML58);
        annotatedElementSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema48);
        schema16.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        java.lang.Boolean boolean62 = schema16.getExclusiveMinimum();
        java.lang.String str63 = schema16.getName();
        io.swagger.oas.models.media.Schema schema65 = schema16.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema65.getNot();
        schema66.setMinProperties((java.lang.Integer) 100);
        java.lang.Integer int69 = schema66.getMaxProperties();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int69);
    }

    @Test
    public void test01871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01871");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getTitle();
        java.lang.String str47 = annotatedElementSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema50.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser54 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema50.addExtension("no description", (java.lang.Object) operationParser54);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema57.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema57.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema57.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal64 = schema63.getMultipleOf();
        io.swagger.oas.models.media.Schema schema66 = schema63.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.Boolean boolean70 = annotatedElementSchema68.getNullable();
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        annotatedElementSchema68.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.String str76 = annotatedElementSchema68.getDescription();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema68.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema68.multipleOf(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema80.exclusiveMinimum((java.lang.Boolean) false);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema82);
        annotatedElementSchema50.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema schema85 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema50);
        io.swagger.oas.models.media.Schema schema86 = schema85.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema85.getProperties();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test01872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01872");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.Contact contact12 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional13 = io.swagger.jaxrs2.OperationParser.getContact(contact12);
        annotatedElementSchema9.setExample((java.lang.Object) contactOptional13);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.readOnly((java.lang.Boolean) false);
        java.lang.String str17 = annotatedElementSchema9.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema9.properties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema9.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema9.minimum(bigDecimal24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema25.setDiscriminator(discriminator26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMaximum();
        annotatedElementSchema0.setNot(schema25);
        java.lang.Boolean boolean30 = annotatedElementSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(contactOptional13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01873");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        io.swagger.oas.annotations.info.License license12 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional13 = io.swagger.jaxrs2.OperationParser.getLicense(license12);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema9.example((java.lang.Object) licenseOptional13);
        java.lang.String str15 = annotatedElementSchema9.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = annotatedElementSchema9.getExternalDocs();
        annotatedElementSchema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema9.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema7.additionalProperties(schema20);
        java.lang.String[] strArray34 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema7.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema7.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setPattern("");
        annotatedElementSchema40.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int45 = annotatedElementSchema40.getMinProperties();
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema40.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema40.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.$ref("*/*");
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema40.minimum(bigDecimal52);
        java.lang.Integer int54 = schema53.getMaxItems();
        io.swagger.oas.models.media.Schema schema55 = schema39.not(schema53);
        io.swagger.oas.models.media.Schema schema57 = schema53.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(licenseOptional13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test01874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01874");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        schema4.setMaximum(bigDecimal10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema12.setPattern("");
        annotatedElementSchema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int17 = annotatedElementSchema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema12.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema24.setPattern("");
        annotatedElementSchema24.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema24.properties(strMap30);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = annotatedElementSchema24.getExtensions();
        schema23.setExtensions(strMap32);
        schema4.setDefault((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean37 = annotatedElementSchema36.getReadOnly();
        java.lang.Boolean boolean38 = annotatedElementSchema36.getNullable();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.String str44 = annotatedElementSchema36.getDescription();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema36.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator55 = annotatedElementSchema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema36.not((io.swagger.oas.models.media.Schema) annotatedElementSchema47);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema57 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema57.setPattern("");
        annotatedElementSchema57.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema64 = annotatedElementSchema57.minProperties((java.lang.Integer) 10);
        java.lang.String str65 = annotatedElementSchema57.getName();
        annotatedElementSchema36.setDefault((java.lang.Object) annotatedElementSchema57);
        java.lang.Integer int67 = annotatedElementSchema57.getMinItems();
        java.lang.Boolean boolean68 = annotatedElementSchema57.getDeprecated();
        annotatedElementSchema57.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str72 = annotatedElementSchema71.getPattern();
        io.swagger.oas.models.media.Schema schema74 = annotatedElementSchema71.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema75 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema75.setPattern("");
        annotatedElementSchema75.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = annotatedElementSchema75.getExtensions();
        schema74.setExtensions(strMap81);
        boolean boolean83 = annotatedElementSchema57.equals((java.lang.Object) schema74);
        io.swagger.oas.models.media.XML xML84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema74.xml(xML84);
        schema74.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal88 = null;
        schema74.setMaximum(bigDecimal88);
        io.swagger.oas.models.media.Schema schema90 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema74);
        java.lang.String str91 = schema4.getName();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test01875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01875");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        schema14.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema4.addProperties("no description", schema14);
        java.math.BigDecimal bigDecimal19 = schema14.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        io.swagger.oas.annotations.info.Contact contact23 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional24 = io.swagger.jaxrs2.OperationParser.getContact(contact23);
        annotatedElementSchema20.setExample((java.lang.Object) contactOptional24);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.readOnly((java.lang.Boolean) false);
        java.lang.String str28 = annotatedElementSchema20.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema20.properties(strMap29);
        java.lang.String str31 = annotatedElementSchema20.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema32.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema32.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setPattern("");
        annotatedElementSchema43.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int48 = annotatedElementSchema43.getMinProperties();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema43.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray54 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        io.swagger.oas.models.media.Schema schema57 = schema50.required((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema32.required((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema20.example((java.lang.Object) strList55);
        io.swagger.oas.models.media.Schema schema60 = schema14.required((java.util.List<java.lang.String>) strList55);
        java.lang.String str61 = schema14.getTitle();
        java.lang.String str62 = schema14.get$ref();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(contactOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test01876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01876");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.writeOnly((java.lang.Boolean) false);
        schema8.setMaxProperties((java.lang.Integer) 0);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01877");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.pattern("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.License license14 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional15 = io.swagger.jaxrs2.OperationParser.getLicense(license14);
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema11.example((java.lang.Object) licenseOptional15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        schema10.setDefault((java.lang.Object) schema16);
        io.swagger.oas.models.media.Schema schema20 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema57 = schema55.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema59 = schema55.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal60 = schema55.getMaximum();
        schema10.setNot(schema55);
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema55.xml(xML62);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema55.minimum(bigDecimal64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = schema65.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(licenseOptional15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test01878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01878");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema16.setRequired((java.util.List<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema25 = schema15.required((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int26 = schema25.getMinProperties();
        java.lang.Boolean boolean27 = schema25.getExclusiveMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test01879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01879");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema10.setPattern("");
        annotatedElementSchema10.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = annotatedElementSchema10.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        annotatedElementSchema10.setProperties(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        io.swagger.oas.annotations.info.Contact contact22 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional23 = io.swagger.jaxrs2.OperationParser.getContact(contact22);
        annotatedElementSchema19.setExample((java.lang.Object) contactOptional23);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.readOnly((java.lang.Boolean) false);
        java.lang.String str27 = annotatedElementSchema19.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema19.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema19.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema19.minimum(bigDecimal34);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema35.setDiscriminator(discriminator36);
        java.lang.Boolean boolean38 = schema35.getExclusiveMaximum();
        annotatedElementSchema10.setNot(schema35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = annotatedElementSchema10.getProperties();
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema10.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema42.getNot();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        schema7.setNot(schema43);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(contactOptional23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test01880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01880");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        io.swagger.oas.models.media.XML xML21 = null;
        annotatedElementSchema0.setXml(xML21);
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema0.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.addRequiredItem("default");
        schema32.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01881");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        schema11.set$ref("default");
        io.swagger.oas.models.media.Schema schema14 = schema11.getNot();
        io.swagger.oas.models.media.Schema schema16 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01882");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = null;
        annotatedElementSchema0.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema schema47 = schema34.not(schema46);
        io.swagger.oas.annotations.media.Content[] contentArray48 = new io.swagger.oas.annotations.media.Content[] {};
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContent(contentArray48, produces49, produces50, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray48, components53);
        schema34.setDefault((java.lang.Object) contentArray48);
        schema34.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(contentArray48);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentOptional54);
    }

    @Test
    public void test01883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01883");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.minProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.getTitle();
        annotatedElementSchema0.setAdditionalProperties(schema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema18.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.minLength((java.lang.Integer) 10);
        schema27.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator30 = schema27.getDiscriminator();
        schema27.setType("#/components/schemas/");
        java.lang.String str33 = schema27.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema35.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema35.setNullable((java.lang.Boolean) false);
        annotatedElementSchema35.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema35.minItems((java.lang.Integer) 0);
        java.lang.String str48 = schema47.getType();
        io.swagger.oas.models.media.XML xML49 = null;
        schema47.setXml(xML49);
        io.swagger.oas.models.media.Schema schema51 = schema27.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema53 = schema17.properties(strMap52);
        io.swagger.oas.models.media.XML xML54 = schema53.getXml();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(xML54);
    }

    @Test
    public void test01884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01884");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        annotatedElementSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.xml(xML9);
        java.lang.Boolean boolean11 = schema10.getUniqueItems();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test01885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01885");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        java.lang.String str24 = schema23.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean27 = annotatedElementSchema26.getReadOnly();
        java.lang.Boolean boolean28 = annotatedElementSchema26.getNullable();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        annotatedElementSchema26.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.String str34 = annotatedElementSchema26.getDescription();
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        annotatedElementSchema26.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        io.swagger.oas.annotations.info.Contact contact44 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional45 = io.swagger.jaxrs2.OperationParser.getContact(contact44);
        annotatedElementSchema41.setExample((java.lang.Object) contactOptional45);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.String str49 = annotatedElementSchema41.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema41.properties(strMap50);
        boolean boolean52 = schema11.equals((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema53 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal54 = null;
        annotatedElementSchema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema53.xml(xML56);
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema53.minItems((java.lang.Integer) 1);
        schema11.setNot((io.swagger.oas.models.media.Schema) annotatedElementSchema53);
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema53.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(contactOptional45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test01886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01886");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema6.format("no description");
        annotatedElementSchema0.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.lang.Integer int27 = schema23.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        io.swagger.oas.annotations.info.Contact contact31 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional32 = io.swagger.jaxrs2.OperationParser.getContact(contact31);
        annotatedElementSchema28.setExample((java.lang.Object) contactOptional32);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema28.setMinProperties((java.lang.Integer) 100);
        schema23.setExample((java.lang.Object) annotatedElementSchema28);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema0.not(schema42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator54 = annotatedElementSchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema55 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema55.setPattern("");
        annotatedElementSchema55.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = annotatedElementSchema55.properties(strMap61);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema46.not((io.swagger.oas.models.media.Schema) annotatedElementSchema55);
        java.math.BigDecimal bigDecimal64 = null;
        annotatedElementSchema46.setMinimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema46.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.multipleOf(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema69.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.multipleOf(bigDecimal72);
        schema45.setDefault((java.lang.Object) bigDecimal72);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        schema45.setExternalDocs(externalDocumentation75);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(contactOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test01887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01887");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema11.name("");
        java.lang.Boolean boolean28 = annotatedElementSchema11.getWriteOnly();
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test01888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01888");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.format("default");
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01889");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList24 = schema23.getEnum();
        schema23.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(annotatedElementList24);
    }

    @Test
    public void test01890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01890");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        java.lang.Integer int11 = schema10.getMinLength();
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test01891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01891");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema7 = schema5.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01892");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01893");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.setReadOnly((java.lang.Boolean) false);
        boolean boolean11 = annotatedElementSchema0.equals((java.lang.Object) false);
        java.lang.Integer int12 = annotatedElementSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal13 = annotatedElementSchema0.getMultipleOf();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test01894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01894");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
    }

    @Test
    public void test01895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01895");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinLength();
        java.lang.Integer int9 = schema7.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.discriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal14 = null;
        annotatedElementSchema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema13.readOnly((java.lang.Boolean) false);
        java.lang.Integer int18 = annotatedElementSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema13.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser25 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema21.addExtension("no description", (java.lang.Object) operationParser25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.properties(strMap27);
        annotatedElementSchema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema13.minLength((java.lang.Integer) 1);
        java.lang.String str32 = annotatedElementSchema13.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema13);
        schema7.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01896");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema11.xml(xML46);
        java.lang.Boolean boolean48 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str51 = schema47.getDescription();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test01897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01897");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("");
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.maximum(bigDecimal13);
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01898");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema14.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema14.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        schema25.setProperties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str29 = annotatedElementSchema28.getPattern();
        annotatedElementSchema28.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = annotatedElementSchema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema28.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema28.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str41 = annotatedElementSchema40.getPattern();
        annotatedElementSchema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = annotatedElementSchema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema40.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema40.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema40.properties(strMap50);
        java.lang.String str52 = schema51.getName();
        io.swagger.oas.annotations.info.Info info53 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional54 = io.swagger.jaxrs2.OperationParser.getInfo(info53);
        java.lang.Class<?> wildcardClass55 = infoOptional54.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema56 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema56.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema56.setRequired((java.util.List<java.lang.String>) strList62);
        java.lang.Integer int65 = annotatedElementSchema56.getMinItems();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema56.minimum(bigDecimal66);
        annotatedElementSchema56.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass70 = annotatedElementSchema56.getClass();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema71 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema71.setPattern("");
        annotatedElementSchema71.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema71.properties(strMap77);
        io.swagger.oas.models.media.Schema schema80 = schema78.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass81 = schema78.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray82 = new java.lang.reflect.AnnotatedElement[] { wildcardClass55, wildcardClass70, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList83 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList83, annotatedElementArray82);
        schema51.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema39.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema25.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        schema13.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList83);
        java.lang.String str89 = schema13.getTitle();
        java.lang.String str90 = schema13.getTitle();
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(infoOptional54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotatedElementArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test01899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01899");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema21.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema21.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList41 = annotatedElementSchema21.getEnum();
        java.lang.Boolean boolean42 = annotatedElementSchema21.getNullable();
        java.lang.Integer int43 = annotatedElementSchema21.getMaxLength();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(annotatedElementList41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test01900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01900");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = annotatedElementSchema0.getProperties();
        annotatedElementSchema0.setMaxLength((java.lang.Integer) 0);
        annotatedElementSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.discriminator(discriminator11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema schema17 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema15.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01901");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        java.lang.Integer int42 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema44.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info55 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional56 = io.swagger.jaxrs2.OperationParser.getInfo(info55);
        java.lang.Class<?> wildcardClass57 = infoOptional56.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray58 = new java.lang.reflect.AnnotatedElement[] { wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList59 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList59, annotatedElementArray58);
        schema54.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList59);
        schema41.addExtension("no description", (java.lang.Object) schema54);
        java.lang.String str63 = schema54.toString();
        io.swagger.oas.models.media.Schema schema64 = schema11.not(schema54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema11.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema66.setPattern("");
        annotatedElementSchema66.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema66.setFormat("*/*");
        annotatedElementSchema66.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str76 = annotatedElementSchema66.toString();
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema66.description("*/*");
        io.swagger.oas.models.media.Schema schema80 = annotatedElementSchema66.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema11.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema66);
        java.lang.String str82 = schema11.get$ref();
        schema11.setMaxLength((java.lang.Integer) 1);
        schema11.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(infoOptional56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(annotatedElementArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str76, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test01902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01902");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean11 = annotatedElementSchema10.getReadOnly();
        java.lang.Boolean boolean12 = annotatedElementSchema10.getNullable();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema10.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = annotatedElementSchema10.getDescription();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator29 = annotatedElementSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.minProperties((java.lang.Integer) 10);
        java.lang.String str39 = annotatedElementSchema31.getName();
        annotatedElementSchema10.setDefault((java.lang.Object) annotatedElementSchema31);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema31.xml(xML41);
        annotatedElementSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema31);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.multipleOf(bigDecimal44);
        java.lang.String str46 = annotatedElementSchema0.getType();
        java.math.BigDecimal bigDecimal47 = null;
        annotatedElementSchema0.setMinimum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.maximum(bigDecimal49);
        java.lang.Integer int51 = schema50.getMinLength();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test01903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01903");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.minimum(bigDecimal25);
        schema26.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01904");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        annotatedElementSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.discriminator(discriminator16);
        schema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        annotatedElementSchema22.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema22.setNullable((java.lang.Boolean) false);
        annotatedElementSchema22.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema22.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema22.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema22.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema41.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema41.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema41.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema22.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal58 = null;
        annotatedElementSchema22.setMinimum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = annotatedElementSchema22.exclusiveMinimum((java.lang.Boolean) true);
        schema63.setExclusiveMaximum((java.lang.Boolean) true);
        boolean boolean66 = schema17.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema67 = schema17.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(schema67);
    }

    @Test
    public void test01905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01905");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.pattern("no description");
        annotatedElementSchema0.setPattern("*/*");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.example((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01906");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema40.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser44 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema40.addExtension("no description", (java.lang.Object) operationParser44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema46.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema40.required((java.util.List<java.lang.String>) strList52);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.maximum(bigDecimal56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema schema61 = schema57.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema24.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema64 = schema24.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema64.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + true + "'", boolean65, true);
    }

    @Test
    public void test01907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01907");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        annotatedElementSchema0.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = annotatedElementSchema0.toString();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList17 = schema14.getRequired();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test01908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01908");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        java.lang.reflect.AnnotatedElement annotatedElement9 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(annotatedElement9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01909");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema8.setPattern("");
        io.swagger.oas.annotations.info.Contact contact11 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional12 = io.swagger.jaxrs2.OperationParser.getContact(contact11);
        annotatedElementSchema8.setExample((java.lang.Object) contactOptional12);
        annotatedElementSchema8.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema8.nullable((java.lang.Boolean) false);
        schema7.setDefault((java.lang.Object) annotatedElementSchema8);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema8.discriminator(discriminator19);
        annotatedElementSchema8.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema8.setMinLength((java.lang.Integer) 1);
        annotatedElementSchema8.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(contactOptional12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01910");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = annotatedElementSchema0.getExternalDocs();
        java.lang.Boolean boolean7 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = annotatedElementSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMinimum(bigDecimal13);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01911");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema7.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = schema12.get$ref();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
    }

    @Test
    public void test01912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01912");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str5 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema6.setPattern("");
        annotatedElementSchema6.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema6.minProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.getTitle();
        annotatedElementSchema0.setAdditionalProperties(schema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01913");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema7.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema16.minProperties((java.lang.Integer) 0);
        java.lang.Integer int19 = annotatedElementSchema16.getMaxItems();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema16.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean25 = annotatedElementSchema24.getReadOnly();
        java.lang.Boolean boolean26 = annotatedElementSchema24.getNullable();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList29);
        java.lang.String str32 = annotatedElementSchema24.getDescription();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema24.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema35.setPattern("");
        annotatedElementSchema35.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema35.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator43 = annotatedElementSchema35.getDiscriminator();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema24.not((io.swagger.oas.models.media.Schema) annotatedElementSchema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema45 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema45.setPattern("");
        annotatedElementSchema45.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema45.minProperties((java.lang.Integer) 10);
        java.lang.String str53 = annotatedElementSchema45.getName();
        annotatedElementSchema24.setDefault((java.lang.Object) annotatedElementSchema45);
        io.swagger.oas.models.media.Schema schema55 = null;
        annotatedElementSchema24.setNot(schema55);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema24.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList59 = annotatedElementSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema61 = annotatedElementSchema24.writeOnly((java.lang.Boolean) false);
        java.lang.String str62 = annotatedElementSchema24.getType();
        java.lang.String[] strArray68 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema24.required((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema72 = schema23.required((java.util.List<java.lang.String>) strList69);
        annotatedElementSchema7.setExample((java.lang.Object) schema72);
        schema72.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean76 = schema72.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean76);
    }

    @Test
    public void test01914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01914");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML16 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int25 = annotatedElementSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema20.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str31 = annotatedElementSchema30.getPattern();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = annotatedElementSchema34.getExtensions();
        schema33.setExtensions(strMap40);
        annotatedElementSchema20.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema20.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema46 = annotatedElementSchema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema46.exclusiveMinimum((java.lang.Boolean) true);
        schema48.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean51 = schema48.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema53 = schema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema48.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, #/components/schemas/, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema58 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean59 = annotatedElementSchema58.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator68 = annotatedElementSchema60.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema69 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema69.setPattern("");
        annotatedElementSchema69.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema69.properties(strMap75);
        io.swagger.oas.models.media.Schema schema77 = annotatedElementSchema60.not((io.swagger.oas.models.media.Schema) annotatedElementSchema69);
        io.swagger.oas.models.media.Schema schema78 = annotatedElementSchema58.not((io.swagger.oas.models.media.Schema) annotatedElementSchema69);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) annotatedElementSchema69);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test01915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01915");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.xml(xML8);
        java.lang.String str10 = schema9.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser15 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema11.addExtension("no description", (java.lang.Object) operationParser15);
        annotatedElementSchema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        annotatedElementSchema11.setDiscriminator(discriminator19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema11.multipleOf(bigDecimal21);
        annotatedElementSchema11.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema11.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema26);
        java.lang.Integer int28 = schema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = schema9.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01916");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setNullable((java.lang.Boolean) false);
        java.lang.Integer int23 = schema20.getMinLength();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test01917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01917");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema51 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema51.setPattern("");
        annotatedElementSchema51.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator59 = annotatedElementSchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema60 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema60.setPattern("");
        annotatedElementSchema60.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = annotatedElementSchema60.properties(strMap66);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema51.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema schema69 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema60);
        io.swagger.oas.models.media.Schema schema71 = annotatedElementSchema0.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema71.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test01918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01918");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.minimum(bigDecimal14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema11.externalDocs(externalDocumentation16);
        schema11.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01919");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.pattern("hi!");
        schema9.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema9.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList17 = schema9.getEnum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(annotatedElementList17);
    }

    @Test
    public void test01920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01920");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("no description");
        io.swagger.oas.models.media.Schema schema8 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema8.getAdditionalProperties();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test01921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01921");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.type("");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 100);
        java.lang.Integer int16 = annotatedElementSchema0.getMinProperties();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test01922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01922");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema5 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema5.setPattern("");
        io.swagger.oas.annotations.info.Contact contact8 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional9 = io.swagger.jaxrs2.OperationParser.getContact(contact8);
        annotatedElementSchema5.setExample((java.lang.Object) contactOptional9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema5.readOnly((java.lang.Boolean) false);
        java.lang.String str13 = annotatedElementSchema5.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema5.properties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema5.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema22.setPattern("");
        io.swagger.oas.annotations.info.License license25 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional26 = io.swagger.jaxrs2.OperationParser.getLicense(license25);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.example((java.lang.Object) licenseOptional26);
        java.lang.String str28 = annotatedElementSchema22.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = annotatedElementSchema22.getExternalDocs();
        annotatedElementSchema22.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema22.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema20.addProperties("", (io.swagger.oas.models.media.Schema) annotatedElementSchema22);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMaximum(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        schema40.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(contactOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(licenseOptional26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01923");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema9.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        annotatedElementSchema9.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.Integer int18 = annotatedElementSchema9.getMinItems();
        java.lang.Boolean boolean19 = annotatedElementSchema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema9);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema32.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal39 = schema38.getMultipleOf();
        io.swagger.oas.models.media.Schema schema41 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean44 = annotatedElementSchema43.getReadOnly();
        java.lang.Boolean boolean45 = annotatedElementSchema43.getNullable();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        annotatedElementSchema43.setRequired((java.util.List<java.lang.String>) strList48);
        java.lang.String str51 = annotatedElementSchema43.getDescription();
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema43.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema43.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMinimum((java.lang.Boolean) false);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema57);
        annotatedElementSchema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema61 = schema38.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList62 = schema38.getRequired();
        io.swagger.oas.models.media.Schema schema63 = schema24.not(schema38);
        java.lang.Object obj64 = schema38.getExample();
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test01924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01924");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        annotatedElementSchema0.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema19.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean31 = annotatedElementSchema0.equals((java.lang.Object) true);
        java.lang.Boolean boolean32 = annotatedElementSchema0.getWriteOnly();
        annotatedElementSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema0.maxLength((java.lang.Integer) 100);
        java.lang.String str37 = annotatedElementSchema0.getFormat();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test01925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01925");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema50 = schema17.getNot();
        io.swagger.oas.models.media.Schema schema52 = schema17.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema52.name("");
        schema52.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01926");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minimum(bigDecimal23);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01927");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMinimum(bigDecimal27);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01928");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema8 = schema6.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01929");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        io.swagger.oas.models.media.Schema schema50 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal51 = schema50.getMinimum();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
    }

    @Test
    public void test01930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01930");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setFormat("hi!");
        java.lang.Boolean boolean14 = annotatedElementSchema7.getWriteOnly();
        java.lang.Boolean boolean15 = annotatedElementSchema7.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + true + "'", boolean15, true);
    }

    @Test
    public void test01931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01931");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        annotatedElementSchema0.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = annotatedElementSchema0.getWriteOnly();
        java.lang.String str11 = annotatedElementSchema0.get$ref();
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        schema15.setDiscriminator(discriminator16);
        java.lang.String str18 = schema15.getPattern();
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + true + "'", boolean10, true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01932");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal20 = annotatedElementSchema0.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean22 = annotatedElementSchema21.getReadOnly();
        java.lang.Boolean boolean23 = annotatedElementSchema21.getNullable();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        annotatedElementSchema21.setRequired((java.util.List<java.lang.String>) strList26);
        java.lang.String str29 = annotatedElementSchema21.getDescription();
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema21.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator40 = annotatedElementSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema21.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema42 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema42.setPattern("");
        annotatedElementSchema42.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema42.minProperties((java.lang.Integer) 10);
        java.lang.String str50 = annotatedElementSchema42.getName();
        annotatedElementSchema21.setDefault((java.lang.Object) annotatedElementSchema42);
        io.swagger.oas.models.media.Schema schema52 = null;
        annotatedElementSchema21.setNot(schema52);
        io.swagger.oas.models.media.Schema schema55 = annotatedElementSchema21.addRequiredItem("*/*");
        java.lang.String str56 = annotatedElementSchema21.getName();
        io.swagger.oas.models.media.Schema schema57 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = annotatedElementSchema21.maximum(bigDecimal58);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema61 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema61.setPattern("");
        io.swagger.oas.annotations.info.Contact contact64 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional65 = io.swagger.jaxrs2.OperationParser.getContact(contact64);
        annotatedElementSchema61.setExample((java.lang.Object) contactOptional65);
        io.swagger.oas.models.media.Schema schema68 = annotatedElementSchema61.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean69 = schema68.getExclusiveMinimum();
        java.lang.Boolean boolean70 = schema68.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema72 = schema68.uniqueItems((java.lang.Boolean) false);
        schema59.addExtension("", (java.lang.Object) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(contactOptional65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test01933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01933");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        io.swagger.oas.models.media.Discriminator discriminator9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.discriminator(discriminator9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean18 = annotatedElementSchema17.getReadOnly();
        java.lang.Boolean boolean19 = annotatedElementSchema17.getNullable();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        annotatedElementSchema17.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.String str25 = annotatedElementSchema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int31 = annotatedElementSchema26.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.uniqueItems((java.lang.Boolean) false);
        java.lang.String[] strArray37 = new java.lang.String[] { "*/*", "#/components/schemas/", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema33.required((java.util.List<java.lang.String>) strList38);
        annotatedElementSchema17.setDefault((java.lang.Object) strList38);
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema11.required((java.util.List<java.lang.String>) strList38);
        java.lang.Boolean boolean43 = annotatedElementSchema11.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = null;
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema11.not(schema44);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str47 = annotatedElementSchema46.getPattern();
        annotatedElementSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean50 = annotatedElementSchema46.getWriteOnly();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema46.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str53 = annotatedElementSchema46.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema54 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str55 = annotatedElementSchema54.getPattern();
        annotatedElementSchema54.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean58 = annotatedElementSchema54.getWriteOnly();
        boolean boolean59 = annotatedElementSchema46.equals((java.lang.Object) annotatedElementSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        annotatedElementSchema46.setExternalDocs(externalDocumentation60);
        java.lang.String[] strArray63 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        annotatedElementSchema46.setRequired((java.util.List<java.lang.String>) strList64);
        schema45.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema10.required((java.util.List<java.lang.String>) strList64);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.maximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 0);
        schema70.setMaxItems((java.lang.Integer) 1);
        schema70.setDescription("");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test01934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01934");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema7.addProperties("hi!", schema11);
        java.lang.String[] strArray19 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray19);
        io.swagger.oas.models.media.Schema schema21 = schema7.example((java.lang.Object) strArray19);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema22 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str23 = annotatedElementSchema22.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema22.getExtensions();
        io.swagger.oas.models.media.Schema schema25 = schema21.example((java.lang.Object) annotatedElementSchema22);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema22.maximum(bigDecimal26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.discriminator(discriminator28);
        schema29.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(tagSetOptional20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01935");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        java.lang.String str17 = schema16.get$ref();
        java.lang.String str18 = schema16.toString();
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test01936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01936");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        io.swagger.oas.models.media.Schema schema10 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.type("");
        io.swagger.oas.models.media.Schema schema14 = schema10.pattern("");
        java.math.BigDecimal bigDecimal15 = null;
        schema10.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        annotatedElementSchema17.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean21 = annotatedElementSchema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema17.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema17.properties(strMap27);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.lang.Integer int35 = annotatedElementSchema32.getMaxItems();
        java.lang.Integer int36 = annotatedElementSchema32.getMinLength();
        io.swagger.oas.models.media.Schema schema37 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema38 = schema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test01937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01937");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getType();
        io.swagger.oas.models.media.Schema schema16 = schema11.$ref("hi!");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.minimum(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        schema18.setMinimum(bigDecimal19);
        schema18.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01938");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int3 = annotatedElementSchema0.getMaxItems();
        java.lang.Integer int4 = annotatedElementSchema0.getMinLength();
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.addRequiredItem("default");
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01939");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema2 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema2.setPattern("");
        io.swagger.oas.annotations.info.Contact contact5 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional6 = io.swagger.jaxrs2.OperationParser.getContact(contact5);
        annotatedElementSchema2.setExample((java.lang.Object) contactOptional6);
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema2.readOnly((java.lang.Boolean) false);
        java.lang.String str10 = annotatedElementSchema2.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema2.properties(strMap11);
        boolean boolean13 = annotatedElementSchema0.equals((java.lang.Object) annotatedElementSchema2);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNotNull(contactOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01940");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.minimum(bigDecimal8);
        java.lang.String str10 = schema7.toString();
        io.swagger.oas.models.media.Schema schema12 = schema7.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str10, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01941");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema11.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema11.setNullable((java.lang.Boolean) false);
        annotatedElementSchema11.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema11.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setPattern("");
        annotatedElementSchema25.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema25.name("");
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        schema35.setPattern("*/*");
        boolean boolean39 = schema24.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema40 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal41 = null;
        annotatedElementSchema40.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema40.minProperties((java.lang.Integer) 0);
        schema44.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema48 = schema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema50.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema35.not(schema52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.minimum(bigDecimal54);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01942");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        java.lang.Object obj29 = null;
        schema24.setDefault(obj29);
        schema24.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01943");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Discriminator discriminator5 = null;
        annotatedElementSchema0.setDiscriminator(discriminator5);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation7);
    }

    @Test
    public void test01944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01944");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        annotatedElementSchema0.setProperties(strMap12);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean16 = annotatedElementSchema15.getReadOnly();
        java.lang.Boolean boolean17 = annotatedElementSchema15.getNullable();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList20);
        java.lang.String str23 = annotatedElementSchema15.getDescription();
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema26 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema26.setPattern("");
        annotatedElementSchema26.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema26.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator34 = annotatedElementSchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema15.not((io.swagger.oas.models.media.Schema) annotatedElementSchema26);
        java.lang.reflect.AnnotatedElement annotatedElement36 = annotatedElementSchema15.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str38 = annotatedElementSchema37.getPattern();
        annotatedElementSchema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = annotatedElementSchema37.getWriteOnly();
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema37.exclusiveMaximum((java.lang.Boolean) true);
        annotatedElementSchema15.setNot(schema43);
        annotatedElementSchema15.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema48 = annotatedElementSchema15.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema0.addProperties("hi!", (io.swagger.oas.models.media.Schema) annotatedElementSchema15);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String str52 = schema51.getPattern();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(annotatedElement36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test01945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01945");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean7 = schema6.getExclusiveMinimum();
        schema6.set$ref("*/*");
        java.lang.Integer int10 = schema6.getMaxLength();
        schema6.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema13 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema13.setPattern("");
        annotatedElementSchema13.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema13.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema13.setNullable((java.lang.Boolean) false);
        annotatedElementSchema13.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema13.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema13.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 0);
        boolean boolean32 = schema6.equals((java.lang.Object) schema31);
        schema6.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test01946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01946");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.title("hi!");
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.format("hi!");
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        schema15.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema15.setExternalDocs(externalDocumentation18);
        annotatedElementSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) externalDocumentation18);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01947");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema10.getNullable();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test01948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01948");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean5 = schema4.getReadOnly();
        java.math.BigDecimal bigDecimal6 = null;
        schema4.setMaximum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean9 = annotatedElementSchema8.getReadOnly();
        java.lang.Boolean boolean10 = annotatedElementSchema8.getNullable();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = annotatedElementSchema8.getDescription();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema19.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator27 = annotatedElementSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema8.not((io.swagger.oas.models.media.Schema) annotatedElementSchema19);
        java.lang.reflect.AnnotatedElement annotatedElement29 = annotatedElementSchema8.getDefault();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = annotatedElementSchema8.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema39.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str51 = annotatedElementSchema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema52 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str53 = annotatedElementSchema52.getPattern();
        annotatedElementSchema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean56 = annotatedElementSchema52.getWriteOnly();
        boolean boolean57 = annotatedElementSchema44.equals((java.lang.Object) annotatedElementSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        annotatedElementSchema44.setExternalDocs(externalDocumentation58);
        java.lang.String[] strArray61 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        annotatedElementSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = schema43.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema31.additionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema67 = schema4.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema68 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean69 = annotatedElementSchema68.getReadOnly();
        java.lang.String str70 = annotatedElementSchema68.get$ref();
        io.swagger.oas.models.media.XML xML71 = null;
        annotatedElementSchema68.setXml(xML71);
        java.lang.Boolean boolean73 = annotatedElementSchema68.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = annotatedElementSchema68.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema31.not(schema75);
        io.swagger.oas.models.media.Schema schema78 = schema75.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema75.xml(xML79);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(annotatedElement29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test01949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01949");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema6 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean7 = annotatedElementSchema6.getReadOnly();
        java.lang.Boolean boolean8 = annotatedElementSchema6.getNullable();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema6.minProperties((java.lang.Integer) 1);
        annotatedElementSchema0.addExtension("#/components/schemas/", (java.lang.Object) annotatedElementSchema6);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: 0\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema13.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01950");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = annotatedElementSchema14.getExtensions();
        schema13.setExtensions(strMap20);
        annotatedElementSchema0.setExtensions(strMap20);
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.minProperties((java.lang.Integer) (-1));
        schema24.setDescription("");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.maximum(bigDecimal27);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.externalDocs(externalDocumentation29);
        java.util.List<java.lang.String> strList31 = schema30.getRequired();
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test01951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01951");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.media.XML xML5 = annotatedElementSchema0.getXml();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 0);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema9.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(xML5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01952");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema19.getType();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema19.externalDocs(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01953");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema31.setPattern("");
        annotatedElementSchema31.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema31.properties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = schema38.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal42 = null;
        annotatedElementSchema41.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema41.readOnly((java.lang.Boolean) false);
        java.lang.Integer int46 = annotatedElementSchema41.getMaxProperties();
        schema40.setExample((java.lang.Object) int46);
        annotatedElementSchema0.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema0.description("#/components/schemas/");
        java.math.BigDecimal bigDecimal51 = annotatedElementSchema0.getMaximum();
        annotatedElementSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = annotatedElementSchema0.getExternalDocs();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(externalDocumentation54);
    }

    @Test
    public void test01954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01954");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.description("hi!");
        java.lang.Object obj8 = schema7.getExample();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = schema7.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal11 = null;
        annotatedElementSchema10.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema10.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean15 = schema14.getReadOnly();
        java.math.BigDecimal bigDecimal16 = null;
        schema14.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema14.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setExample((java.lang.Object) 10.0d);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean26 = annotatedElementSchema25.getReadOnly();
        java.lang.String str27 = annotatedElementSchema25.get$ref();
        io.swagger.oas.models.media.XML xML28 = null;
        annotatedElementSchema25.setXml(xML28);
        java.lang.Boolean boolean30 = annotatedElementSchema25.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal33 = null;
        annotatedElementSchema32.setMultipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema32.nullable((java.lang.Boolean) false);
        annotatedElementSchema32.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema32);
        io.swagger.oas.models.media.Schema schema40 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema41 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema41.setPattern("");
        annotatedElementSchema41.setReadOnly((java.lang.Boolean) false);
        java.lang.String str46 = annotatedElementSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema47.setPattern("");
        annotatedElementSchema47.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema47.minProperties((java.lang.Integer) 10);
        java.lang.String str55 = schema54.getTitle();
        annotatedElementSchema41.setAdditionalProperties(schema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema59 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema59.setPattern("");
        annotatedElementSchema59.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = annotatedElementSchema59.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema66.minLength((java.lang.Integer) 10);
        schema68.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator71 = schema68.getDiscriminator();
        schema68.setType("#/components/schemas/");
        java.lang.String str74 = schema68.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema76 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema76.setPattern("");
        annotatedElementSchema76.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema76.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema76.setNullable((java.lang.Boolean) false);
        annotatedElementSchema76.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema76.minItems((java.lang.Integer) 0);
        java.lang.String str89 = schema88.getType();
        io.swagger.oas.models.media.XML xML90 = null;
        schema88.setXml(xML90);
        io.swagger.oas.models.media.Schema schema92 = schema68.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema88);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = schema68.getProperties();
        io.swagger.oas.models.media.Schema schema94 = schema58.properties(strMap93);
        schema40.setProperties(strMap93);
        io.swagger.oas.models.media.Schema schema96 = schema7.properties(strMap93);
        java.lang.Boolean boolean97 = schema96.getDeprecated();
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(boolean97);
    }

    @Test
    public void test01955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01955");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.minimum(bigDecimal10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = annotatedElementSchema0.getExtensions();
        java.lang.String str13 = annotatedElementSchema0.getName();
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        annotatedElementSchema0.setExternalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01956");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        schema11.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal21 = null;
        schema11.setMultipleOf(bigDecimal21);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01957");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.Boolean boolean10 = annotatedElementSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test01958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01958");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator7 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal8 = null;
        schema4.setMultipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema10 = schema4.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str12 = annotatedElementSchema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema11.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema15.setPattern("");
        annotatedElementSchema15.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = annotatedElementSchema15.getExtensions();
        schema14.setExtensions(strMap21);
        schema4.setExtensions(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema4.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema4.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema4.maximum(bigDecimal26);
        java.lang.Boolean boolean28 = schema4.getDeprecated();
        java.lang.String str29 = schema4.getDescription();
        io.swagger.oas.models.media.Schema schema31 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01959");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        schema7.setFormat("#/components/schemas/");
        schema7.setMaxLength((java.lang.Integer) 1);
        java.lang.String str14 = schema7.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema7.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema18.setPattern("");
        annotatedElementSchema18.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = annotatedElementSchema18.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        annotatedElementSchema18.setProperties(strMap25);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema27 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema27.setPattern("");
        io.swagger.oas.annotations.info.Contact contact30 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional31 = io.swagger.jaxrs2.OperationParser.getContact(contact30);
        annotatedElementSchema27.setExample((java.lang.Object) contactOptional31);
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema27.readOnly((java.lang.Boolean) false);
        java.lang.String str35 = annotatedElementSchema27.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema27.properties(strMap36);
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema27.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema27.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = annotatedElementSchema27.minimum(bigDecimal42);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema43.setDiscriminator(discriminator44);
        java.lang.Boolean boolean46 = schema43.getExclusiveMaximum();
        annotatedElementSchema18.setNot(schema43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = annotatedElementSchema18.getProperties();
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema18.xml(xML49);
        io.swagger.oas.models.media.Schema schema51 = schema50.getNot();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema51.minimum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema55 = schema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: Optional.empty\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema51);
        io.swagger.oas.models.media.Schema schema57 = schema7.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(contactOptional31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test01960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01960");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMaxItems();
        io.swagger.oas.models.media.XML xML9 = null;
        schema7.setXml(xML9);
        java.math.BigDecimal bigDecimal11 = schema7.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema7.maximum(bigDecimal14);
        schema7.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean19 = annotatedElementSchema18.getReadOnly();
        java.lang.Boolean boolean20 = annotatedElementSchema18.getNullable();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        annotatedElementSchema18.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.String str26 = annotatedElementSchema18.getDescription();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema18.minItems((java.lang.Integer) (-1));
        schema28.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema32 = schema28.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        schema7.setNot(schema32);
        schema32.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema32.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01961");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("");
        java.lang.Integer int23 = schema22.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema29.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema32.setMinItems((java.lang.Integer) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
    }

    @Test
    public void test01962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01962");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        io.swagger.oas.annotations.info.Contact contact10 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional11 = io.swagger.jaxrs2.OperationParser.getContact(contact10);
        annotatedElementSchema7.setExample((java.lang.Object) contactOptional11);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.readOnly((java.lang.Boolean) false);
        java.lang.String str15 = annotatedElementSchema7.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema7.properties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema7.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema7.deprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        annotatedElementSchema7.setXml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema7.description("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema7.externalDocs(externalDocumentation29);
        annotatedElementSchema7.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(contactOptional11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01963");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.String str2 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.media.XML xML3 = null;
        annotatedElementSchema0.setXml(xML3);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = annotatedElementSchema0.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        java.lang.Integer int8 = schema7.getMinItems();
        io.swagger.oas.models.media.Schema schema10 = schema7.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList11 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema13 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMaximum(bigDecimal14);
        schema10.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(annotatedElementList11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01964");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList5 = annotatedElementSchema0.getEnum();
        annotatedElementSchema0.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema8 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema8.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        annotatedElementSchema8.setRequired((java.util.List<java.lang.String>) strList14);
        java.lang.Integer int17 = annotatedElementSchema8.getMinItems();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema8.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.additionalProperties((io.swagger.oas.models.media.Schema) annotatedElementSchema8);
        annotatedElementSchema0.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = annotatedElementSchema0.properties(strMap23);
        java.math.BigDecimal bigDecimal25 = annotatedElementSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = null;
        annotatedElementSchema0.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.XML xML28 = null;
        annotatedElementSchema0.setXml(xML28);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(annotatedElementList5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test01965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01965");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        schema13.setName("default");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList18 = schema13.getRequired();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strList18);
    }

    @Test
    public void test01966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01966");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = schema11.getMinimum();
        java.lang.Boolean boolean15 = schema11.getWriteOnly();
        java.util.List<java.lang.String> strList16 = schema11.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test01967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01967");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal5 = annotatedElementSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.format("default");
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) true);
        schema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        annotatedElementSchema12.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema12.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema21.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.xml(xML32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean35 = annotatedElementSchema34.getReadOnly();
        java.lang.Boolean boolean36 = annotatedElementSchema34.getNullable();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        annotatedElementSchema34.setRequired((java.util.List<java.lang.String>) strList39);
        schema31.setRequired((java.util.List<java.lang.String>) strList39);
        io.swagger.oas.models.media.Schema schema43 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema31);
        schema7.setDefault((java.lang.Object) schema19);
        schema19.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01968");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        java.math.BigDecimal bigDecimal14 = schema12.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test01969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01969");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean1 = annotatedElementSchema0.getReadOnly();
        java.lang.Boolean boolean2 = annotatedElementSchema0.getNullable();
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList5);
        java.lang.String str8 = annotatedElementSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.minProperties((java.lang.Integer) 10);
        java.lang.String str29 = annotatedElementSchema21.getName();
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema21);
        java.lang.Integer int31 = annotatedElementSchema21.getMinItems();
        java.lang.Boolean boolean32 = annotatedElementSchema21.getDeprecated();
        annotatedElementSchema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema35 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str36 = annotatedElementSchema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = annotatedElementSchema39.getExtensions();
        schema38.setExtensions(strMap45);
        boolean boolean47 = annotatedElementSchema21.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema49.setPattern("");
        annotatedElementSchema49.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int54 = annotatedElementSchema49.getMinProperties();
        io.swagger.oas.models.media.Schema schema56 = annotatedElementSchema49.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema49.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = annotatedElementSchema49.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        annotatedElementSchema49.setProperties(strMap61);
        schema38.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap61);
        io.swagger.oas.models.media.Schema schema65 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema66 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean67 = annotatedElementSchema66.getReadOnly();
        java.lang.Boolean boolean68 = annotatedElementSchema66.getNullable();
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        annotatedElementSchema66.setRequired((java.util.List<java.lang.String>) strList71);
        java.lang.String str74 = annotatedElementSchema66.getDescription();
        io.swagger.oas.models.media.Schema schema76 = annotatedElementSchema66.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema77 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema77.setPattern("");
        annotatedElementSchema77.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema84 = annotatedElementSchema77.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator85 = annotatedElementSchema77.getDiscriminator();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema66.not((io.swagger.oas.models.media.Schema) annotatedElementSchema77);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema77.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean89 = annotatedElementSchema77.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        io.swagger.oas.models.media.Schema schema91 = annotatedElementSchema77.externalDocs(externalDocumentation90);
        io.swagger.oas.models.media.Schema schema93 = schema91.$ref("");
        schema38.setDefault((java.lang.Object) "");
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(discriminator85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test01970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01970");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str7 = annotatedElementSchema0.getFormat();
        java.lang.Object obj8 = annotatedElementSchema0.getExample();
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = null;
        schema12.setXml(xML13);
        schema12.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01971");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.License license3 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional4 = io.swagger.jaxrs2.OperationParser.getLicense(license3);
        io.swagger.oas.models.media.Schema schema5 = annotatedElementSchema0.example((java.lang.Object) licenseOptional4);
        java.lang.String str6 = annotatedElementSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = annotatedElementSchema0.getExternalDocs();
        annotatedElementSchema0.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema12.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema12.properties(strMap22);
        java.util.List<java.lang.String> strList24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.required(strList24);
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema28 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema28.setPattern("");
        annotatedElementSchema28.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema28.pattern("hi!");
        schema37.setMinProperties((java.lang.Integer) 10);
        schema25.addExtension("*/*", (java.lang.Object) schema37);
        schema11.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema43 = schema37.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean44 = schema37.getNullable();
        org.junit.Assert.assertNotNull(licenseOptional4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + false + "'", boolean44, false);
    }

    @Test
    public void test01972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01972");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str8 = annotatedElementSchema0.getTitle();
        java.lang.Integer int9 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        io.swagger.oas.annotations.info.Contact contact14 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional15 = io.swagger.jaxrs2.OperationParser.getContact(contact14);
        annotatedElementSchema11.setExample((java.lang.Object) contactOptional15);
        annotatedElementSchema11.setName("no description");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean20 = annotatedElementSchema19.getReadOnly();
        java.lang.Boolean boolean21 = annotatedElementSchema19.getNullable();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        annotatedElementSchema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.String str27 = annotatedElementSchema19.getDescription();
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema30 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema30.setPattern("");
        annotatedElementSchema30.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema37 = annotatedElementSchema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = annotatedElementSchema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = annotatedElementSchema19.not((io.swagger.oas.models.media.Schema) annotatedElementSchema30);
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema30.exclusiveMaximum((java.lang.Boolean) true);
        boolean boolean42 = annotatedElementSchema11.equals((java.lang.Object) true);
        java.util.List<java.lang.String> strList43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema11.required(strList43);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema0.addProperties("default", (io.swagger.oas.models.media.Schema) annotatedElementSchema11);
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema11.xml(xML46);
        java.lang.String str48 = annotatedElementSchema11.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema11.externalDocs(externalDocumentation49);
        schema50.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(contactOptional15);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "no description" + "'", str48, "no description");
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01973");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: -1\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = schema17.getWriteOnly();
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test01974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01974");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        annotatedElementSchema0.setRequired((java.util.List<java.lang.String>) strList6);
        java.lang.Integer int9 = annotatedElementSchema0.getMinItems();
        java.lang.reflect.AnnotatedElement annotatedElement10 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(annotatedElement10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01975");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = schema11.getMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema11.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01976");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema28.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema32.setPattern("");
        annotatedElementSchema32.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int37 = annotatedElementSchema32.getMinProperties();
        annotatedElementSchema32.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema32.xml(xML40);
        java.lang.String str42 = schema41.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema43 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema43.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser47 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema43.addExtension("no description", (java.lang.Object) operationParser47);
        annotatedElementSchema43.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        annotatedElementSchema43.setDiscriminator(discriminator51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema43.multipleOf(bigDecimal53);
        annotatedElementSchema43.setName("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = annotatedElementSchema43.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema schema59 = schema41.additionalProperties(schema58);
        java.lang.Class<?> wildcardClass60 = schema59.getClass();
        schema31.addEnumItemObject((java.lang.reflect.AnnotatedElement) wildcardClass60);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test01977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01977");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.required((java.util.List<java.lang.String>) strList11);
        annotatedElementSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema16 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema16.setPattern("");
        annotatedElementSchema16.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema16.minProperties((java.lang.Integer) 10);
        java.lang.String str24 = annotatedElementSchema16.getName();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = annotatedElementSchema0.not(schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int39 = annotatedElementSchema34.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema34.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema34.$ref("*/*");
        io.swagger.oas.models.media.Schema schema47 = annotatedElementSchema34.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema34.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema50 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema50.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        annotatedElementSchema50.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = schema49.required((java.util.List<java.lang.String>) strList56);
        java.lang.String str60 = schema59.getTitle();
        io.swagger.oas.models.media.Schema schema61 = schema31.not(schema59);
        java.math.BigDecimal bigDecimal62 = schema59.getMultipleOf();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
    }

    @Test
    public void test01978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01978");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = annotatedElementSchema0.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str15 = annotatedElementSchema14.getPattern();
        annotatedElementSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = annotatedElementSchema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = annotatedElementSchema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str22 = annotatedElementSchema21.getPattern();
        io.swagger.oas.models.media.Schema schema23 = annotatedElementSchema14.not((io.swagger.oas.models.media.Schema) annotatedElementSchema21);
        schema23.setTitle("#/components/schemas/");
        java.lang.Integer int26 = schema23.getMinLength();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.minimum(bigDecimal27);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        schema10.addExtension("#/components/schemas/", (java.lang.Object) bigDecimal29);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test01979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01979");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator8 = annotatedElementSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema9 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema9.setPattern("");
        annotatedElementSchema9.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema9.properties(strMap15);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema9);
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema0.setMinimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.multipleOf(bigDecimal26);
        schema27.setMinLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema27.getExtensions();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test01980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01980");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList13 = schema12.getEnum();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElementList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01981");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str8 = annotatedElementSchema7.getPattern();
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.not((io.swagger.oas.models.media.Schema) annotatedElementSchema7);
        annotatedElementSchema7.setDeprecated((java.lang.Boolean) true);
        annotatedElementSchema7.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = annotatedElementSchema7.maxProperties((java.lang.Integer) 0);
        schema15.setUniqueItems((java.lang.Boolean) true);
        schema15.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema15.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01982");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.maximum(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal8);
        annotatedElementSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema23.setPattern("");
        annotatedElementSchema23.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema30 = annotatedElementSchema23.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator31 = annotatedElementSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema12.not((io.swagger.oas.models.media.Schema) annotatedElementSchema23);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema33 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema33.setPattern("");
        annotatedElementSchema33.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema33.minProperties((java.lang.Integer) 10);
        java.lang.String str41 = annotatedElementSchema33.getName();
        annotatedElementSchema12.setDefault((java.lang.Object) annotatedElementSchema33);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema33.xml(xML43);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema46 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema46.setPattern("");
        annotatedElementSchema46.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema46.properties(strMap52);
        schema53.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema53.addProperties("hi!", schema57);
        java.lang.String[] strArray65 = new java.lang.String[] { "*/*", "#/components/schemas/", "", "#/components/schemas/", "", "*/*" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        io.swagger.oas.models.media.Schema schema67 = schema53.example((java.lang.Object) strArray65);
        schema67.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema70 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema72 = annotatedElementSchema70.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        annotatedElementSchema70.setRequired((java.util.List<java.lang.String>) strList76);
        java.lang.Integer int79 = annotatedElementSchema70.getMinItems();
        annotatedElementSchema70.setType("hi!");
        java.util.List<java.lang.String> strList82 = annotatedElementSchema70.getRequired();
        io.swagger.oas.models.media.Schema schema83 = schema67.required(strList82);
        boolean boolean84 = schema44.equals((java.lang.Object) schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema83.getProperties();
        io.swagger.oas.models.media.Schema schema86 = annotatedElementSchema0.properties(strMap85);
        io.swagger.oas.models.media.Schema schema88 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test01983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01983");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema49 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal50 = null;
        annotatedElementSchema49.setMultipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema49.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean54 = schema53.getReadOnly();
        java.math.BigDecimal bigDecimal55 = null;
        schema53.setMaximum(bigDecimal55);
        io.swagger.oas.models.media.XML xML57 = schema53.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema53.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = schema53.getExternalDocs();
        java.lang.String str60 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema62 = schema53.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: */*\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int63 = schema53.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema53.discriminator(discriminator64);
        schema53.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema45.additionalProperties(schema53);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(xML57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01984");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser4 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema0.addExtension("no description", (java.lang.Object) operationParser4);
        annotatedElementSchema0.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        annotatedElementSchema0.setDiscriminator(discriminator8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.multipleOf(bigDecimal10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema14 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema14.setPattern("");
        annotatedElementSchema14.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int19 = annotatedElementSchema14.getMinProperties();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema24 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema24.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema24.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = annotatedElementSchema24.getMinItems();
        annotatedElementSchema24.setType("hi!");
        java.util.List<java.lang.String> strList36 = annotatedElementSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema23.required(strList36);
        schema11.setRequired(strList36);
        io.swagger.oas.models.media.Schema schema40 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01985");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal18 = null;
        annotatedElementSchema17.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema17.readOnly((java.lang.Boolean) false);
        java.lang.Integer int22 = annotatedElementSchema17.getMaxProperties();
        annotatedElementSchema17.setPattern("");
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema17.minProperties((java.lang.Integer) 1);
        schema16.setDefault((java.lang.Object) schema26);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01986");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema0.setNullable((java.lang.Boolean) false);
        annotatedElementSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 0);
        java.lang.String str13 = schema12.getType();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.externalDocs(externalDocumentation14);
        schema12.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema19 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema19.setPattern("");
        annotatedElementSchema19.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema19.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.xml(xML30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema32.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        annotatedElementSchema32.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.Integer int41 = annotatedElementSchema32.getMinItems();
        annotatedElementSchema32.setType("hi!");
        java.util.List<java.lang.String> strList44 = annotatedElementSchema32.getRequired();
        io.swagger.oas.models.media.Schema schema45 = schema29.required(strList44);
        io.swagger.oas.models.media.Schema schema46 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        java.lang.Class<?> wildcardClass47 = schema46.getClass();
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test01987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01987");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema0.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema0.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema0.addRequiredItem("");
        java.lang.Boolean boolean19 = annotatedElementSchema0.getWriteOnly();
        java.util.List<java.lang.String> strList20 = annotatedElementSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.$ref("*/*");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema21.minimum(bigDecimal33);
        java.lang.String str35 = schema34.getTitle();
        io.swagger.oas.models.media.Schema schema37 = schema34.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = annotatedElementSchema0.not(schema34);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema39 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema39.setPattern("");
        annotatedElementSchema39.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema39.setExclusiveMinimum((java.lang.Boolean) false);
        annotatedElementSchema39.setNullable((java.lang.Boolean) false);
        annotatedElementSchema39.setMinLength((java.lang.Integer) 0);
        annotatedElementSchema39.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema39.externalDocs(externalDocumentation52);
        annotatedElementSchema0.setDefault((java.lang.Object) schema53);
        io.swagger.oas.models.media.XML xML55 = schema53.getXml();
        io.swagger.oas.models.media.Schema schema57 = schema53.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: default\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema53.multipleOf(bigDecimal58);
        schema59.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(xML55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test01988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01988");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema4.title("");
        io.swagger.oas.models.media.Schema schema10 = schema8.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema12 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML13 = null;
        schema8.setXml(xML13);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema15.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList21);
        java.lang.Integer int24 = annotatedElementSchema15.getMinItems();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema15.minimum(bigDecimal25);
        schema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setNot(schema26);
        java.math.BigDecimal bigDecimal30 = schema26.getMaximum();
        java.lang.Boolean boolean31 = schema26.getWriteOnly();
        schema26.setMaxItems((java.lang.Integer) 0);
        java.lang.String str34 = schema26.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str37 = annotatedElementSchema36.getPattern();
        annotatedElementSchema36.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = annotatedElementSchema36.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = annotatedElementSchema36.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str43 = annotatedElementSchema36.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        boolean boolean49 = annotatedElementSchema36.equals((java.lang.Object) annotatedElementSchema44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        annotatedElementSchema36.setExternalDocs(externalDocumentation50);
        java.lang.String[] strArray53 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        annotatedElementSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        annotatedElementSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) annotatedElementSchema36);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test01989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01989");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        java.math.BigDecimal bigDecimal18 = schema10.getMultipleOf();
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema10.xml(xML19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01990");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema11 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema11.setPattern("");
        annotatedElementSchema11.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator19 = annotatedElementSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema20.setPattern("");
        annotatedElementSchema20.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = annotatedElementSchema20.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema11.not((io.swagger.oas.models.media.Schema) annotatedElementSchema20);
        annotatedElementSchema0.setDefault((java.lang.Object) annotatedElementSchema20);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = annotatedElementSchema0.getExtensions();
        java.lang.Object obj31 = null;
        boolean boolean32 = annotatedElementSchema0.equals(obj31);
        annotatedElementSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test01991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01991");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str13 = annotatedElementSchema12.getPattern();
        annotatedElementSchema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = annotatedElementSchema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = annotatedElementSchema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str19 = annotatedElementSchema12.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema20 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str21 = annotatedElementSchema20.getPattern();
        annotatedElementSchema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean24 = annotatedElementSchema20.getWriteOnly();
        boolean boolean25 = annotatedElementSchema12.equals((java.lang.Object) annotatedElementSchema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        annotatedElementSchema12.setExternalDocs(externalDocumentation26);
        java.lang.String[] strArray29 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema schema33 = schema11.required((java.util.List<java.lang.String>) strList30);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema34 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema34.setPattern("");
        annotatedElementSchema34.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = annotatedElementSchema34.properties(strMap40);
        java.lang.Integer int42 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str45 = annotatedElementSchema44.getPattern();
        annotatedElementSchema44.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = annotatedElementSchema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = annotatedElementSchema44.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = annotatedElementSchema44.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema54 = annotatedElementSchema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info55 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional56 = io.swagger.jaxrs2.OperationParser.getInfo(info55);
        java.lang.Class<?> wildcardClass57 = infoOptional56.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray58 = new java.lang.reflect.AnnotatedElement[] { wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList59 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList59, annotatedElementArray58);
        schema54.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList59);
        schema41.addExtension("no description", (java.lang.Object) schema54);
        java.lang.String str63 = schema54.toString();
        io.swagger.oas.models.media.Schema schema64 = schema11.not(schema54);
        io.swagger.oas.models.media.Schema schema66 = schema54.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(infoOptional56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(annotatedElementArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test01992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01992");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str1 = annotatedElementSchema0.getPattern();
        annotatedElementSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = annotatedElementSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema8 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.info.Info info11 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional12 = io.swagger.jaxrs2.OperationParser.getInfo(info11);
        java.lang.Class<?> wildcardClass13 = infoOptional12.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray14 = new java.lang.reflect.AnnotatedElement[] { wildcardClass13 };
        java.util.ArrayList<java.lang.reflect.AnnotatedElement> annotatedElementList15 = new java.util.ArrayList<java.lang.reflect.AnnotatedElement>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.AnnotatedElement>) annotatedElementList15, annotatedElementArray14);
        schema10.setEnum((java.util.List<java.lang.reflect.AnnotatedElement>) annotatedElementList15);
        schema10.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean20 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema21.setPattern("");
        annotatedElementSchema21.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int26 = annotatedElementSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = annotatedElementSchema21.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = annotatedElementSchema21.$ref("*/*");
        io.swagger.oas.models.media.Schema schema34 = annotatedElementSchema21.format("default");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = annotatedElementSchema21.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.media.Schema schema44 = annotatedElementSchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.xml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema47 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema49 = annotatedElementSchema47.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        annotatedElementSchema47.setRequired((java.util.List<java.lang.String>) strList53);
        java.lang.Integer int56 = annotatedElementSchema47.getMinItems();
        annotatedElementSchema47.setType("hi!");
        java.util.List<java.lang.String> strList59 = annotatedElementSchema47.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema46.required(strList59);
        annotatedElementSchema21.setRequired(strList59);
        schema10.setRequired(strList59);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(infoOptional12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(annotatedElementArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test01993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01993");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        annotatedElementSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema7 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema7.setPattern("");
        annotatedElementSchema7.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = annotatedElementSchema7.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = annotatedElementSchema0.not(schema14);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema21 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal22 = null;
        annotatedElementSchema21.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = annotatedElementSchema21.minProperties((java.lang.Integer) 0);
        schema25.setFormat("*/*");
        io.swagger.oas.models.media.Discriminator discriminator28 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal29 = null;
        schema25.setMultipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema32 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str33 = annotatedElementSchema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = annotatedElementSchema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema36 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema36.setPattern("");
        annotatedElementSchema36.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = annotatedElementSchema36.getExtensions();
        schema35.setExtensions(strMap42);
        schema25.setExtensions(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema25.getDiscriminator();
        java.math.BigDecimal bigDecimal46 = schema25.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema25.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema51 = schema49.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test01994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01994");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal1 = null;
        annotatedElementSchema0.setMultipleOf(bigDecimal1);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        schema4.setFormat("*/*");
        schema4.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema4.setProperties(strMap9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema4.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxItems((java.lang.Integer) 0);
        schema4.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema4.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema18 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.math.BigDecimal bigDecimal19 = null;
        annotatedElementSchema18.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema18.nullable((java.lang.Boolean) false);
        annotatedElementSchema18.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = annotatedElementSchema18.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema4.not((io.swagger.oas.models.media.Schema) annotatedElementSchema18);
        io.swagger.oas.models.media.Schema schema29 = schema4.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01995");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int5 = annotatedElementSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.uniqueItems((java.lang.Boolean) false);
        annotatedElementSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.$ref("*/*");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.minimum(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema15 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str16 = annotatedElementSchema15.getPattern();
        annotatedElementSchema15.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = annotatedElementSchema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = annotatedElementSchema15.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str22 = annotatedElementSchema15.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema23 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str24 = annotatedElementSchema23.getPattern();
        annotatedElementSchema23.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = annotatedElementSchema23.getWriteOnly();
        boolean boolean28 = annotatedElementSchema15.equals((java.lang.Object) annotatedElementSchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        annotatedElementSchema15.setExternalDocs(externalDocumentation29);
        java.lang.String[] strArray32 = new java.lang.String[] { "#/components/schemas/" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        annotatedElementSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema13.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema37 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema37.setPattern("");
        annotatedElementSchema37.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int42 = annotatedElementSchema37.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = annotatedElementSchema37.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = annotatedElementSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML48 = schema45.getXml();
        java.lang.String str49 = schema45.get$ref();
        schema45.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test01996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01996");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        annotatedElementSchema0.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema9 = annotatedElementSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = annotatedElementSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = annotatedElementSchema0.maxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: 0\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMultipleOf(bigDecimal18);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01997");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema2 = annotatedElementSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema4 = annotatedElementSchema0.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema6 = annotatedElementSchema0.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 100);
        schema8.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test01998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01998");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minLength((java.lang.Integer) 10);
        java.lang.String str10 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema12 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.Boolean boolean13 = annotatedElementSchema12.getReadOnly();
        java.lang.Boolean boolean14 = annotatedElementSchema12.getNullable();
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        annotatedElementSchema12.setRequired((java.util.List<java.lang.String>) strList17);
        java.lang.String str20 = annotatedElementSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema22 = annotatedElementSchema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema9.addProperties("#/components/schemas/", (io.swagger.oas.models.media.Schema) annotatedElementSchema12);
        java.math.BigDecimal bigDecimal24 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema25 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema25.setName("#/components/schemas/");
        io.swagger.jaxrs2.OperationParser operationParser29 = new io.swagger.jaxrs2.OperationParser();
        annotatedElementSchema25.addExtension("no description", (java.lang.Object) operationParser29);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema31 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        io.swagger.oas.models.media.Schema schema33 = annotatedElementSchema31.minProperties((java.lang.Integer) 0);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        annotatedElementSchema31.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = annotatedElementSchema25.required((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        io.swagger.oas.models.media.Schema schema43 = schema9.example((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema44 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema44.setPattern("");
        annotatedElementSchema44.addExtension("*/*", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema51 = annotatedElementSchema44.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = annotatedElementSchema44.pattern("hi!");
        schema53.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema58 = schema53.minProperties((java.lang.Integer) 0);
        boolean boolean59 = schema43.equals((java.lang.Object) schema53);
        java.math.BigDecimal bigDecimal60 = schema53.getMinimum();
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(bigDecimal60);
    }

    @Test
    public void test01999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01999");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        io.swagger.oas.annotations.info.Contact contact3 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional4 = io.swagger.jaxrs2.OperationParser.getContact(contact3);
        annotatedElementSchema0.setExample((java.lang.Object) contactOptional4);
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.readOnly((java.lang.Boolean) false);
        java.lang.String str8 = annotatedElementSchema0.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = annotatedElementSchema0.properties(strMap9);
        io.swagger.oas.models.media.Schema schema12 = annotatedElementSchema0.minItems((java.lang.Integer) 1);
        java.lang.reflect.AnnotatedElement annotatedElement13 = annotatedElementSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = annotatedElementSchema0.getExternalDocs();
        java.lang.Integer int15 = annotatedElementSchema0.getMinProperties();
        annotatedElementSchema0.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(contactOptional4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(annotatedElement13);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test02000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test02000");
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema0 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        annotatedElementSchema0.setPattern("");
        annotatedElementSchema0.addExtension("*/*", (java.lang.Object) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = annotatedElementSchema0.properties(strMap6);
        io.swagger.oas.models.media.Schema schema9 = schema7.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema10 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str11 = annotatedElementSchema10.getPattern();
        annotatedElementSchema10.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = annotatedElementSchema10.getWriteOnly();
        io.swagger.oas.models.media.Schema schema16 = annotatedElementSchema10.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement> annotatedElementSchema17 = new io.swagger.oas.models.media.Schema<java.lang.reflect.AnnotatedElement>();
        java.lang.String str18 = annotatedElementSchema17.getPattern();
        io.swagger.oas.models.media.Schema schema19 = annotatedElementSchema10.not((io.swagger.oas.models.media.Schema) annotatedElementSchema17);
        io.swagger.oas.models.media.Schema schema20 = schema9.not(schema19);
        schema9.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema9.$ref("default");
        io.swagger.oas.models.media.Schema schema26 = schema9.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema26.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: [, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema30.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }
}

